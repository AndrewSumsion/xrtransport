/*
 * AUTO-GENERATED FILE - DO NOT EDIT DIRECTLY
 *
 * This file was automatically generated by the code_generation module.
 * Any changes made to this file will be lost when regenerated.
 *
 * To modify this file, edit the corresponding template in:
 * code_generation/templates/structs/deserializer_in_place_header.mako
 */





#ifndef XRTRANSPORT_DESERIALIZER_IN_PLACE_GENERATED_H
#define XRTRANSPORT_DESERIALIZER_IN_PLACE_GENERATED_H

#include "openxr/openxr.h"

#include <iostream>
#include <cstdint>
#include <unordered_map>
#include <cassert>
#include <cstring>
#include <type_traits>

namespace xrtransport {

// Forward declarations (in-place deserializers)

#ifdef XRTRANSPORT_EXT_XR_KHR_android_thread_settings
#endif // XRTRANSPORT_EXT_XR_KHR_android_thread_settings
#ifdef XRTRANSPORT_EXT_XR_KHR_android_surface_swapchain
#endif // XRTRANSPORT_EXT_XR_KHR_android_surface_swapchain
#ifdef XRTRANSPORT_EXT_XR_KHR_composition_layer_cube


void deserialize_in_place(XrCompositionLayerCubeKHR* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerCubeKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_composition_layer_cube
#ifdef XRTRANSPORT_EXT_XR_KHR_android_create_instance


void deserialize_in_place(XrInstanceCreateInfoAndroidKHR* s, std::istream& in);




void deserialize_in_place(XrInstanceCreateInfoAndroidKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_android_create_instance
#ifdef XRTRANSPORT_EXT_XR_KHR_composition_layer_depth


void deserialize_in_place(XrCompositionLayerDepthInfoKHR* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerDepthInfoKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_composition_layer_depth
#ifdef XRTRANSPORT_EXT_XR_KHR_vulkan_swapchain_format_list


void deserialize_in_place(XrVulkanSwapchainFormatListCreateInfoKHR* s, std::istream& in);




void deserialize_in_place(XrVulkanSwapchainFormatListCreateInfoKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_vulkan_swapchain_format_list
#ifdef XRTRANSPORT_EXT_XR_EXT_performance_settings


void deserialize_in_place(XrEventDataPerfSettingsEXT* s, std::istream& in);




void deserialize_in_place(XrEventDataPerfSettingsEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_performance_settings
#ifdef XRTRANSPORT_EXT_XR_EXT_thermal_query
#endif // XRTRANSPORT_EXT_XR_EXT_thermal_query
#ifdef XRTRANSPORT_EXT_XR_KHR_composition_layer_cylinder


void deserialize_in_place(XrCompositionLayerCylinderKHR* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerCylinderKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_composition_layer_cylinder
#ifdef XRTRANSPORT_EXT_XR_KHR_composition_layer_equirect


void deserialize_in_place(XrCompositionLayerEquirectKHR* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerEquirectKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_composition_layer_equirect
#ifdef XRTRANSPORT_EXT_XR_EXT_debug_utils


void deserialize_in_place(XrDebugUtilsObjectNameInfoEXT* s, std::istream& in);




void deserialize_in_place(XrDebugUtilsLabelEXT* s, std::istream& in);




void deserialize_in_place(XrDebugUtilsMessengerCallbackDataEXT* s, std::istream& in);




void deserialize_in_place(XrDebugUtilsMessengerCreateInfoEXT* s, std::istream& in);




void deserialize_in_place(XrDebugUtilsObjectNameInfoEXT* s, std::istream& in);




void deserialize_in_place(XrDebugUtilsMessengerCallbackDataEXT* s, std::istream& in);




void deserialize_in_place(XrDebugUtilsMessengerCreateInfoEXT* s, std::istream& in);




void deserialize_in_place(XrDebugUtilsLabelEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_debug_utils
#ifdef XRTRANSPORT_EXT_XR_KHR_opengl_enable


void deserialize_in_place(XrGraphicsBindingOpenGLWin32KHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingOpenGLXlibKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingOpenGLXcbKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingOpenGLWaylandKHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageOpenGLKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsOpenGLKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingOpenGLWin32KHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingOpenGLXlibKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingOpenGLXcbKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingOpenGLWaylandKHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageOpenGLKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsOpenGLKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_opengl_enable
#ifdef XRTRANSPORT_EXT_XR_KHR_opengl_es_enable


void deserialize_in_place(XrGraphicsBindingOpenGLESAndroidKHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageOpenGLESKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsOpenGLESKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingOpenGLESAndroidKHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageOpenGLESKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsOpenGLESKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_opengl_es_enable
#ifdef XRTRANSPORT_EXT_XR_KHR_vulkan_enable


void deserialize_in_place(XrGraphicsBindingVulkanKHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageVulkanKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsVulkanKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingVulkanKHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageVulkanKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsVulkanKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_vulkan_enable
#ifdef XRTRANSPORT_EXT_XR_KHR_D3D11_enable


void deserialize_in_place(XrGraphicsBindingD3D11KHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageD3D11KHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsD3D11KHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingD3D11KHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageD3D11KHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsD3D11KHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_D3D11_enable
#ifdef XRTRANSPORT_EXT_XR_KHR_D3D12_enable


void deserialize_in_place(XrGraphicsBindingD3D12KHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageD3D12KHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsD3D12KHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingD3D12KHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageD3D12KHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsD3D12KHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_D3D12_enable
#ifdef XRTRANSPORT_EXT_XR_KHR_metal_enable


void deserialize_in_place(XrGraphicsBindingMetalKHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageMetalKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsMetalKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingMetalKHR* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageMetalKHR* s, std::istream& in);




void deserialize_in_place(XrGraphicsRequirementsMetalKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_metal_enable
#ifdef XRTRANSPORT_EXT_XR_EXT_eye_gaze_interaction


void deserialize_in_place(XrSystemEyeGazeInteractionPropertiesEXT* s, std::istream& in);




void deserialize_in_place(XrEyeGazeSampleTimeEXT* s, std::istream& in);




void deserialize_in_place(XrSystemEyeGazeInteractionPropertiesEXT* s, std::istream& in);




void deserialize_in_place(XrEyeGazeSampleTimeEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_eye_gaze_interaction
#ifdef XRTRANSPORT_EXT_XR_KHR_visibility_mask


void deserialize_in_place(XrVisibilityMaskKHR* s, std::istream& in);




void deserialize_in_place(XrEventDataVisibilityMaskChangedKHR* s, std::istream& in);




void deserialize_in_place(XrVisibilityMaskKHR* s, std::istream& in);




void deserialize_in_place(XrEventDataVisibilityMaskChangedKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_visibility_mask
#ifdef XRTRANSPORT_EXT_XR_EXTX_overlay


void deserialize_in_place(XrSessionCreateInfoOverlayEXTX* s, std::istream& in);




void deserialize_in_place(XrEventDataMainSessionVisibilityChangedEXTX* s, std::istream& in);




void deserialize_in_place(XrSessionCreateInfoOverlayEXTX* s, std::istream& in);




void deserialize_in_place(XrEventDataMainSessionVisibilityChangedEXTX* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXTX_overlay
#ifdef XRTRANSPORT_EXT_XR_KHR_composition_layer_color_scale_bias


void deserialize_in_place(XrCompositionLayerColorScaleBiasKHR* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerColorScaleBiasKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_composition_layer_color_scale_bias
#ifdef XRTRANSPORT_EXT_XR_KHR_win32_convert_performance_counter_time
#endif // XRTRANSPORT_EXT_XR_KHR_win32_convert_performance_counter_time
#ifdef XRTRANSPORT_EXT_XR_KHR_convert_timespec_time
#endif // XRTRANSPORT_EXT_XR_KHR_convert_timespec_time
#ifdef XRTRANSPORT_EXT_XR_MSFT_spatial_anchor


void deserialize_in_place(XrSpatialAnchorCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorSpaceCreateInfoMSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_spatial_anchor
#ifdef XRTRANSPORT_EXT_XR_FB_composition_layer_image_layout


void deserialize_in_place(XrCompositionLayerImageLayoutFB* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerImageLayoutFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_composition_layer_image_layout
#ifdef XRTRANSPORT_EXT_XR_FB_composition_layer_alpha_blend


void deserialize_in_place(XrCompositionLayerAlphaBlendFB* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerAlphaBlendFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_composition_layer_alpha_blend
#ifdef XRTRANSPORT_EXT_XR_EXT_view_configuration_depth_range


void deserialize_in_place(XrViewConfigurationDepthRangeEXT* s, std::istream& in);




void deserialize_in_place(XrViewConfigurationDepthRangeEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_view_configuration_depth_range
#ifdef XRTRANSPORT_EXT_XR_EXT_conformance_automation
#endif // XRTRANSPORT_EXT_XR_EXT_conformance_automation
#ifdef XRTRANSPORT_EXT_XR_MNDX_egl_enable


void deserialize_in_place(XrGraphicsBindingEGLMNDX* s, std::istream& in);




void deserialize_in_place(XrGraphicsBindingEGLMNDX* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MNDX_egl_enable
#ifdef XRTRANSPORT_EXT_XR_MSFT_spatial_graph_bridge


void deserialize_in_place(XrSpatialGraphNodeSpaceCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialGraphStaticNodeBindingCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialGraphNodeBindingPropertiesGetInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialGraphNodeBindingPropertiesMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialGraphNodeSpaceCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialGraphStaticNodeBindingCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialGraphNodeBindingPropertiesGetInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialGraphNodeBindingPropertiesMSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_spatial_graph_bridge
#ifdef XRTRANSPORT_EXT_XR_EXT_hand_tracking


void deserialize_in_place(XrSystemHandTrackingPropertiesEXT* s, std::istream& in);




void deserialize_in_place(XrHandTrackerCreateInfoEXT* s, std::istream& in);




void deserialize_in_place(XrHandJointsLocateInfoEXT* s, std::istream& in);




void deserialize_in_place(XrHandJointLocationEXT* s, std::istream& in);




void deserialize_in_place(XrHandJointVelocityEXT* s, std::istream& in);




void deserialize_in_place(XrHandJointLocationsEXT* s, std::istream& in);




void deserialize_in_place(XrHandJointVelocitiesEXT* s, std::istream& in);




void deserialize_in_place(XrSystemHandTrackingPropertiesEXT* s, std::istream& in);




void deserialize_in_place(XrHandTrackerCreateInfoEXT* s, std::istream& in);




void deserialize_in_place(XrHandJointsLocateInfoEXT* s, std::istream& in);




void deserialize_in_place(XrHandJointLocationsEXT* s, std::istream& in);




void deserialize_in_place(XrHandJointVelocitiesEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_hand_tracking
#ifdef XRTRANSPORT_EXT_XR_MSFT_hand_tracking_mesh


void deserialize_in_place(XrSystemHandTrackingMeshPropertiesMSFT* s, std::istream& in);




void deserialize_in_place(XrHandMeshSpaceCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrHandMeshUpdateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrHandMeshMSFT* s, std::istream& in);




void deserialize_in_place(XrHandMeshIndexBufferMSFT* s, std::istream& in);




void deserialize_in_place(XrHandMeshVertexBufferMSFT* s, std::istream& in);




void deserialize_in_place(XrHandMeshVertexMSFT* s, std::istream& in);




void deserialize_in_place(XrHandPoseTypeInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSystemHandTrackingMeshPropertiesMSFT* s, std::istream& in);




void deserialize_in_place(XrHandMeshSpaceCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrHandMeshUpdateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrHandMeshMSFT* s, std::istream& in);




void deserialize_in_place(XrHandPoseTypeInfoMSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_hand_tracking_mesh
#ifdef XRTRANSPORT_EXT_XR_MSFT_secondary_view_configuration


void deserialize_in_place(XrSecondaryViewConfigurationSessionBeginInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationStateMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationFrameStateMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationFrameEndInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationLayerInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationSwapchainCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationSessionBeginInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationStateMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationFrameStateMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationFrameEndInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationLayerInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSecondaryViewConfigurationSwapchainCreateInfoMSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_secondary_view_configuration
#ifdef XRTRANSPORT_EXT_XR_MSFT_controller_model


void deserialize_in_place(XrControllerModelKeyStateMSFT* s, std::istream& in);




void deserialize_in_place(XrControllerModelNodePropertiesMSFT* s, std::istream& in);




void deserialize_in_place(XrControllerModelPropertiesMSFT* s, std::istream& in);




void deserialize_in_place(XrControllerModelNodeStateMSFT* s, std::istream& in);




void deserialize_in_place(XrControllerModelStateMSFT* s, std::istream& in);




void deserialize_in_place(XrControllerModelKeyStateMSFT* s, std::istream& in);




void deserialize_in_place(XrControllerModelNodePropertiesMSFT* s, std::istream& in);




void deserialize_in_place(XrControllerModelPropertiesMSFT* s, std::istream& in);




void deserialize_in_place(XrControllerModelNodeStateMSFT* s, std::istream& in);




void deserialize_in_place(XrControllerModelStateMSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_controller_model
#ifdef XRTRANSPORT_EXT_XR_MSFT_perception_anchor_interop
#endif // XRTRANSPORT_EXT_XR_MSFT_perception_anchor_interop
#ifdef XRTRANSPORT_EXT_XR_EPIC_view_configuration_fov


void deserialize_in_place(XrViewConfigurationViewFovEPIC* s, std::istream& in);




void deserialize_in_place(XrViewConfigurationViewFovEPIC* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EPIC_view_configuration_fov
#ifdef XRTRANSPORT_EXT_XR_MSFT_holographic_window_attachment


void deserialize_in_place(XrHolographicWindowAttachmentMSFT* s, std::istream& in);




void deserialize_in_place(XrHolographicWindowAttachmentMSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_holographic_window_attachment
#ifdef XRTRANSPORT_EXT_XR_MSFT_composition_layer_reprojection


void deserialize_in_place(XrCompositionLayerReprojectionInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerReprojectionPlaneOverrideMSFT* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerReprojectionInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerReprojectionPlaneOverrideMSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_composition_layer_reprojection
#ifdef XRTRANSPORT_EXT_XR_FB_android_surface_swapchain_create


void deserialize_in_place(XrAndroidSurfaceSwapchainCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrAndroidSurfaceSwapchainCreateInfoFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_android_surface_swapchain_create
#ifdef XRTRANSPORT_EXT_XR_FB_swapchain_update_state


void deserialize_in_place(XrSwapchainStateBaseHeaderFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_swapchain_update_state
#ifdef XRTRANSPORT_EXT_XR_FB_composition_layer_secure_content


void deserialize_in_place(XrCompositionLayerSecureContentFB* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerSecureContentFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_composition_layer_secure_content
#ifdef XRTRANSPORT_EXT_XR_FB_body_tracking


void deserialize_in_place(XrBodyJointLocationFB* s, std::istream& in);




void deserialize_in_place(XrSystemBodyTrackingPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrBodyTrackerCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrBodySkeletonJointFB* s, std::istream& in);




void deserialize_in_place(XrBodySkeletonFB* s, std::istream& in);




void deserialize_in_place(XrBodyJointsLocateInfoFB* s, std::istream& in);




void deserialize_in_place(XrBodyJointLocationsFB* s, std::istream& in);




void deserialize_in_place(XrBodyTrackerCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrBodyJointsLocateInfoFB* s, std::istream& in);




void deserialize_in_place(XrSystemBodyTrackingPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrBodyJointLocationsFB* s, std::istream& in);




void deserialize_in_place(XrBodySkeletonFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_body_tracking
#ifdef XRTRANSPORT_EXT_XR_EXT_dpad_binding


void deserialize_in_place(XrInteractionProfileDpadBindingEXT* s, std::istream& in);




void deserialize_in_place(XrInteractionProfileDpadBindingEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_dpad_binding
#ifdef XRTRANSPORT_EXT_XR_VALVE_analog_threshold


void deserialize_in_place(XrInteractionProfileAnalogThresholdVALVE* s, std::istream& in);




void deserialize_in_place(XrInteractionProfileAnalogThresholdVALVE* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_VALVE_analog_threshold
#ifdef XRTRANSPORT_EXT_XR_EXT_hand_joints_motion_range


void deserialize_in_place(XrHandJointsMotionRangeInfoEXT* s, std::istream& in);




void deserialize_in_place(XrHandJointsMotionRangeInfoEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_hand_joints_motion_range
#ifdef XRTRANSPORT_EXT_XR_KHR_loader_init


void deserialize_in_place(XrLoaderInitInfoBaseHeaderKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_loader_init
#ifdef XRTRANSPORT_EXT_XR_KHR_loader_init_android


void deserialize_in_place(XrLoaderInitInfoAndroidKHR* s, std::istream& in);




void deserialize_in_place(XrLoaderInitInfoAndroidKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_loader_init_android
#ifdef XRTRANSPORT_EXT_XR_KHR_vulkan_enable2


void deserialize_in_place(XrVulkanInstanceCreateInfoKHR* s, std::istream& in);




void deserialize_in_place(XrVulkanDeviceCreateInfoKHR* s, std::istream& in);




void deserialize_in_place(XrVulkanGraphicsDeviceGetInfoKHR* s, std::istream& in);




void deserialize_in_place(XrVulkanInstanceCreateInfoKHR* s, std::istream& in);




void deserialize_in_place(XrVulkanDeviceCreateInfoKHR* s, std::istream& in);




void deserialize_in_place(XrVulkanGraphicsDeviceGetInfoKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_vulkan_enable2
#ifdef XRTRANSPORT_EXT_XR_KHR_composition_layer_equirect2


void deserialize_in_place(XrCompositionLayerEquirect2KHR* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerEquirect2KHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_composition_layer_equirect2
#ifdef XRTRANSPORT_EXT_XR_MSFT_scene_understanding


void deserialize_in_place(XrUuidMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneObserverCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrNewSceneComputeInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrVisualMeshComputeLodInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneSphereBoundMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneOrientedBoxBoundMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneFrustumBoundMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneBoundsMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentsMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentsGetInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentLocationMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentLocationsMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentsLocateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneObjectMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneObjectsMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentParentFilterInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneObjectTypesFilterInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrScenePlaneMSFT* s, std::istream& in);




void deserialize_in_place(XrScenePlanesMSFT* s, std::istream& in);




void deserialize_in_place(XrScenePlaneAlignmentFilterInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshesMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshBuffersGetInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshBuffersMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshVertexBufferMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshIndicesUint32MSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshIndicesUint16MSFT* s, std::istream& in);




void deserialize_in_place(XrSceneObserverCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrNewSceneComputeInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrVisualMeshComputeLodInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentsMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentsGetInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentLocationsMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentsLocateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneObjectsMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneComponentParentFilterInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneObjectTypesFilterInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrScenePlanesMSFT* s, std::istream& in);




void deserialize_in_place(XrScenePlaneAlignmentFilterInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshesMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshBuffersGetInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshBuffersMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshVertexBufferMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshIndicesUint32MSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMeshIndicesUint16MSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_scene_understanding
#ifdef XRTRANSPORT_EXT_XR_MSFT_scene_understanding_serialization


void deserialize_in_place(XrSerializedSceneFragmentDataGetInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrDeserializeSceneFragmentMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneDeserializeInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSerializedSceneFragmentDataGetInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneDeserializeInfoMSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_scene_understanding_serialization
#ifdef XRTRANSPORT_EXT_XR_FB_display_refresh_rate


void deserialize_in_place(XrEventDataDisplayRefreshRateChangedFB* s, std::istream& in);




void deserialize_in_place(XrEventDataDisplayRefreshRateChangedFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_display_refresh_rate
#ifdef XRTRANSPORT_EXT_XR_HTCX_vive_tracker_interaction


void deserialize_in_place(XrViveTrackerPathsHTCX* s, std::istream& in);




void deserialize_in_place(XrEventDataViveTrackerConnectedHTCX* s, std::istream& in);




void deserialize_in_place(XrViveTrackerPathsHTCX* s, std::istream& in);




void deserialize_in_place(XrEventDataViveTrackerConnectedHTCX* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_HTCX_vive_tracker_interaction
#ifdef XRTRANSPORT_EXT_XR_HTC_facial_tracking


void deserialize_in_place(XrSystemFacialTrackingPropertiesHTC* s, std::istream& in);




void deserialize_in_place(XrFacialExpressionsHTC* s, std::istream& in);




void deserialize_in_place(XrFacialTrackerCreateInfoHTC* s, std::istream& in);




void deserialize_in_place(XrSystemFacialTrackingPropertiesHTC* s, std::istream& in);




void deserialize_in_place(XrFacialTrackerCreateInfoHTC* s, std::istream& in);




void deserialize_in_place(XrFacialExpressionsHTC* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_HTC_facial_tracking
#ifdef XRTRANSPORT_EXT_XR_FB_color_space


void deserialize_in_place(XrSystemColorSpacePropertiesFB* s, std::istream& in);




void deserialize_in_place(XrSystemColorSpacePropertiesFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_color_space
#ifdef XRTRANSPORT_EXT_XR_FB_hand_tracking_mesh


void deserialize_in_place(XrVector4sFB* s, std::istream& in);




void deserialize_in_place(XrHandTrackingMeshFB* s, std::istream& in);




void deserialize_in_place(XrHandTrackingScaleFB* s, std::istream& in);




void deserialize_in_place(XrHandTrackingMeshFB* s, std::istream& in);




void deserialize_in_place(XrHandTrackingScaleFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_hand_tracking_mesh
#ifdef XRTRANSPORT_EXT_XR_FB_hand_tracking_aim


void deserialize_in_place(XrHandTrackingAimStateFB* s, std::istream& in);




void deserialize_in_place(XrHandTrackingAimStateFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_hand_tracking_aim
#ifdef XRTRANSPORT_EXT_XR_FB_hand_tracking_capsules


void deserialize_in_place(XrHandCapsuleFB* s, std::istream& in);




void deserialize_in_place(XrHandTrackingCapsulesStateFB* s, std::istream& in);




void deserialize_in_place(XrHandTrackingCapsulesStateFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_hand_tracking_capsules
#ifdef XRTRANSPORT_EXT_XR_FB_spatial_entity


void deserialize_in_place(XrSystemSpatialEntityPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceComponentStatusSetInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceComponentStatusFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpatialAnchorCreateCompleteFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceSetStatusCompleteFB* s, std::istream& in);




void deserialize_in_place(XrSystemSpatialEntityPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceComponentStatusSetInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceComponentStatusFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpatialAnchorCreateCompleteFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceSetStatusCompleteFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_spatial_entity
#ifdef XRTRANSPORT_EXT_XR_FB_foveation


void deserialize_in_place(XrFoveationProfileCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrSwapchainCreateInfoFoveationFB* s, std::istream& in);




void deserialize_in_place(XrSwapchainStateFoveationFB* s, std::istream& in);




void deserialize_in_place(XrFoveationProfileCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrSwapchainCreateInfoFoveationFB* s, std::istream& in);




void deserialize_in_place(XrSwapchainStateFoveationFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_foveation
#ifdef XRTRANSPORT_EXT_XR_FB_foveation_configuration


void deserialize_in_place(XrFoveationLevelProfileCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrFoveationLevelProfileCreateInfoFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_foveation_configuration
#ifdef XRTRANSPORT_EXT_XR_FB_keyboard_tracking


void deserialize_in_place(XrSystemKeyboardTrackingPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrKeyboardTrackingDescriptionFB* s, std::istream& in);




void deserialize_in_place(XrKeyboardSpaceCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrKeyboardTrackingQueryFB* s, std::istream& in);




void deserialize_in_place(XrKeyboardSpaceCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrKeyboardTrackingQueryFB* s, std::istream& in);




void deserialize_in_place(XrSystemKeyboardTrackingPropertiesFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_keyboard_tracking
#ifdef XRTRANSPORT_EXT_XR_FB_triangle_mesh


void deserialize_in_place(XrTriangleMeshCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrTriangleMeshCreateInfoFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_triangle_mesh
#ifdef XRTRANSPORT_EXT_XR_FB_passthrough


void deserialize_in_place(XrSystemPassthroughPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrSystemPassthroughProperties2FB* s, std::istream& in);




void deserialize_in_place(XrPassthroughCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughLayerCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerPassthroughFB* s, std::istream& in);




void deserialize_in_place(XrGeometryInstanceCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrGeometryInstanceTransformFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughStyleFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorMapMonoToRgbaFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorMapMonoToMonoFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughBrightnessContrastSaturationFB* s, std::istream& in);




void deserialize_in_place(XrEventDataPassthroughStateChangedFB* s, std::istream& in);




void deserialize_in_place(XrSystemPassthroughPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughLayerCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerPassthroughFB* s, std::istream& in);




void deserialize_in_place(XrGeometryInstanceCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrGeometryInstanceTransformFB* s, std::istream& in);




void deserialize_in_place(XrSystemPassthroughProperties2FB* s, std::istream& in);




void deserialize_in_place(XrPassthroughStyleFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorMapMonoToRgbaFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorMapMonoToMonoFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughBrightnessContrastSaturationFB* s, std::istream& in);




void deserialize_in_place(XrEventDataPassthroughStateChangedFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_passthrough
#ifdef XRTRANSPORT_EXT_XR_FB_render_model


void deserialize_in_place(XrRenderModelPathInfoFB* s, std::istream& in);




void deserialize_in_place(XrRenderModelPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrRenderModelBufferFB* s, std::istream& in);




void deserialize_in_place(XrRenderModelLoadInfoFB* s, std::istream& in);




void deserialize_in_place(XrSystemRenderModelPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrRenderModelCapabilitiesRequestFB* s, std::istream& in);




void deserialize_in_place(XrRenderModelPathInfoFB* s, std::istream& in);




void deserialize_in_place(XrRenderModelPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrRenderModelBufferFB* s, std::istream& in);




void deserialize_in_place(XrRenderModelLoadInfoFB* s, std::istream& in);




void deserialize_in_place(XrSystemRenderModelPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrRenderModelCapabilitiesRequestFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_render_model
#ifdef XRTRANSPORT_EXT_XR_KHR_binding_modification


void deserialize_in_place(XrBindingModificationsKHR* s, std::istream& in);




void deserialize_in_place(XrBindingModificationBaseHeaderKHR* s, std::istream& in);




void deserialize_in_place(XrBindingModificationsKHR* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_KHR_binding_modification
#ifdef XRTRANSPORT_EXT_XR_VARJO_foveated_rendering


void deserialize_in_place(XrViewLocateFoveatedRenderingVARJO* s, std::istream& in);




void deserialize_in_place(XrFoveatedViewConfigurationViewVARJO* s, std::istream& in);




void deserialize_in_place(XrSystemFoveatedRenderingPropertiesVARJO* s, std::istream& in);




void deserialize_in_place(XrViewLocateFoveatedRenderingVARJO* s, std::istream& in);




void deserialize_in_place(XrFoveatedViewConfigurationViewVARJO* s, std::istream& in);




void deserialize_in_place(XrSystemFoveatedRenderingPropertiesVARJO* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_VARJO_foveated_rendering
#ifdef XRTRANSPORT_EXT_XR_VARJO_composition_layer_depth_test


void deserialize_in_place(XrCompositionLayerDepthTestVARJO* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerDepthTestVARJO* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_VARJO_composition_layer_depth_test
#ifdef XRTRANSPORT_EXT_XR_VARJO_environment_depth_estimation
#endif // XRTRANSPORT_EXT_XR_VARJO_environment_depth_estimation
#ifdef XRTRANSPORT_EXT_XR_VARJO_marker_tracking


void deserialize_in_place(XrSystemMarkerTrackingPropertiesVARJO* s, std::istream& in);




void deserialize_in_place(XrEventDataMarkerTrackingUpdateVARJO* s, std::istream& in);




void deserialize_in_place(XrMarkerSpaceCreateInfoVARJO* s, std::istream& in);




void deserialize_in_place(XrSystemMarkerTrackingPropertiesVARJO* s, std::istream& in);




void deserialize_in_place(XrEventDataMarkerTrackingUpdateVARJO* s, std::istream& in);




void deserialize_in_place(XrMarkerSpaceCreateInfoVARJO* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_VARJO_marker_tracking
#ifdef XRTRANSPORT_EXT_XR_VARJO_view_offset
#endif // XRTRANSPORT_EXT_XR_VARJO_view_offset
#ifdef XRTRANSPORT_EXT_XR_ML_frame_end_info


void deserialize_in_place(XrFrameEndInfoML* s, std::istream& in);




void deserialize_in_place(XrFrameEndInfoML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_frame_end_info
#ifdef XRTRANSPORT_EXT_XR_ML_global_dimmer


void deserialize_in_place(XrGlobalDimmerFrameEndInfoML* s, std::istream& in);




void deserialize_in_place(XrGlobalDimmerFrameEndInfoML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_global_dimmer
#ifdef XRTRANSPORT_EXT_XR_ML_compat


void deserialize_in_place(XrCoordinateSpaceCreateInfoML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_compat
#ifdef XRTRANSPORT_EXT_XR_ML_marker_understanding


void deserialize_in_place(XrSystemMarkerUnderstandingPropertiesML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorCreateInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorArucoInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorSizeInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorAprilTagInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorCustomProfileInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorSnapshotInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorStateML* s, std::istream& in);




void deserialize_in_place(XrMarkerSpaceCreateInfoML* s, std::istream& in);




void deserialize_in_place(XrSystemMarkerUnderstandingPropertiesML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorCreateInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorArucoInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorSizeInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorAprilTagInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorCustomProfileInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorSnapshotInfoML* s, std::istream& in);




void deserialize_in_place(XrMarkerDetectorStateML* s, std::istream& in);




void deserialize_in_place(XrMarkerSpaceCreateInfoML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_marker_understanding
#ifdef XRTRANSPORT_EXT_XR_ML_localization_map


void deserialize_in_place(XrLocalizationMapML* s, std::istream& in);




void deserialize_in_place(XrEventDataLocalizationChangedML* s, std::istream& in);




void deserialize_in_place(XrLocalizationMapQueryInfoBaseHeaderML* s, std::istream& in);




void deserialize_in_place(XrMapLocalizationRequestInfoML* s, std::istream& in);




void deserialize_in_place(XrLocalizationMapImportInfoML* s, std::istream& in);




void deserialize_in_place(XrLocalizationEnableEventsInfoML* s, std::istream& in);




void deserialize_in_place(XrLocalizationMapML* s, std::istream& in);




void deserialize_in_place(XrEventDataLocalizationChangedML* s, std::istream& in);




void deserialize_in_place(XrMapLocalizationRequestInfoML* s, std::istream& in);




void deserialize_in_place(XrLocalizationMapImportInfoML* s, std::istream& in);




void deserialize_in_place(XrLocalizationEnableEventsInfoML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_localization_map
#ifdef XRTRANSPORT_EXT_XR_ML_spatial_anchors


void deserialize_in_place(XrSpatialAnchorsCreateInfoBaseHeaderML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsCreateInfoFromPoseML* s, std::istream& in);




void deserialize_in_place(XrCreateSpatialAnchorsCompletionML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorStateML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsCreateInfoFromPoseML* s, std::istream& in);




void deserialize_in_place(XrCreateSpatialAnchorsCompletionML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorStateML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_spatial_anchors
#ifdef XRTRANSPORT_EXT_XR_ML_spatial_anchors_storage


void deserialize_in_place(XrSpatialAnchorsCreateStorageInfoML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsQueryInfoBaseHeaderML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsQueryInfoRadiusML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsQueryCompletionML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsCreateInfoFromUuidsML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsPublishInfoML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsPublishCompletionML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsDeleteInfoML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsDeleteCompletionML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsUpdateExpirationInfoML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsUpdateExpirationCompletionML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsPublishCompletionDetailsML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsDeleteCompletionDetailsML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsUpdateExpirationCompletionDetailsML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorCompletionResultML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsCreateStorageInfoML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsQueryInfoRadiusML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsQueryCompletionML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsCreateInfoFromUuidsML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsPublishInfoML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsPublishCompletionML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsDeleteInfoML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsDeleteCompletionML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsUpdateExpirationInfoML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsUpdateExpirationCompletionML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsPublishCompletionDetailsML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsDeleteCompletionDetailsML* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorsUpdateExpirationCompletionDetailsML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_spatial_anchors_storage
#ifdef XRTRANSPORT_EXT_XR_ML_user_calibration


void deserialize_in_place(XrEventDataHeadsetFitChangedML* s, std::istream& in);




void deserialize_in_place(XrEventDataEyeCalibrationChangedML* s, std::istream& in);




void deserialize_in_place(XrUserCalibrationEnableEventsInfoML* s, std::istream& in);




void deserialize_in_place(XrEventDataHeadsetFitChangedML* s, std::istream& in);




void deserialize_in_place(XrEventDataEyeCalibrationChangedML* s, std::istream& in);




void deserialize_in_place(XrUserCalibrationEnableEventsInfoML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_user_calibration
#ifdef XRTRANSPORT_EXT_XR_MSFT_spatial_anchor_persistence


void deserialize_in_place(XrSpatialAnchorPersistenceNameMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorPersistenceInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorPersistenceInfoMSFT* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_spatial_anchor_persistence
#ifdef XRTRANSPORT_EXT_XR_MSFT_scene_marker


void deserialize_in_place(XrSceneMarkerMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMarkersMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMarkerTypeFilterMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMarkerQRCodeMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMarkerQRCodesMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMarkersMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMarkerTypeFilterMSFT* s, std::istream& in);




void deserialize_in_place(XrSceneMarkerQRCodesMSFT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MSFT_scene_marker
#ifdef XRTRANSPORT_EXT_XR_KHR_extended_struct_name_lengths
#endif // XRTRANSPORT_EXT_XR_KHR_extended_struct_name_lengths
#ifdef XRTRANSPORT_EXT_XR_FB_spatial_entity_query


void deserialize_in_place(XrSpaceQueryInfoBaseHeaderFB* s, std::istream& in);




void deserialize_in_place(XrSpaceFilterInfoBaseHeaderFB* s, std::istream& in);




void deserialize_in_place(XrSpaceQueryInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceStorageLocationFilterInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceUuidFilterInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceComponentFilterInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceQueryResultFB* s, std::istream& in);




void deserialize_in_place(XrSpaceQueryResultsFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceQueryResultsAvailableFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceQueryCompleteFB* s, std::istream& in);




void deserialize_in_place(XrSpaceQueryInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceQueryResultsFB* s, std::istream& in);




void deserialize_in_place(XrSpaceStorageLocationFilterInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceUuidFilterInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceComponentFilterInfoFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceQueryResultsAvailableFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceQueryCompleteFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_spatial_entity_query
#ifdef XRTRANSPORT_EXT_XR_FB_spatial_entity_storage


void deserialize_in_place(XrSpaceSaveInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceEraseInfoFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceSaveCompleteFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceEraseCompleteFB* s, std::istream& in);




void deserialize_in_place(XrSpaceSaveInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceEraseInfoFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceSaveCompleteFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceEraseCompleteFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_spatial_entity_storage
#ifdef XRTRANSPORT_EXT_XR_OCULUS_audio_device_guid
#endif // XRTRANSPORT_EXT_XR_OCULUS_audio_device_guid
#ifdef XRTRANSPORT_EXT_XR_FB_foveation_vulkan


void deserialize_in_place(XrSwapchainImageFoveationVulkanFB* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageFoveationVulkanFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_foveation_vulkan
#ifdef XRTRANSPORT_EXT_XR_FB_swapchain_update_state_android_surface


void deserialize_in_place(XrSwapchainStateAndroidSurfaceDimensionsFB* s, std::istream& in);




void deserialize_in_place(XrSwapchainStateAndroidSurfaceDimensionsFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_swapchain_update_state_android_surface
#ifdef XRTRANSPORT_EXT_XR_FB_swapchain_update_state_opengl_es


void deserialize_in_place(XrSwapchainStateSamplerOpenGLESFB* s, std::istream& in);




void deserialize_in_place(XrSwapchainStateSamplerOpenGLESFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_swapchain_update_state_opengl_es
#ifdef XRTRANSPORT_EXT_XR_FB_swapchain_update_state_vulkan


void deserialize_in_place(XrSwapchainStateSamplerVulkanFB* s, std::istream& in);




void deserialize_in_place(XrSwapchainStateSamplerVulkanFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_swapchain_update_state_vulkan
#ifdef XRTRANSPORT_EXT_XR_FB_spatial_entity_sharing


void deserialize_in_place(XrSpaceShareInfoFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceShareCompleteFB* s, std::istream& in);




void deserialize_in_place(XrSpaceShareInfoFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceShareCompleteFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_spatial_entity_sharing
#ifdef XRTRANSPORT_EXT_XR_FB_space_warp


void deserialize_in_place(XrCompositionLayerSpaceWarpInfoFB* s, std::istream& in);




void deserialize_in_place(XrSystemSpaceWarpPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerSpaceWarpInfoFB* s, std::istream& in);




void deserialize_in_place(XrSystemSpaceWarpPropertiesFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_space_warp
#ifdef XRTRANSPORT_EXT_XR_FB_haptic_amplitude_envelope


void deserialize_in_place(XrHapticAmplitudeEnvelopeVibrationFB* s, std::istream& in);




void deserialize_in_place(XrHapticAmplitudeEnvelopeVibrationFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_haptic_amplitude_envelope
#ifdef XRTRANSPORT_EXT_XR_FB_scene


void deserialize_in_place(XrOffset3DfFB* s, std::istream& in);




void deserialize_in_place(XrRect3DfFB* s, std::istream& in);




void deserialize_in_place(XrSemanticLabelsFB* s, std::istream& in);




void deserialize_in_place(XrRoomLayoutFB* s, std::istream& in);




void deserialize_in_place(XrBoundary2DFB* s, std::istream& in);




void deserialize_in_place(XrSemanticLabelsSupportInfoFB* s, std::istream& in);




void deserialize_in_place(XrSemanticLabelsFB* s, std::istream& in);




void deserialize_in_place(XrRoomLayoutFB* s, std::istream& in);




void deserialize_in_place(XrBoundary2DFB* s, std::istream& in);




void deserialize_in_place(XrSemanticLabelsSupportInfoFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_scene
#ifdef XRTRANSPORT_EXT_XR_ALMALENCE_digital_lens_control


void deserialize_in_place(XrDigitalLensControlALMALENCE* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ALMALENCE_digital_lens_control
#ifdef XRTRANSPORT_EXT_XR_FB_scene_capture


void deserialize_in_place(XrEventDataSceneCaptureCompleteFB* s, std::istream& in);




void deserialize_in_place(XrSceneCaptureRequestInfoFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSceneCaptureCompleteFB* s, std::istream& in);




void deserialize_in_place(XrSceneCaptureRequestInfoFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_scene_capture
#ifdef XRTRANSPORT_EXT_XR_FB_spatial_entity_container


void deserialize_in_place(XrSpaceContainerFB* s, std::istream& in);




void deserialize_in_place(XrSpaceContainerFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_spatial_entity_container
#ifdef XRTRANSPORT_EXT_XR_META_foveation_eye_tracked


void deserialize_in_place(XrFoveationEyeTrackedProfileCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrFoveationEyeTrackedStateMETA* s, std::istream& in);




void deserialize_in_place(XrSystemFoveationEyeTrackedPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrFoveationEyeTrackedProfileCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrFoveationEyeTrackedStateMETA* s, std::istream& in);




void deserialize_in_place(XrSystemFoveationEyeTrackedPropertiesMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_foveation_eye_tracked
#ifdef XRTRANSPORT_EXT_XR_FB_face_tracking


void deserialize_in_place(XrSystemFaceTrackingPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrFaceTrackerCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrFaceExpressionInfoFB* s, std::istream& in);




void deserialize_in_place(XrFaceExpressionStatusFB* s, std::istream& in);




void deserialize_in_place(XrFaceExpressionWeightsFB* s, std::istream& in);




void deserialize_in_place(XrSystemFaceTrackingPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrFaceTrackerCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrFaceExpressionInfoFB* s, std::istream& in);




void deserialize_in_place(XrFaceExpressionWeightsFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_face_tracking
#ifdef XRTRANSPORT_EXT_XR_FB_eye_tracking_social


void deserialize_in_place(XrEyeGazeFB* s, std::istream& in);




void deserialize_in_place(XrEyeTrackerCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrEyeGazesInfoFB* s, std::istream& in);




void deserialize_in_place(XrSystemEyeTrackingPropertiesFB* s, std::istream& in);




void deserialize_in_place(XrEyeGazesFB* s, std::istream& in);




void deserialize_in_place(XrEyeTrackerCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrEyeGazesInfoFB* s, std::istream& in);




void deserialize_in_place(XrEyeGazesFB* s, std::istream& in);




void deserialize_in_place(XrSystemEyeTrackingPropertiesFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_eye_tracking_social
#ifdef XRTRANSPORT_EXT_XR_FB_passthrough_keyboard_hands


void deserialize_in_place(XrPassthroughKeyboardHandsIntensityFB* s, std::istream& in);




void deserialize_in_place(XrPassthroughKeyboardHandsIntensityFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_passthrough_keyboard_hands
#ifdef XRTRANSPORT_EXT_XR_FB_composition_layer_settings


void deserialize_in_place(XrCompositionLayerSettingsFB* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerSettingsFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_composition_layer_settings
#ifdef XRTRANSPORT_EXT_XR_FB_haptic_pcm


void deserialize_in_place(XrHapticPcmVibrationFB* s, std::istream& in);




void deserialize_in_place(XrDevicePcmSampleRateStateFB* s, std::istream& in);




void deserialize_in_place(XrHapticPcmVibrationFB* s, std::istream& in);




void deserialize_in_place(XrDevicePcmSampleRateStateFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_haptic_pcm
#ifdef XRTRANSPORT_EXT_XR_EXT_frame_synthesis


void deserialize_in_place(XrFrameSynthesisInfoEXT* s, std::istream& in);




void deserialize_in_place(XrFrameSynthesisConfigViewEXT* s, std::istream& in);




void deserialize_in_place(XrFrameSynthesisInfoEXT* s, std::istream& in);




void deserialize_in_place(XrFrameSynthesisConfigViewEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_frame_synthesis
#ifdef XRTRANSPORT_EXT_XR_FB_composition_layer_depth_test


void deserialize_in_place(XrCompositionLayerDepthTestFB* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerDepthTestFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_composition_layer_depth_test
#ifdef XRTRANSPORT_EXT_XR_META_local_dimming


void deserialize_in_place(XrLocalDimmingFrameEndInfoMETA* s, std::istream& in);




void deserialize_in_place(XrLocalDimmingFrameEndInfoMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_local_dimming
#ifdef XRTRANSPORT_EXT_XR_META_passthrough_preferences


void deserialize_in_place(XrPassthroughPreferencesMETA* s, std::istream& in);




void deserialize_in_place(XrPassthroughPreferencesMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_passthrough_preferences
#ifdef XRTRANSPORT_EXT_XR_META_virtual_keyboard


void deserialize_in_place(XrSystemVirtualKeyboardPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardSpaceCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardLocationInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardModelVisibilitySetInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardAnimationStateMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardModelAnimationStatesMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardTextureDataMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardInputInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardTextContextChangeInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataVirtualKeyboardCommitTextMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataVirtualKeyboardBackspaceMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataVirtualKeyboardEnterMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataVirtualKeyboardShownMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataVirtualKeyboardHiddenMETA* s, std::istream& in);




void deserialize_in_place(XrSystemVirtualKeyboardPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardSpaceCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardLocationInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardModelVisibilitySetInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardAnimationStateMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardModelAnimationStatesMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardTextureDataMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardInputInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVirtualKeyboardTextContextChangeInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataVirtualKeyboardCommitTextMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataVirtualKeyboardBackspaceMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataVirtualKeyboardEnterMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataVirtualKeyboardShownMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataVirtualKeyboardHiddenMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_virtual_keyboard
#ifdef XRTRANSPORT_EXT_XR_OCULUS_external_camera


void deserialize_in_place(XrExternalCameraIntrinsicsOCULUS* s, std::istream& in);




void deserialize_in_place(XrExternalCameraExtrinsicsOCULUS* s, std::istream& in);




void deserialize_in_place(XrExternalCameraOCULUS* s, std::istream& in);




void deserialize_in_place(XrExternalCameraOCULUS* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_OCULUS_external_camera
#ifdef XRTRANSPORT_EXT_XR_META_vulkan_swapchain_create_info


void deserialize_in_place(XrVulkanSwapchainCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrVulkanSwapchainCreateInfoMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_vulkan_swapchain_create_info
#ifdef XRTRANSPORT_EXT_XR_META_performance_metrics


void deserialize_in_place(XrPerformanceMetricsStateMETA* s, std::istream& in);




void deserialize_in_place(XrPerformanceMetricsCounterMETA* s, std::istream& in);




void deserialize_in_place(XrPerformanceMetricsStateMETA* s, std::istream& in);




void deserialize_in_place(XrPerformanceMetricsCounterMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_performance_metrics
#ifdef XRTRANSPORT_EXT_XR_FB_spatial_entity_storage_batch


void deserialize_in_place(XrSpaceListSaveInfoFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceListSaveCompleteFB* s, std::istream& in);




void deserialize_in_place(XrSpaceListSaveInfoFB* s, std::istream& in);




void deserialize_in_place(XrEventDataSpaceListSaveCompleteFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_spatial_entity_storage_batch
#ifdef XRTRANSPORT_EXT_XR_FB_spatial_entity_user


void deserialize_in_place(XrSpaceUserCreateInfoFB* s, std::istream& in);




void deserialize_in_place(XrSpaceUserCreateInfoFB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_spatial_entity_user
#ifdef XRTRANSPORT_EXT_XR_META_headset_id


void deserialize_in_place(XrSystemHeadsetIdPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrSystemHeadsetIdPropertiesMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_headset_id
#ifdef XRTRANSPORT_EXT_XR_META_recommended_layer_resolution


void deserialize_in_place(XrRecommendedLayerResolutionMETA* s, std::istream& in);




void deserialize_in_place(XrRecommendedLayerResolutionGetInfoMETA* s, std::istream& in);




void deserialize_in_place(XrRecommendedLayerResolutionMETA* s, std::istream& in);




void deserialize_in_place(XrRecommendedLayerResolutionGetInfoMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_recommended_layer_resolution
#ifdef XRTRANSPORT_EXT_XR_META_passthrough_color_lut


void deserialize_in_place(XrPassthroughColorLutDataMETA* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorLutCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorLutUpdateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorMapLutMETA* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorMapInterpolatedLutMETA* s, std::istream& in);




void deserialize_in_place(XrSystemPassthroughColorLutPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrSystemPassthroughColorLutPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorLutCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorLutUpdateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorMapLutMETA* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorMapInterpolatedLutMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_passthrough_color_lut
#ifdef XRTRANSPORT_EXT_XR_META_spatial_entity_mesh


void deserialize_in_place(XrSpaceTriangleMeshGetInfoMETA* s, std::istream& in);




void deserialize_in_place(XrSpaceTriangleMeshMETA* s, std::istream& in);




void deserialize_in_place(XrSpaceTriangleMeshGetInfoMETA* s, std::istream& in);




void deserialize_in_place(XrSpaceTriangleMeshMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_spatial_entity_mesh
#ifdef XRTRANSPORT_EXT_XR_META_body_tracking_full_body


void deserialize_in_place(XrSystemPropertiesBodyTrackingFullBodyMETA* s, std::istream& in);




void deserialize_in_place(XrSystemPropertiesBodyTrackingFullBodyMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_body_tracking_full_body
#ifdef XRTRANSPORT_EXT_XR_META_passthrough_layer_resumed_event


void deserialize_in_place(XrEventDataPassthroughLayerResumedMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataPassthroughLayerResumedMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_passthrough_layer_resumed_event
#ifdef XRTRANSPORT_EXT_XR_FB_face_tracking2


void deserialize_in_place(XrSystemFaceTrackingProperties2FB* s, std::istream& in);




void deserialize_in_place(XrFaceTrackerCreateInfo2FB* s, std::istream& in);




void deserialize_in_place(XrFaceExpressionInfo2FB* s, std::istream& in);




void deserialize_in_place(XrFaceExpressionWeights2FB* s, std::istream& in);




void deserialize_in_place(XrSystemFaceTrackingProperties2FB* s, std::istream& in);




void deserialize_in_place(XrFaceTrackerCreateInfo2FB* s, std::istream& in);




void deserialize_in_place(XrFaceExpressionInfo2FB* s, std::istream& in);




void deserialize_in_place(XrFaceExpressionWeights2FB* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_FB_face_tracking2
#ifdef XRTRANSPORT_EXT_XR_META_spatial_entity_sharing


void deserialize_in_place(XrSystemSpatialEntitySharingPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrShareSpacesRecipientBaseHeaderMETA* s, std::istream& in);




void deserialize_in_place(XrShareSpacesInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataShareSpacesCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrSystemSpatialEntitySharingPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrShareSpacesInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataShareSpacesCompleteMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_spatial_entity_sharing
#ifdef XRTRANSPORT_EXT_XR_META_environment_depth


void deserialize_in_place(XrEnvironmentDepthProviderCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthSwapchainCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthSwapchainStateMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthImageAcquireInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthImageViewMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthImageMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthHandRemovalSetInfoMETA* s, std::istream& in);




void deserialize_in_place(XrSystemEnvironmentDepthPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthProviderCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthSwapchainCreateInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthSwapchainStateMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthImageAcquireInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthImageViewMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthImageMETA* s, std::istream& in);




void deserialize_in_place(XrEnvironmentDepthHandRemovalSetInfoMETA* s, std::istream& in);




void deserialize_in_place(XrSystemEnvironmentDepthPropertiesMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_environment_depth
#ifdef XRTRANSPORT_EXT_XR_QCOM_tracking_optimization_settings
#endif // XRTRANSPORT_EXT_XR_QCOM_tracking_optimization_settings
#ifdef XRTRANSPORT_EXT_XR_HTC_passthrough


void deserialize_in_place(XrPassthroughCreateInfoHTC* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorHTC* s, std::istream& in);




void deserialize_in_place(XrPassthroughMeshTransformInfoHTC* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerPassthroughHTC* s, std::istream& in);




void deserialize_in_place(XrPassthroughCreateInfoHTC* s, std::istream& in);




void deserialize_in_place(XrPassthroughColorHTC* s, std::istream& in);




void deserialize_in_place(XrPassthroughMeshTransformInfoHTC* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerPassthroughHTC* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_HTC_passthrough
#ifdef XRTRANSPORT_EXT_XR_HTC_foveation


void deserialize_in_place(XrFoveationApplyInfoHTC* s, std::istream& in);




void deserialize_in_place(XrFoveationConfigurationHTC* s, std::istream& in);




void deserialize_in_place(XrFoveationDynamicModeInfoHTC* s, std::istream& in);




void deserialize_in_place(XrFoveationCustomModeInfoHTC* s, std::istream& in);




void deserialize_in_place(XrFoveationApplyInfoHTC* s, std::istream& in);




void deserialize_in_place(XrFoveationDynamicModeInfoHTC* s, std::istream& in);




void deserialize_in_place(XrFoveationCustomModeInfoHTC* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_HTC_foveation
#ifdef XRTRANSPORT_EXT_XR_HTC_anchor


void deserialize_in_place(XrSystemAnchorPropertiesHTC* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorCreateInfoHTC* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorNameHTC* s, std::istream& in);




void deserialize_in_place(XrSystemAnchorPropertiesHTC* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorCreateInfoHTC* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_HTC_anchor
#ifdef XRTRANSPORT_EXT_XR_HTC_body_tracking


void deserialize_in_place(XrSystemBodyTrackingPropertiesHTC* s, std::istream& in);




void deserialize_in_place(XrBodyTrackerCreateInfoHTC* s, std::istream& in);




void deserialize_in_place(XrBodyJointsLocateInfoHTC* s, std::istream& in);




void deserialize_in_place(XrBodyJointLocationsHTC* s, std::istream& in);




void deserialize_in_place(XrBodyJointLocationHTC* s, std::istream& in);




void deserialize_in_place(XrBodySkeletonHTC* s, std::istream& in);




void deserialize_in_place(XrSystemBodyTrackingPropertiesHTC* s, std::istream& in);




void deserialize_in_place(XrBodyTrackerCreateInfoHTC* s, std::istream& in);




void deserialize_in_place(XrBodyJointsLocateInfoHTC* s, std::istream& in);




void deserialize_in_place(XrBodyJointLocationsHTC* s, std::istream& in);




void deserialize_in_place(XrBodySkeletonHTC* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_HTC_body_tracking
#ifdef XRTRANSPORT_EXT_XR_EXT_active_action_set_priority


void deserialize_in_place(XrActiveActionSetPrioritiesEXT* s, std::istream& in);




void deserialize_in_place(XrActiveActionSetPriorityEXT* s, std::istream& in);




void deserialize_in_place(XrActiveActionSetPrioritiesEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_active_action_set_priority
#ifdef XRTRANSPORT_EXT_XR_MNDX_force_feedback_curl


void deserialize_in_place(XrSystemForceFeedbackCurlPropertiesMNDX* s, std::istream& in);




void deserialize_in_place(XrForceFeedbackCurlApplyLocationsMNDX* s, std::istream& in);




void deserialize_in_place(XrForceFeedbackCurlApplyLocationMNDX* s, std::istream& in);




void deserialize_in_place(XrSystemForceFeedbackCurlPropertiesMNDX* s, std::istream& in);




void deserialize_in_place(XrForceFeedbackCurlApplyLocationsMNDX* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_MNDX_force_feedback_curl
#ifdef XRTRANSPORT_EXT_XR_BD_body_tracking


void deserialize_in_place(XrSystemBodyTrackingPropertiesBD* s, std::istream& in);




void deserialize_in_place(XrBodyTrackerCreateInfoBD* s, std::istream& in);




void deserialize_in_place(XrBodyJointsLocateInfoBD* s, std::istream& in);




void deserialize_in_place(XrBodyJointLocationsBD* s, std::istream& in);




void deserialize_in_place(XrBodyJointLocationBD* s, std::istream& in);




void deserialize_in_place(XrBodyTrackerCreateInfoBD* s, std::istream& in);




void deserialize_in_place(XrBodyJointsLocateInfoBD* s, std::istream& in);




void deserialize_in_place(XrBodyJointLocationsBD* s, std::istream& in);




void deserialize_in_place(XrSystemBodyTrackingPropertiesBD* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_BD_body_tracking
#ifdef XRTRANSPORT_EXT_XR_BD_spatial_sensing


void deserialize_in_place(XrSystemSpatialSensingPropertiesBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentGetInfoBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataBaseHeaderBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityLocationGetInfoBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataLocationBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataSemanticBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataBoundingBox2DBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataPolygonBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataBoundingBox3DBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataTriangleMeshBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataProviderCreateInfoBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataProviderStartInfoBD* s, std::istream& in);




void deserialize_in_place(XrEventDataSenseDataProviderStateChangedBD* s, std::istream& in);




void deserialize_in_place(XrEventDataSenseDataUpdatedBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataQueryInfoBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataQueryCompletionBD* s, std::istream& in);




void deserialize_in_place(XrQueriedSenseDataGetInfoBD* s, std::istream& in);




void deserialize_in_place(XrQueriedSenseDataBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityStateBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataFilterUuidBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataFilterSemanticBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityAnchorCreateInfoBD* s, std::istream& in);




void deserialize_in_place(XrAnchorSpaceCreateInfoBD* s, std::istream& in);




void deserialize_in_place(XrSystemSpatialSensingPropertiesBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentGetInfoBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityLocationGetInfoBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataLocationBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataSemanticBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataBoundingBox2DBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataPolygonBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataBoundingBox3DBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityComponentDataTriangleMeshBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataProviderCreateInfoBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataProviderStartInfoBD* s, std::istream& in);




void deserialize_in_place(XrEventDataSenseDataProviderStateChangedBD* s, std::istream& in);




void deserialize_in_place(XrEventDataSenseDataUpdatedBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataQueryInfoBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataQueryCompletionBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataFilterUuidBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataFilterSemanticBD* s, std::istream& in);




void deserialize_in_place(XrQueriedSenseDataGetInfoBD* s, std::istream& in);




void deserialize_in_place(XrQueriedSenseDataBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityStateBD* s, std::istream& in);




void deserialize_in_place(XrSpatialEntityAnchorCreateInfoBD* s, std::istream& in);




void deserialize_in_place(XrAnchorSpaceCreateInfoBD* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_BD_spatial_sensing
#ifdef XRTRANSPORT_EXT_XR_BD_spatial_anchor


void deserialize_in_place(XrSystemSpatialAnchorPropertiesBD* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorCreateInfoBD* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorCreateCompletionBD* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorPersistInfoBD* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorUnpersistInfoBD* s, std::istream& in);




void deserialize_in_place(XrSystemSpatialAnchorPropertiesBD* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorCreateInfoBD* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorCreateCompletionBD* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorPersistInfoBD* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorUnpersistInfoBD* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_BD_spatial_anchor
#ifdef XRTRANSPORT_EXT_XR_BD_spatial_anchor_sharing


void deserialize_in_place(XrSystemSpatialAnchorSharingPropertiesBD* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorShareInfoBD* s, std::istream& in);




void deserialize_in_place(XrSharedSpatialAnchorDownloadInfoBD* s, std::istream& in);




void deserialize_in_place(XrSystemSpatialAnchorSharingPropertiesBD* s, std::istream& in);




void deserialize_in_place(XrSpatialAnchorShareInfoBD* s, std::istream& in);




void deserialize_in_place(XrSharedSpatialAnchorDownloadInfoBD* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_BD_spatial_anchor_sharing
#ifdef XRTRANSPORT_EXT_XR_BD_spatial_scene


void deserialize_in_place(XrSystemSpatialScenePropertiesBD* s, std::istream& in);




void deserialize_in_place(XrSceneCaptureInfoBD* s, std::istream& in);




void deserialize_in_place(XrSystemSpatialScenePropertiesBD* s, std::istream& in);




void deserialize_in_place(XrSceneCaptureInfoBD* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_BD_spatial_scene
#ifdef XRTRANSPORT_EXT_XR_BD_spatial_mesh


void deserialize_in_place(XrSystemSpatialMeshPropertiesBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataProviderCreateInfoSpatialMeshBD* s, std::istream& in);




void deserialize_in_place(XrSystemSpatialMeshPropertiesBD* s, std::istream& in);




void deserialize_in_place(XrSenseDataProviderCreateInfoSpatialMeshBD* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_BD_spatial_mesh
#ifdef XRTRANSPORT_EXT_XR_BD_future_progress


void deserialize_in_place(XrFuturePollResultProgressBD* s, std::istream& in);




void deserialize_in_place(XrFuturePollResultProgressBD* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_BD_future_progress
#ifdef XRTRANSPORT_EXT_XR_EXT_hand_tracking_data_source


void deserialize_in_place(XrHandTrackingDataSourceInfoEXT* s, std::istream& in);




void deserialize_in_place(XrHandTrackingDataSourceStateEXT* s, std::istream& in);




void deserialize_in_place(XrHandTrackingDataSourceInfoEXT* s, std::istream& in);




void deserialize_in_place(XrHandTrackingDataSourceStateEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_hand_tracking_data_source
#ifdef XRTRANSPORT_EXT_XR_EXT_plane_detection


void deserialize_in_place(XrSystemPlaneDetectionPropertiesEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorCreateInfoEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorBeginInfoEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorGetInfoEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorLocationEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorLocationsEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorPolygonBufferEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorCreateInfoEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorBeginInfoEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorGetInfoEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorLocationsEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorLocationEXT* s, std::istream& in);




void deserialize_in_place(XrPlaneDetectorPolygonBufferEXT* s, std::istream& in);




void deserialize_in_place(XrSystemPlaneDetectionPropertiesEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_plane_detection
#ifdef XRTRANSPORT_EXT_XR_EXT_future


void deserialize_in_place(XrFutureCancelInfoEXT* s, std::istream& in);




void deserialize_in_place(XrFuturePollInfoEXT* s, std::istream& in);




void deserialize_in_place(XrFutureCompletionBaseHeaderEXT* s, std::istream& in);




void deserialize_in_place(XrFutureCompletionEXT* s, std::istream& in);




void deserialize_in_place(XrFuturePollResultEXT* s, std::istream& in);




void deserialize_in_place(XrFutureCancelInfoEXT* s, std::istream& in);




void deserialize_in_place(XrFuturePollInfoEXT* s, std::istream& in);




void deserialize_in_place(XrFutureCompletionEXT* s, std::istream& in);




void deserialize_in_place(XrFuturePollResultEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_future
#ifdef XRTRANSPORT_EXT_XR_EXT_user_presence


void deserialize_in_place(XrEventDataUserPresenceChangedEXT* s, std::istream& in);




void deserialize_in_place(XrSystemUserPresencePropertiesEXT* s, std::istream& in);




void deserialize_in_place(XrEventDataUserPresenceChangedEXT* s, std::istream& in);




void deserialize_in_place(XrSystemUserPresencePropertiesEXT* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_EXT_user_presence
#ifdef XRTRANSPORT_EXT_XR_ML_system_notifications


void deserialize_in_place(XrSystemNotificationsSetInfoML* s, std::istream& in);




void deserialize_in_place(XrSystemNotificationsSetInfoML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_system_notifications
#ifdef XRTRANSPORT_EXT_XR_ML_world_mesh_detection


void deserialize_in_place(XrWorldMeshDetectorCreateInfoML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBlockStateML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshStateRequestInfoML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshStateRequestCompletionML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBufferRecommendedSizeInfoML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBufferSizeML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBufferML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBlockRequestML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshGetInfoML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBlockML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshRequestCompletionInfoML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshRequestCompletionML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshDetectorCreateInfoML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshStateRequestInfoML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBlockStateML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshStateRequestCompletionML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBufferRecommendedSizeInfoML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBufferSizeML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBufferML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBlockRequestML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshGetInfoML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshBlockML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshRequestCompletionML* s, std::istream& in);




void deserialize_in_place(XrWorldMeshRequestCompletionInfoML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_world_mesh_detection
#ifdef XRTRANSPORT_EXT_XR_ML_facial_expression


void deserialize_in_place(XrSystemFacialExpressionPropertiesML* s, std::istream& in);




void deserialize_in_place(XrFacialExpressionClientCreateInfoML* s, std::istream& in);




void deserialize_in_place(XrFacialExpressionBlendShapeGetInfoML* s, std::istream& in);




void deserialize_in_place(XrFacialExpressionBlendShapePropertiesML* s, std::istream& in);




void deserialize_in_place(XrSystemFacialExpressionPropertiesML* s, std::istream& in);




void deserialize_in_place(XrFacialExpressionClientCreateInfoML* s, std::istream& in);




void deserialize_in_place(XrFacialExpressionBlendShapeGetInfoML* s, std::istream& in);




void deserialize_in_place(XrFacialExpressionBlendShapePropertiesML* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_ML_facial_expression
#ifdef XRTRANSPORT_EXT_XR_META_simultaneous_hands_and_controllers


void deserialize_in_place(XrSystemSimultaneousHandsAndControllersPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrSimultaneousHandsAndControllersTrackingResumeInfoMETA* s, std::istream& in);




void deserialize_in_place(XrSimultaneousHandsAndControllersTrackingPauseInfoMETA* s, std::istream& in);




void deserialize_in_place(XrSystemSimultaneousHandsAndControllersPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrSimultaneousHandsAndControllersTrackingResumeInfoMETA* s, std::istream& in);




void deserialize_in_place(XrSimultaneousHandsAndControllersTrackingPauseInfoMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_simultaneous_hands_and_controllers
#ifdef XRTRANSPORT_EXT_XR_META_colocation_discovery


void deserialize_in_place(XrColocationDiscoveryStartInfoMETA* s, std::istream& in);




void deserialize_in_place(XrColocationDiscoveryStopInfoMETA* s, std::istream& in);




void deserialize_in_place(XrColocationAdvertisementStartInfoMETA* s, std::istream& in);




void deserialize_in_place(XrColocationAdvertisementStopInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataStartColocationAdvertisementCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataStopColocationAdvertisementCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataColocationAdvertisementCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataStartColocationDiscoveryCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataColocationDiscoveryResultMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataColocationDiscoveryCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataStopColocationDiscoveryCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrSystemColocationDiscoveryPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrColocationDiscoveryStartInfoMETA* s, std::istream& in);




void deserialize_in_place(XrColocationDiscoveryStopInfoMETA* s, std::istream& in);




void deserialize_in_place(XrColocationAdvertisementStartInfoMETA* s, std::istream& in);




void deserialize_in_place(XrColocationAdvertisementStopInfoMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataStartColocationAdvertisementCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataStopColocationAdvertisementCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataColocationAdvertisementCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataStartColocationDiscoveryCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataColocationDiscoveryResultMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataColocationDiscoveryCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrEventDataStopColocationDiscoveryCompleteMETA* s, std::istream& in);




void deserialize_in_place(XrSystemColocationDiscoveryPropertiesMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_colocation_discovery
#ifdef XRTRANSPORT_EXT_XR_META_spatial_entity_group_sharing


void deserialize_in_place(XrSystemSpatialEntityGroupSharingPropertiesMETA* s, std::istream& in);




void deserialize_in_place(XrShareSpacesRecipientGroupsMETA* s, std::istream& in);




void deserialize_in_place(XrSpaceGroupUuidFilterInfoMETA* s, std::istream& in);




void deserialize_in_place(XrShareSpacesRecipientGroupsMETA* s, std::istream& in);




void deserialize_in_place(XrSpaceGroupUuidFilterInfoMETA* s, std::istream& in);




void deserialize_in_place(XrSystemSpatialEntityGroupSharingPropertiesMETA* s, std::istream& in);


#endif // XRTRANSPORT_EXT_XR_META_spatial_entity_group_sharing


void deserialize_in_place(XrActionCreateInfo* s, std::istream& in);




void deserialize_in_place(XrActionSetCreateInfo* s, std::istream& in);




void deserialize_in_place(XrActionSpaceCreateInfo* s, std::istream& in);




void deserialize_in_place(XrActionStateBoolean* s, std::istream& in);




void deserialize_in_place(XrActionStateFloat* s, std::istream& in);




void deserialize_in_place(XrActionStateGetInfo* s, std::istream& in);




void deserialize_in_place(XrActionStatePose* s, std::istream& in);




void deserialize_in_place(XrActionStateVector2f* s, std::istream& in);




void deserialize_in_place(XrActionSuggestedBinding* s, std::istream& in);




void deserialize_in_place(XrActionsSyncInfo* s, std::istream& in);




void deserialize_in_place(XrActiveActionSet* s, std::istream& in);




void deserialize_in_place(XrApiLayerProperties* s, std::istream& in);




void deserialize_in_place(XrApplicationInfo* s, std::istream& in);




void deserialize_in_place(XrBodySkeletonJointHTC* s, std::istream& in);




void deserialize_in_place(XrBoundSourcesForActionEnumerateInfo* s, std::istream& in);




void deserialize_in_place(XrBoxf* s, std::istream& in);




void deserialize_in_place(XrColor3f* s, std::istream& in);




void deserialize_in_place(XrColor4f* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerBaseHeader* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerProjection* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerProjectionView* s, std::istream& in);




void deserialize_in_place(XrCompositionLayerQuad* s, std::istream& in);




void deserialize_in_place(XrEventDataBaseHeader* s, std::istream& in);




void deserialize_in_place(XrEventDataBuffer* s, std::istream& in);




void deserialize_in_place(XrEventDataEventsLost* s, std::istream& in);




void deserialize_in_place(XrEventDataInstanceLossPending* s, std::istream& in);




void deserialize_in_place(XrEventDataInteractionProfileChanged* s, std::istream& in);




void deserialize_in_place(XrEventDataReferenceSpaceChangePending* s, std::istream& in);




void deserialize_in_place(XrEventDataSessionStateChanged* s, std::istream& in);




void deserialize_in_place(XrExtensionProperties* s, std::istream& in);




void deserialize_in_place(XrExtent2Df* s, std::istream& in);




void deserialize_in_place(XrExtent2Di* s, std::istream& in);




void deserialize_in_place(XrExtent3Df* s, std::istream& in);




void deserialize_in_place(XrFovf* s, std::istream& in);




void deserialize_in_place(XrFrameBeginInfo* s, std::istream& in);




void deserialize_in_place(XrFrameEndInfo* s, std::istream& in);




void deserialize_in_place(XrFrameState* s, std::istream& in);




void deserialize_in_place(XrFrameWaitInfo* s, std::istream& in);




void deserialize_in_place(XrFrustumf* s, std::istream& in);




void deserialize_in_place(XrHapticActionInfo* s, std::istream& in);




void deserialize_in_place(XrHapticBaseHeader* s, std::istream& in);




void deserialize_in_place(XrHapticVibration* s, std::istream& in);




void deserialize_in_place(XrInputSourceLocalizedNameGetInfo* s, std::istream& in);




void deserialize_in_place(XrInstanceCreateInfo* s, std::istream& in);




void deserialize_in_place(XrInstanceProperties* s, std::istream& in);




void deserialize_in_place(XrInteractionProfileState* s, std::istream& in);




void deserialize_in_place(XrInteractionProfileSuggestedBinding* s, std::istream& in);




void deserialize_in_place(XrOffset2Df* s, std::istream& in);




void deserialize_in_place(XrOffset2Di* s, std::istream& in);




void deserialize_in_place(XrPosef* s, std::istream& in);




void deserialize_in_place(XrQuaternionf* s, std::istream& in);




void deserialize_in_place(XrRect2Df* s, std::istream& in);




void deserialize_in_place(XrRect2Di* s, std::istream& in);




void deserialize_in_place(XrReferenceSpaceCreateInfo* s, std::istream& in);




void deserialize_in_place(XrSessionActionSetsAttachInfo* s, std::istream& in);




void deserialize_in_place(XrSessionBeginInfo* s, std::istream& in);




void deserialize_in_place(XrSessionCreateInfo* s, std::istream& in);




void deserialize_in_place(XrSpaceLocation* s, std::istream& in);




void deserialize_in_place(XrSpaceLocationData* s, std::istream& in);




void deserialize_in_place(XrSpaceLocations* s, std::istream& in);




void deserialize_in_place(XrSpaceVelocities* s, std::istream& in);




void deserialize_in_place(XrSpaceVelocity* s, std::istream& in);




void deserialize_in_place(XrSpaceVelocityData* s, std::istream& in);




void deserialize_in_place(XrSpacesLocateInfo* s, std::istream& in);




void deserialize_in_place(XrSpheref* s, std::istream& in);




void deserialize_in_place(XrSwapchainCreateInfo* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageAcquireInfo* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageBaseHeader* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageReleaseInfo* s, std::istream& in);




void deserialize_in_place(XrSwapchainImageWaitInfo* s, std::istream& in);




void deserialize_in_place(XrSwapchainSubImage* s, std::istream& in);




void deserialize_in_place(XrSystemGetInfo* s, std::istream& in);




void deserialize_in_place(XrSystemGraphicsProperties* s, std::istream& in);




void deserialize_in_place(XrSystemProperties* s, std::istream& in);




void deserialize_in_place(XrSystemTrackingProperties* s, std::istream& in);




void deserialize_in_place(XrUuid* s, std::istream& in);




void deserialize_in_place(XrVector2f* s, std::istream& in);




void deserialize_in_place(XrVector3f* s, std::istream& in);




void deserialize_in_place(XrVector4f* s, std::istream& in);




void deserialize_in_place(XrView* s, std::istream& in);




void deserialize_in_place(XrViewConfigurationProperties* s, std::istream& in);




void deserialize_in_place(XrViewConfigurationView* s, std::istream& in);




void deserialize_in_place(XrViewLocateInfo* s, std::istream& in);




void deserialize_in_place(XrViewState* s, std::istream& in);




// Struct deserializer lookup for in-place deserialization
// Only to be used with OpenXR pNext structs
using StructDeserializerInPlace = void(*)(XrBaseOutStructure*, std::istream&);
#define STRUCT_DESERIALIZER_IN_PLACE_PTR(t) (reinterpret_cast<StructDeserializerInPlace>(static_cast<void(*)(t*, std::istream&)>(&deserialize_in_place)))

extern std::unordered_map<XrStructureType, StructDeserializerInPlace> deserializer_in_place_lookup_table;

StructDeserializerInPlace deserializer_in_place_lookup(XrStructureType struct_type);

// Generic in-place deserializers
template <typename T>
void deserialize_in_place(T* x, std::istream& in) {
    static_assert(
        !std::is_class<T>::value,
        "T must be a supported type"
    );
    in.read(reinterpret_cast<char*>(const_cast<typename std::remove_const<T>::type*>(x)), sizeof(T));
}

template <typename T>
void deserialize_in_place_array(T* x, std::size_t len, std::istream& in) {
    for (std::size_t i = 0; i < len; i++) {
        deserialize_in_place(&x[i], in);
    }
}

// For in-place deserialization, pointers must already point to valid memory
// For weird const-correctness reasons, we need a const version too
template <typename T>
void deserialize_in_place_ptr(T** x, std::istream& in) {
    std::uint32_t len{};
    deserialize_in_place(&len, in);
    if (len && *x != nullptr) {
        deserialize_in_place_array(*x, len, in);
    } else if (len && *x == nullptr) {
        // TODO: proper error handling
        assert(false && "Attempted to deserialize in-place into null pointer");
    }
    // If len == 0, pointer should remain as-is (could be null or pointing to valid memory)
}

template <typename T>
void deserialize_in_place_ptr(const T** x, std::istream& in) {
    std::uint32_t len{};
    deserialize_in_place(&len, in);
    if (len && *x != nullptr) {
        deserialize_in_place_array(const_cast<T*>(*x), len, in);
    } else if (len && *x == nullptr) {
        // TODO: proper error handling
        assert(false && "Attempted to deserialize in-place into null pointer");
    }
    // If len == 0, pointer should remain as-is (could be null or pointing to valid memory)
}

void deserialize_in_place_xr(const void** p_s, std::istream& in);
void deserialize_in_place_xr(void** p_s, std::istream& in);

} // namespace xrtransport

#endif // XRTRANSPORT_DESERIALIZER_IN_PLACE_GENERATED_H