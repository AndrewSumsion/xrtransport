#include "serializer.h"
#include "deserializer.h"

#include <cassert>
#include <cstring>
#include <iostream>

using namespace xrtransport;

// Used to buffer serializer outputs then read them to deserialize
// Effectively a simple dynamic-size FIFO queue
class ByteStreamBuffer : public std::streambuf {
public:
    ByteStreamBuffer() {
        setp(nullptr, nullptr); // Disable the write buffer initially
    }

    // Write single byte
    int_type overflow(int_type ch) override {
        if (ch != EOF) {
            buffer.push_back(static_cast<char>(ch));
        }
        return ch;
    }

    // Write a block of bytes
    std::streamsize xsputn(const char* s, std::streamsize count) override {
        buffer.insert(buffer.end(), s, s + count);
        return count;
    }

    // Read single byte
    int_type underflow() override {
        if (read_pos >= buffer.size()) {
            return traits_type::eof();
        }
        return traits_type::to_int_type(buffer[read_pos]);
    }

    int_type uflow() override {
        if (read_pos >= buffer.size()) {
            return traits_type::eof();
        }
        return traits_type::to_int_type(buffer[read_pos++]);
    }

    std::streamsize xsgetn(char* s, std::streamsize count) override {
        std::streamsize n = std::min(count, static_cast<std::streamsize>(buffer.size() - read_pos));
        std::copy(buffer.begin() + read_pos, buffer.begin() + read_pos + n, s);
        read_pos += n;
        return n;
    }

    // Reset reading pointer to beginning
    void reset_read() {
        read_pos = 0;
    }

    // Clear everything
    void clear() {
        buffer.clear();
        read_pos = 0;
    }

    std::size_t size() const {
        return buffer.size();
    }

private:
    std::vector<char> buffer;
    std::size_t read_pos = 0;
};

int main() {
    //
    // Struct initialization
    //

    XrSwapchainImageReleaseInfo item0{};
    item0.type = XR_TYPE_SWAPCHAIN_IMAGE_RELEASE_INFO;
    XrEventDataInteractionProfileChanged item0_next[1]{};
    item0_next[0].type = XR_TYPE_EVENT_DATA_INTERACTION_PROFILE_CHANGED;
    item0_next[0].next = nullptr;
    item0_next[0].session = (XrSession) 0x4ec10fc6fee29f53;
    item0.next = item0_next;
    XrSpaceLocationData item1{};
    item1.locationFlags = (XrSpaceLocationFlags) 0x5d685155e98cd7d9;
    item1.pose.orientation.x = (float) 0xe66eb1186613c33d;
    item1.pose.orientation.y = (float) 0xe369ab3d591d3569;
    item1.pose.orientation.z = (float) 0xd51f25e60490392a;
    item1.pose.orientation.w = (float) 0x1e5876bf982e524e;
    item1.pose.position.x = (float) 0xf522dfdc3f12cc0c;
    item1.pose.position.y = (float) 0xda1298c4cbb452ae;
    item1.pose.position.z = (float) 0x9ac68d26ea43fe43;
    XrSpaceVelocities item2{};
    item2.type = XR_TYPE_SPACE_VELOCITIES;
    item2.next = nullptr;
    item2.velocityCount = 20;
    XrSpaceVelocityData item2_velocities[20]{};
    item2_velocities[0].velocityFlags = (XrSpaceVelocityFlags) 0x127e2cc80b3bbf03;
    item2_velocities[0].linearVelocity.x = (float) 0xa28f38bd0463522c;
    item2_velocities[0].linearVelocity.y = (float) 0x1ac66dea32700980;
    item2_velocities[0].linearVelocity.z = (float) 0x5074d85b9194e696;
    item2_velocities[0].angularVelocity.x = (float) 0x41dd9a9fa508c8e8;
    item2_velocities[0].angularVelocity.y = (float) 0xb5710cdb11190839;
    item2_velocities[0].angularVelocity.z = (float) 0x311e18c91413b58c;
    item2_velocities[1].velocityFlags = (XrSpaceVelocityFlags) 0xe0a9467740c7c159;
    item2_velocities[1].linearVelocity.x = (float) 0x2663ba178df6073d;
    item2_velocities[1].linearVelocity.y = (float) 0x6e10d8ac0af84fd9;
    item2_velocities[1].linearVelocity.z = (float) 0xf8a82a8dbdb78c3f;
    item2_velocities[1].angularVelocity.x = (float) 0xa24898ef0e531c17;
    item2_velocities[1].angularVelocity.y = (float) 0x6164b99c58e8abfc;
    item2_velocities[1].angularVelocity.z = (float) 0xb7a60ec1437f7e5c;
    item2_velocities[2].velocityFlags = (XrSpaceVelocityFlags) 0x22d99277310791bb;
    item2_velocities[2].linearVelocity.x = (float) 0x9cf8d97f6451fadd;
    item2_velocities[2].linearVelocity.y = (float) 0x40bc08848d85b315;
    item2_velocities[2].linearVelocity.z = (float) 0x5570b28ed7b9ba35;
    item2_velocities[2].angularVelocity.x = (float) 0xb7c8cf3528ba4db2;
    item2_velocities[2].angularVelocity.y = (float) 0xa14680d52591d5f;
    item2_velocities[2].angularVelocity.z = (float) 0x999613938a3b319f;
    item2_velocities[3].velocityFlags = (XrSpaceVelocityFlags) 0x6ffedc96a42ca3e6;
    item2_velocities[3].linearVelocity.x = (float) 0xdfbe3b62670370e8;
    item2_velocities[3].linearVelocity.y = (float) 0xead13c41399fcfd6;
    item2_velocities[3].linearVelocity.z = (float) 0x3c9921edbf0d1338;
    item2_velocities[3].angularVelocity.x = (float) 0xb556ec05d02819d9;
    item2_velocities[3].angularVelocity.y = (float) 0xb1ac56a275f53e2a;
    item2_velocities[3].angularVelocity.z = (float) 0x4674252dee87e8a2;
    item2_velocities[4].velocityFlags = (XrSpaceVelocityFlags) 0x4d21b0cb3e36eee3;
    item2_velocities[4].linearVelocity.x = (float) 0xedce70dc54117a0e;
    item2_velocities[4].linearVelocity.y = (float) 0xf82272a99478e208;
    item2_velocities[4].linearVelocity.z = (float) 0x7f0b4c558f78a664;
    item2_velocities[4].angularVelocity.x = (float) 0x26101d6e040e5825;
    item2_velocities[4].angularVelocity.y = (float) 0xfa5035167745f6e1;
    item2_velocities[4].angularVelocity.z = (float) 0x9d823b35bba0cbd5;
    item2_velocities[5].velocityFlags = (XrSpaceVelocityFlags) 0x556d1ddb8c273f1;
    item2_velocities[5].linearVelocity.x = (float) 0x315baf27ca6cff02;
    item2_velocities[5].linearVelocity.y = (float) 0xc0776b023caf3403;
    item2_velocities[5].linearVelocity.z = (float) 0xcc99eb12a1f3ab06;
    item2_velocities[5].angularVelocity.x = (float) 0xac58bc7d67f25bfa;
    item2_velocities[5].angularVelocity.y = (float) 0x50151c6dc099797c;
    item2_velocities[5].angularVelocity.z = (float) 0x6d20bd39b0f2badc;
    item2_velocities[6].velocityFlags = (XrSpaceVelocityFlags) 0xa1570f48caceb3dd;
    item2_velocities[6].linearVelocity.x = (float) 0x2b7e9608c8f4cee6;
    item2_velocities[6].linearVelocity.y = (float) 0x31990fffdbdfdb26;
    item2_velocities[6].linearVelocity.z = (float) 0x32648cd6af2b4fdb;
    item2_velocities[6].angularVelocity.x = (float) 0xe97ad106a47bfe3f;
    item2_velocities[6].angularVelocity.y = (float) 0x987c63cf93d56de2;
    item2_velocities[6].angularVelocity.z = (float) 0x6e3dacc90f12121b;
    item2_velocities[7].velocityFlags = (XrSpaceVelocityFlags) 0xc9c0c490ae39d9aa;
    item2_velocities[7].linearVelocity.x = (float) 0x12e9831d31b56da5;
    item2_velocities[7].linearVelocity.y = (float) 0x22db2ca5a94de172;
    item2_velocities[7].linearVelocity.z = (float) 0x948e6c1545e4c644;
    item2_velocities[7].angularVelocity.x = (float) 0x3e9a5775f3bf77ec;
    item2_velocities[7].angularVelocity.y = (float) 0x497cff13eaa5bf76;
    item2_velocities[7].angularVelocity.z = (float) 0xeb28e3b1b084410f;
    item2_velocities[8].velocityFlags = (XrSpaceVelocityFlags) 0xd9f6bca7d86e01e0;
    item2_velocities[8].linearVelocity.x = (float) 0x7c78397d4ca4cd0e;
    item2_velocities[8].linearVelocity.y = (float) 0xe7b8cdb9a53727e;
    item2_velocities[8].linearVelocity.z = (float) 0xcaae117ec26c7625;
    item2_velocities[8].angularVelocity.x = (float) 0xc307a9d7d1f78baf;
    item2_velocities[8].angularVelocity.y = (float) 0x65ae497d6bf5f8f7;
    item2_velocities[8].angularVelocity.z = (float) 0x31392cb2c797a45;
    item2_velocities[9].velocityFlags = (XrSpaceVelocityFlags) 0x308442bd2f0ab265;
    item2_velocities[9].linearVelocity.x = (float) 0x306743716cd08c92;
    item2_velocities[9].linearVelocity.y = (float) 0x6afaf64c28707959;
    item2_velocities[9].linearVelocity.z = (float) 0xf4e88aad1497184f;
    item2_velocities[9].angularVelocity.x = (float) 0x2fa10751805f567c;
    item2_velocities[9].angularVelocity.y = (float) 0x4e327d5dc1a11dff;
    item2_velocities[9].angularVelocity.z = (float) 0x481191a75247636b;
    item2_velocities[10].velocityFlags = (XrSpaceVelocityFlags) 0x53646b1cfee7d9fd;
    item2_velocities[10].linearVelocity.x = (float) 0x37514178b2d9e691;
    item2_velocities[10].linearVelocity.y = (float) 0x89dcdc0ae550eabc;
    item2_velocities[10].linearVelocity.z = (float) 0xf327d42fb261a84d;
    item2_velocities[10].angularVelocity.x = (float) 0xfaa4876465f73e39;
    item2_velocities[10].angularVelocity.y = (float) 0x66244131cd05f916;
    item2_velocities[10].angularVelocity.z = (float) 0xa4de0fa4faf4bf35;
    item2_velocities[11].velocityFlags = (XrSpaceVelocityFlags) 0xb89250666f1c7a5e;
    item2_velocities[11].linearVelocity.x = (float) 0xfdf64cc21517c64a;
    item2_velocities[11].linearVelocity.y = (float) 0x369320c5f4d932fd;
    item2_velocities[11].linearVelocity.z = (float) 0xbed86e625cf909db;
    item2_velocities[11].angularVelocity.x = (float) 0x250b68ac0845024e;
    item2_velocities[11].angularVelocity.y = (float) 0x68a2ad5c9eed7637;
    item2_velocities[11].angularVelocity.z = (float) 0x43ea6daed2a87911;
    item2_velocities[12].velocityFlags = (XrSpaceVelocityFlags) 0x56bd43df7bfb015f;
    item2_velocities[12].linearVelocity.x = (float) 0x9e4c13ee5f956c93;
    item2_velocities[12].linearVelocity.y = (float) 0x78e97e8ae0bd6d10;
    item2_velocities[12].linearVelocity.z = (float) 0x7bff8ae147ef37c6;
    item2_velocities[12].angularVelocity.x = (float) 0xbb3f956726b9b05e;
    item2_velocities[12].angularVelocity.y = (float) 0x29c1fcf3b2fefd09;
    item2_velocities[12].angularVelocity.z = (float) 0xa922933b0b315a10;
    item2_velocities[13].velocityFlags = (XrSpaceVelocityFlags) 0x1fa7ef6f5a0a0add;
    item2_velocities[13].linearVelocity.x = (float) 0xa81d04c333010b25;
    item2_velocities[13].linearVelocity.y = (float) 0x83e412adbb100261;
    item2_velocities[13].linearVelocity.z = (float) 0x675711b4f3fe1593;
    item2_velocities[13].angularVelocity.x = (float) 0xcfe06e563318e2bc;
    item2_velocities[13].angularVelocity.y = (float) 0xd51ceddab7795459;
    item2_velocities[13].angularVelocity.z = (float) 0xe8ebd27ca97386d0;
    item2_velocities[14].velocityFlags = (XrSpaceVelocityFlags) 0xeb7cc914b95b32df;
    item2_velocities[14].linearVelocity.x = (float) 0x494ee3565122540c;
    item2_velocities[14].linearVelocity.y = (float) 0x412ce7bf0b153a85;
    item2_velocities[14].linearVelocity.z = (float) 0x8934d2f644d07f24;
    item2_velocities[14].angularVelocity.x = (float) 0xe019cf5f08d74c5a;
    item2_velocities[14].angularVelocity.y = (float) 0xd535be69e2b40d48;
    item2_velocities[14].angularVelocity.z = (float) 0x23cbab5def58301d;
    item2_velocities[15].velocityFlags = (XrSpaceVelocityFlags) 0xe2f4fc517f35f951;
    item2_velocities[15].linearVelocity.x = (float) 0x561ef6ea89b3dbf;
    item2_velocities[15].linearVelocity.y = (float) 0x959f4db312dbb5e1;
    item2_velocities[15].linearVelocity.z = (float) 0xbca2014c6234db04;
    item2_velocities[15].angularVelocity.x = (float) 0x20b1eed5978e4900;
    item2_velocities[15].angularVelocity.y = (float) 0xbf037ba260e9c111;
    item2_velocities[15].angularVelocity.z = (float) 0x1384c3552db44714;
    item2_velocities[16].velocityFlags = (XrSpaceVelocityFlags) 0x2117120a54ab329a;
    item2_velocities[16].linearVelocity.x = (float) 0x91594a52a4aac9c5;
    item2_velocities[16].linearVelocity.y = (float) 0x8610a613b654b8e1;
    item2_velocities[16].linearVelocity.z = (float) 0x217909c82f899893;
    item2_velocities[16].angularVelocity.x = (float) 0x69b37f5eadafa5f5;
    item2_velocities[16].angularVelocity.y = (float) 0x81181f0b2718bcb6;
    item2_velocities[16].angularVelocity.z = (float) 0xab3d472158d034f1;
    item2_velocities[17].velocityFlags = (XrSpaceVelocityFlags) 0x4d8df934efb6fab4;
    item2_velocities[17].linearVelocity.x = (float) 0xb9ecff4f6295b1c5;
    item2_velocities[17].linearVelocity.y = (float) 0x8373759c9fadde3a;
    item2_velocities[17].linearVelocity.z = (float) 0x7d1b965c468048e;
    item2_velocities[17].angularVelocity.x = (float) 0xc61fdb7e3c0218b9;
    item2_velocities[17].angularVelocity.y = (float) 0xb3484b073b479909;
    item2_velocities[17].angularVelocity.z = (float) 0x3f4674f357e7f058;
    item2_velocities[18].velocityFlags = (XrSpaceVelocityFlags) 0xb5f50c8d981a4378;
    item2_velocities[18].linearVelocity.x = (float) 0xb6e0dfc356a7b732;
    item2_velocities[18].linearVelocity.y = (float) 0xddeaf197fbd81d07;
    item2_velocities[18].linearVelocity.z = (float) 0x19a73279e90be331;
    item2_velocities[18].angularVelocity.x = (float) 0x6638b2c96c605fa9;
    item2_velocities[18].angularVelocity.y = (float) 0x3bcc47de126dfd0c;
    item2_velocities[18].angularVelocity.z = (float) 0x671dfb202efef734;
    item2_velocities[19].velocityFlags = (XrSpaceVelocityFlags) 0x41866137572f48ed;
    item2_velocities[19].linearVelocity.x = (float) 0x11d6a9892d43d0f9;
    item2_velocities[19].linearVelocity.y = (float) 0xa3570ab2891296ef;
    item2_velocities[19].linearVelocity.z = (float) 0x7038ad525045d6ce;
    item2_velocities[19].angularVelocity.x = (float) 0x866778f238f878c3;
    item2_velocities[19].angularVelocity.y = (float) 0x1c42c81764b11177;
    item2_velocities[19].angularVelocity.z = (float) 0xc40ae2d30ca49e93;
    item2.velocities = item2_velocities;
    XrExtensionProperties item3{};
    item3.type = XR_TYPE_EXTENSION_PROPERTIES;
    item3.next = nullptr;
    for (int i = 0; i < XR_MAX_EXTENSION_NAME_SIZE; i++) {
        item3.extensionName[i] = 'q';
    }
    item3.extensionVersion = (uint32_t) 0x74a8331394946f9f;
    XrSpaceLocation item4{};
    item4.type = XR_TYPE_SPACE_LOCATION;
    item4.next = nullptr;
    item4.locationFlags = (XrSpaceLocationFlags) 0xbaaa128eab882ec7;
    item4.pose.orientation.x = (float) 0x76131ee0ac1b4e27;
    item4.pose.orientation.y = (float) 0xd60cb6c709261387;
    item4.pose.orientation.z = (float) 0xed45d58ed229d3b9;
    item4.pose.orientation.w = (float) 0xf373a091bb9c1ef6;
    item4.pose.position.x = (float) 0x936ac7b24c2824b9;
    item4.pose.position.y = (float) 0x8a47d84265709634;
    item4.pose.position.z = (float) 0x6aad3ec186f7c778;
    XrQuaternionf item5{};
    item5.x = (float) 0x63d9fbde9dd12c9b;
    item5.y = (float) 0x3a360a803ee4f5b5;
    item5.z = (float) 0xe9152f607181dffe;
    item5.w = (float) 0x54d1a524d8a701c9;
    XrInteractionProfileSuggestedBinding item6{};
    item6.type = XR_TYPE_INTERACTION_PROFILE_SUGGESTED_BINDING;
    item6.next = nullptr;
    item6.interactionProfile = (XrPath) 0x1c83e313ebc6e106;
    item6.countSuggestedBindings = 5;
    XrActionSuggestedBinding item6_suggestedBindings[5]{};
    item6_suggestedBindings[0].action = (XrAction) 0x2d0044eba95ce96;
    item6_suggestedBindings[0].binding = (XrPath) 0x333ded680ce9eb4e;
    item6_suggestedBindings[1].action = (XrAction) 0x84454043f9fd97a7;
    item6_suggestedBindings[1].binding = (XrPath) 0x803ccd93d51033d9;
    item6_suggestedBindings[2].action = (XrAction) 0x4578d88bcabd557f;
    item6_suggestedBindings[2].binding = (XrPath) 0x7171e4311ada11c5;
    item6_suggestedBindings[3].action = (XrAction) 0xf32bb2351d4d0553;
    item6_suggestedBindings[3].binding = (XrPath) 0xf2f69e47083ee461;
    item6_suggestedBindings[4].action = (XrAction) 0xbc91412547d80743;
    item6_suggestedBindings[4].binding = (XrPath) 0x3a2c461a204f7631;
    item6.suggestedBindings = item6_suggestedBindings;
    XrExtent3Df item7{};
    item7.width = (float) 0x8793b3dd18c43d4d;
    item7.height = (float) 0xc1269c11448669bd;
    item7.depth = (float) 0xa0d7af822afbbb59;
    XrSwapchainImageAcquireInfo item8{};
    item8.type = XR_TYPE_SWAPCHAIN_IMAGE_ACQUIRE_INFO;
    item8.next = nullptr;
    XrEventDataReferenceSpaceChangePending item9{};
    item9.type = XR_TYPE_EVENT_DATA_REFERENCE_SPACE_CHANGE_PENDING;
    item9.next = nullptr;
    item9.session = (XrSession) 0xe4ce39d6b14e9919;
    item9.referenceSpaceType = (XrReferenceSpaceType) 0xe91b9a59defb2f68;
    item9.changeTime = (XrTime) 0xd0fee9ecdf23a130;
    item9.poseValid = (XrBool32) 0x2eac1338d1b2aaaa;
    item9.poseInPreviousSpace.orientation.x = (float) 0x861eaedc819d6601;
    item9.poseInPreviousSpace.orientation.y = (float) 0xfe13c54ceb12fea8;
    item9.poseInPreviousSpace.orientation.z = (float) 0x7505166ad517bab6;
    item9.poseInPreviousSpace.orientation.w = (float) 0xbef6db9a6ebbc580;
    item9.poseInPreviousSpace.position.x = (float) 0x91163aa9f0ec5819;
    item9.poseInPreviousSpace.position.y = (float) 0x4971f241839c3b9f;
    item9.poseInPreviousSpace.position.z = (float) 0x9c72a7c695a44157;
    XrEventDataEventsLost item10{};
    item10.type = XR_TYPE_EVENT_DATA_EVENTS_LOST;
    XrActionStatePose item10_next[1]{};
    item10_next[0].type = XR_TYPE_ACTION_STATE_POSE;
    item10_next[0].next = nullptr;
    item10_next[0].isActive = (XrBool32) 0xc1e6a522245030ee;
    item10.next = item10_next;
    item10.lostEventCount = (uint32_t) 0xc97bbb99f0af1884;
    XrSessionCreateInfo item11{};
    item11.type = XR_TYPE_SESSION_CREATE_INFO;
    item11.next = nullptr;
    item11.createFlags = (XrSessionCreateFlags) 0xb81a81aa8f38efa5;
    item11.systemId = (XrSystemId) 0xa1db68a7d485eeb0;
    XrSystemGetInfo item12{};
    item12.type = XR_TYPE_SYSTEM_GET_INFO;
    item12.next = nullptr;
    item12.formFactor = (XrFormFactor) 0xc0a04cf503f10413;
    XrSpaceVelocity item13{};
    item13.type = XR_TYPE_SPACE_VELOCITY;
    XrSpaceVelocities item13_next[1]{};
    item13_next[0].type = XR_TYPE_SPACE_VELOCITIES;
    XrFrameWaitInfo item13_next_0_next[1]{};
    item13_next_0_next[0].type = XR_TYPE_FRAME_WAIT_INFO;
    XrFrameState item13_next_0_next_0_next[1]{};
    item13_next_0_next_0_next[0].type = XR_TYPE_FRAME_STATE;
    item13_next_0_next_0_next[0].next = nullptr;
    item13_next_0_next_0_next[0].predictedDisplayTime = (XrTime) 0xf87ae1be3ad01ceb;
    item13_next_0_next_0_next[0].predictedDisplayPeriod = (XrDuration) 0xe011047e41cba22a;
    item13_next_0_next_0_next[0].shouldRender = (XrBool32) 0xadfb8d8d24d00e18;
    item13_next_0_next[0].next = item13_next_0_next_0_next;
    item13_next[0].next = item13_next_0_next;
    item13_next[0].velocityCount = 2;
    XrSpaceVelocityData item13_next_0_velocities[2]{};
    item13_next_0_velocities[0].velocityFlags = (XrSpaceVelocityFlags) 0xa1d6ceb641cb5988;
    item13_next_0_velocities[0].linearVelocity.x = (float) 0x53c51c04ad1f6be8;
    item13_next_0_velocities[0].linearVelocity.y = (float) 0x8483749c2bf725e5;
    item13_next_0_velocities[0].linearVelocity.z = (float) 0xb77063b953d3601f;
    item13_next_0_velocities[0].angularVelocity.x = (float) 0x269d1188a0ec5d9e;
    item13_next_0_velocities[0].angularVelocity.y = (float) 0x7fe73411ccb213eb;
    item13_next_0_velocities[0].angularVelocity.z = (float) 0x8e609516da98d04e;
    item13_next_0_velocities[1].velocityFlags = (XrSpaceVelocityFlags) 0x2bd73aa06925b744;
    item13_next_0_velocities[1].linearVelocity.x = (float) 0x3ee573a23683e392;
    item13_next_0_velocities[1].linearVelocity.y = (float) 0x9361af6d2fd47e9d;
    item13_next_0_velocities[1].linearVelocity.z = (float) 0xe08aace8ca6f51ea;
    item13_next_0_velocities[1].angularVelocity.x = (float) 0x49dcb94392cf4d40;
    item13_next_0_velocities[1].angularVelocity.y = (float) 0x947db96d6e1bd92;
    item13_next_0_velocities[1].angularVelocity.z = (float) 0x7bb55851466fe56d;
    item13_next[0].velocities = item13_next_0_velocities;
    item13.next = item13_next;
    item13.velocityFlags = (XrSpaceVelocityFlags) 0xcd38a4305140748b;
    item13.linearVelocity.x = (float) 0x7940801e20adb8eb;
    item13.linearVelocity.y = (float) 0xe7c0d13f56cdc867;
    item13.linearVelocity.z = (float) 0x5882fa3961f1cd27;
    item13.angularVelocity.x = (float) 0x11a2ed1ca23da1c5;
    item13.angularVelocity.y = (float) 0xb8290749e9411c37;
    item13.angularVelocity.z = (float) 0x79ed5d84199dd9cb;
    XrInteractionProfileState item14{};
    item14.type = XR_TYPE_INTERACTION_PROFILE_STATE;
    item14.next = nullptr;
    item14.interactionProfile = (XrPath) 0x73e41cc039005b80;
    XrSystemGraphicsProperties item15{};
    item15.maxSwapchainImageHeight = (uint32_t) 0x9f9b47f81e7fedfd;
    item15.maxSwapchainImageWidth = (uint32_t) 0x3ef1331453066531;
    item15.maxLayerCount = (uint32_t) 0x16117f638c68eecb;
    XrCompositionLayerProjectionView item16{};
    item16.type = XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW;
    item16.next = nullptr;
    item16.pose.orientation.x = (float) 0xd69755f0cb543d0a;
    item16.pose.orientation.y = (float) 0x2110cbaa0063e431;
    item16.pose.orientation.z = (float) 0xa07ff10d5a0992d3;
    item16.pose.orientation.w = (float) 0xe52207f082e26291;
    item16.pose.position.x = (float) 0x8b672fb9d2cf696c;
    item16.pose.position.y = (float) 0x350e48a42ee672f;
    item16.pose.position.z = (float) 0x4fd10421fad3b1cb;
    item16.fov.angleLeft = (float) 0xf3756596bcf635ad;
    item16.fov.angleRight = (float) 0x7fcd1cefec377a4a;
    item16.fov.angleUp = (float) 0x8f48c049a273fa00;
    item16.fov.angleDown = (float) 0x55d35498b25eabec;
    item16.subImage.swapchain = (XrSwapchain) 0x52473f978cf7ae38;
    item16.subImage.imageRect.offset.x = (int32_t) 0x3bb2b6182e96a4b4;
    item16.subImage.imageRect.offset.y = (int32_t) 0xf72e069218c65537;
    item16.subImage.imageRect.extent.width = (int32_t) 0x3224d140090638ce;
    item16.subImage.imageRect.extent.height = (int32_t) 0x1cc065d862fabbfd;
    item16.subImage.imageArrayIndex = (uint32_t) 0xbe0fd1b650b9b63e;
    XrHapticVibration item17{};
    item17.type = XR_TYPE_HAPTIC_VIBRATION;
    item17.next = nullptr;
    item17.duration = (XrDuration) 0xd396aaa1a38d6420;
    item17.frequency = (float) 0xcf2f01bd530ad960;
    item17.amplitude = (float) 0xf4cd30d210c38fd5;
    XrSpaceLocation item18{};
    item18.type = XR_TYPE_SPACE_LOCATION;
    item18.next = nullptr;
    item18.locationFlags = (XrSpaceLocationFlags) 0xa3116e3dfb3ed68b;
    item18.pose.orientation.x = (float) 0xc460a3e382fd1922;
    item18.pose.orientation.y = (float) 0xc54d8b62dfb8f1ed;
    item18.pose.orientation.z = (float) 0x8ee64b5972f0c348;
    item18.pose.orientation.w = (float) 0xb55d0404688df26c;
    item18.pose.position.x = (float) 0xab675690026aa3aa;
    item18.pose.position.y = (float) 0xd3bdc641379bdb23;
    item18.pose.position.z = (float) 0xc2fc56f9e08f6d14;
    XrCompositionLayerProjectionView item19{};
    item19.type = XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW;
    item19.next = nullptr;
    item19.pose.orientation.x = (float) 0x400b1743c1e4e283;
    item19.pose.orientation.y = (float) 0x25f194e6d9ecbbe2;
    item19.pose.orientation.z = (float) 0x6ff4bc0d24ae0fa4;
    item19.pose.orientation.w = (float) 0x7ee2f4b068b2bf3d;
    item19.pose.position.x = (float) 0xcb72e68021dcd919;
    item19.pose.position.y = (float) 0x3f934ce403d89f48;
    item19.pose.position.z = (float) 0xb5c6d1fc29bbe67b;
    item19.fov.angleLeft = (float) 0x5019cb39451dc61e;
    item19.fov.angleRight = (float) 0x78f8f1eeedf9493f;
    item19.fov.angleUp = (float) 0x99c192529caa0de6;
    item19.fov.angleDown = (float) 0xc1aa30de701667a2;
    item19.subImage.swapchain = (XrSwapchain) 0x18bfe80bb560451f;
    item19.subImage.imageRect.offset.x = (int32_t) 0xea690edacd6bab2b;
    item19.subImage.imageRect.offset.y = (int32_t) 0x13462d8ca73388c2;
    item19.subImage.imageRect.extent.width = (int32_t) 0xf5058f8ba12f2699;
    item19.subImage.imageRect.extent.height = (int32_t) 0xa3949e6a1833e0b;
    item19.subImage.imageArrayIndex = (uint32_t) 0xfd4bdd6786c17cee;
    XrUuid item20{};
    for (int i = 0; i < XR_UUID_SIZE; i++) {
        item20.data[i] = (uint8_t) 0xd6934af6aadc56b3;
    }
    XrSystemTrackingProperties item21{};
    item21.orientationTracking = (XrBool32) 0x4307968de9e0c6bf;
    item21.positionTracking = (XrBool32) 0x41fbe86fef393b6b;
    XrSpheref item22{};
    item22.center.orientation.x = (float) 0x339bf075fd31484e;
    item22.center.orientation.y = (float) 0xeaa747c18dfbb8e9;
    item22.center.orientation.z = (float) 0xdfadf0d1d053f09a;
    item22.center.orientation.w = (float) 0x243dcb1f14939571;
    item22.center.position.x = (float) 0x6f39aa5e19e328db;
    item22.center.position.y = (float) 0x8037216f5e0c82aa;
    item22.center.position.z = (float) 0xe522cf9fe892a800;
    item22.radius = (float) 0xa7978a2439cc7e1a;
    XrEventDataSessionStateChanged item23{};
    item23.type = XR_TYPE_EVENT_DATA_SESSION_STATE_CHANGED;
    XrActionStateVector2f item23_next[1]{};
    item23_next[0].type = XR_TYPE_ACTION_STATE_VECTOR2F;
    XrActionStateVector2f item23_next_0_next[1]{};
    item23_next_0_next[0].type = XR_TYPE_ACTION_STATE_VECTOR2F;
    item23_next_0_next[0].next = nullptr;
    item23_next_0_next[0].currentState.x = (float) 0xa0aef0976959513;
    item23_next_0_next[0].currentState.y = (float) 0x97eac62cc13d97b4;
    item23_next_0_next[0].changedSinceLastSync = (XrBool32) 0x9652c1831e3e9039;
    item23_next_0_next[0].lastChangeTime = (XrTime) 0xcd4bf5d3601a371d;
    item23_next_0_next[0].isActive = (XrBool32) 0xac064e3b3a4a4099;
    item23_next[0].next = item23_next_0_next;
    item23_next[0].currentState.x = (float) 0xc01552dff3a12f67;
    item23_next[0].currentState.y = (float) 0xd9dc75fa9ae93ed3;
    item23_next[0].changedSinceLastSync = (XrBool32) 0xfc489d9e613af4a2;
    item23_next[0].lastChangeTime = (XrTime) 0x367e99e4fe4b30a8;
    item23_next[0].isActive = (XrBool32) 0x5711dcbf3315b231;
    item23.next = item23_next;
    item23.session = (XrSession) 0xbdeecf80a45cc033;
    item23.state = (XrSessionState) 0x4674005d8e4927b2;
    item23.time = (XrTime) 0x476921526759091b;
    XrActionSetCreateInfo item24{};
    item24.type = XR_TYPE_ACTION_SET_CREATE_INFO;
    item24.next = nullptr;
    for (int i = 0; i < XR_MAX_ACTION_SET_NAME_SIZE; i++) {
        item24.actionSetName[i] = '9';
    }
    for (int i = 0; i < XR_MAX_LOCALIZED_ACTION_SET_NAME_SIZE; i++) {
        item24.localizedActionSetName[i] = 'i';
    }
    item24.priority = (uint32_t) 0x68954848fecc5d18;
    XrActionSpaceCreateInfo item25{};
    item25.type = XR_TYPE_ACTION_SPACE_CREATE_INFO;
    XrViewLocateInfo item25_next[1]{};
    item25_next[0].type = XR_TYPE_VIEW_LOCATE_INFO;
    item25_next[0].next = nullptr;
    item25_next[0].viewConfigurationType = (XrViewConfigurationType) 0xd39a5284b5c33239;
    item25_next[0].displayTime = (XrTime) 0x298351a9a25de48b;
    item25_next[0].space = (XrSpace) 0xdb0cb7280fef8231;
    item25.next = item25_next;
    item25.action = (XrAction) 0xa6452b7745d99eb0;
    item25.subactionPath = (XrPath) 0xfc73d493e9cfc0af;
    item25.poseInActionSpace.orientation.x = (float) 0x3cccf21245231f77;
    item25.poseInActionSpace.orientation.y = (float) 0x9424dca8b9d4e32e;
    item25.poseInActionSpace.orientation.z = (float) 0xb8d550a79b355a7c;
    item25.poseInActionSpace.orientation.w = (float) 0xcb65130dc127364a;
    item25.poseInActionSpace.position.x = (float) 0xffff5c695a440295;
    item25.poseInActionSpace.position.y = (float) 0xe97a6f9e9c5fffed;
    item25.poseInActionSpace.position.z = (float) 0x636a354a379922e0;
    XrActionSuggestedBinding item26{};
    item26.action = (XrAction) 0x3d7bf0d9a6e3ec95;
    item26.binding = (XrPath) 0x3d32a8a4daac2d7b;
    XrBoundSourcesForActionEnumerateInfo item27{};
    item27.type = XR_TYPE_BOUND_SOURCES_FOR_ACTION_ENUMERATE_INFO;
    item27.next = nullptr;
    item27.action = (XrAction) 0xc648cc2ec2ef33e7;
    XrVector3f item28{};
    item28.x = (float) 0xb4597e754cff25e7;
    item28.y = (float) 0xd8817dda43824d2c;
    item28.z = (float) 0x496aa4c6406f5f56;
    XrSystemGetInfo item29{};
    item29.type = XR_TYPE_SYSTEM_GET_INFO;
    XrActionSetCreateInfo item29_next[1]{};
    item29_next[0].type = XR_TYPE_ACTION_SET_CREATE_INFO;
    item29_next[0].next = nullptr;
    for (int i = 0; i < XR_MAX_ACTION_SET_NAME_SIZE; i++) {
        item29_next[0].actionSetName[i] = 'R';
    }
    for (int i = 0; i < XR_MAX_LOCALIZED_ACTION_SET_NAME_SIZE; i++) {
        item29_next[0].localizedActionSetName[i] = 'f';
    }
    item29_next[0].priority = (uint32_t) 0x4e8fb4da142c57f4;
    item29.next = item29_next;
    item29.formFactor = (XrFormFactor) 0x64f1774b9e0c5b2a;
    XrInteractionProfileState item30{};
    item30.type = XR_TYPE_INTERACTION_PROFILE_STATE;
    XrSpaceLocations item30_next[1]{};
    item30_next[0].type = XR_TYPE_SPACE_LOCATIONS;
    item30_next[0].next = nullptr;
    item30_next[0].locationCount = (uint32_t) 0xb3fdba7b7c370b5;
    item30_next[0].locations = nullptr;
    item30.next = item30_next;
    item30.interactionProfile = (XrPath) 0x72dcd619e0cc200a;
    XrSwapchainSubImage item31{};
    item31.swapchain = (XrSwapchain) 0x7a08f3151c1fce7f;
    item31.imageRect.offset.x = (int32_t) 0x812e4d40788fde12;
    item31.imageRect.offset.y = (int32_t) 0xa95a3552f7b33c8c;
    item31.imageRect.extent.width = (int32_t) 0x58b45fa89521d4d4;
    item31.imageRect.extent.height = (int32_t) 0x59d92885c4dd775;
    item31.imageArrayIndex = (uint32_t) 0xf5a0a5e9f8f60dd1;
    XrHapticVibration item32{};
    item32.type = XR_TYPE_HAPTIC_VIBRATION;
    item32.next = nullptr;
    item32.duration = (XrDuration) 0xf4d7ee4c199bb2d4;
    item32.frequency = (float) 0x6d53e0cf159a5da8;
    item32.amplitude = (float) 0xce71205a355916cd;
    XrSystemGraphicsProperties item33{};
    item33.maxSwapchainImageHeight = (uint32_t) 0x82a97d657068c8c4;
    item33.maxSwapchainImageWidth = (uint32_t) 0x2cc32dfa54994316;
    item33.maxLayerCount = (uint32_t) 0x11839c51e76b556a;
    XrCompositionLayerProjectionView item34{};
    item34.type = XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW;
    item34.next = nullptr;
    item34.pose.orientation.x = (float) 0x2c3b0cf6fcf989af;
    item34.pose.orientation.y = (float) 0xc21a9d5730d89929;
    item34.pose.orientation.z = (float) 0xfdde53690164a34e;
    item34.pose.orientation.w = (float) 0x48ad9a7a90928361;
    item34.pose.position.x = (float) 0x2513e52431d1b8fa;
    item34.pose.position.y = (float) 0x407a7a2237b3916;
    item34.pose.position.z = (float) 0x3d828026d2d3e328;
    item34.fov.angleLeft = (float) 0xf362cd9e16e8270c;
    item34.fov.angleRight = (float) 0x3e17dec2e75fedad;
    item34.fov.angleUp = (float) 0xb6564872a8a6cf72;
    item34.fov.angleDown = (float) 0x3282a1f063a52f91;
    item34.subImage.swapchain = (XrSwapchain) 0x24a83a6cc8f82d07;
    item34.subImage.imageRect.offset.x = (int32_t) 0xbbda650eed781ccb;
    item34.subImage.imageRect.offset.y = (int32_t) 0xb70a623fc3ab935f;
    item34.subImage.imageRect.extent.width = (int32_t) 0xd7c15fd931f5de77;
    item34.subImage.imageRect.extent.height = (int32_t) 0x8591fbe66b2c1c2a;
    item34.subImage.imageArrayIndex = (uint32_t) 0x66816b94d0a99a7a;
    XrColor4f item35{};
    item35.r = (float) 0x46122f6fe22c6092;
    item35.g = (float) 0xb3f5dc168d9e4ba5;
    item35.b = (float) 0xd49a655e20442db8;
    item35.a = (float) 0x12c8b52407c541b9;
    XrUuid item36{};
    for (int i = 0; i < XR_UUID_SIZE; i++) {
        item36.data[i] = (uint8_t) 0x1607817dfa73bae1;
    }
    XrInputSourceLocalizedNameGetInfo item37{};
    item37.type = XR_TYPE_INPUT_SOURCE_LOCALIZED_NAME_GET_INFO;
    item37.next = nullptr;
    item37.sourcePath = (XrPath) 0x7fced0d1874123ab;
    item37.whichComponents = (XrInputSourceLocalizedNameFlags) 0xe995d5b9cd291c84;
    XrApplicationInfo item38{};
    for (int i = 0; i < XR_MAX_APPLICATION_NAME_SIZE; i++) {
        item38.applicationName[i] = 'b';
    }
    item38.applicationVersion = (uint32_t) 0x20e331723ee6ec99;
    for (int i = 0; i < XR_MAX_ENGINE_NAME_SIZE; i++) {
        item38.engineName[i] = 'e';
    }
    item38.engineVersion = (uint32_t) 0x706828af183dd88b;
    item38.apiVersion = (XrVersion) 0x5844c8cd02eaa179;
    XrActionStateBoolean item39{};
    item39.type = XR_TYPE_ACTION_STATE_BOOLEAN;
    XrInteractionProfileState item39_next[1]{};
    item39_next[0].type = XR_TYPE_INTERACTION_PROFILE_STATE;
    XrActionStateVector2f item39_next_0_next[1]{};
    item39_next_0_next[0].type = XR_TYPE_ACTION_STATE_VECTOR2F;
    item39_next_0_next[0].next = nullptr;
    item39_next_0_next[0].currentState.x = (float) 0xa4b5103604793a7;
    item39_next_0_next[0].currentState.y = (float) 0x28064b9470eff3d9;
    item39_next_0_next[0].changedSinceLastSync = (XrBool32) 0xa05a9bcd283be368;
    item39_next_0_next[0].lastChangeTime = (XrTime) 0x4e07b0b416e42571;
    item39_next_0_next[0].isActive = (XrBool32) 0x88511a5788ba4f47;
    item39_next[0].next = item39_next_0_next;
    item39_next[0].interactionProfile = (XrPath) 0xb596cfe903737c78;
    item39.next = item39_next;
    item39.currentState = (XrBool32) 0x943eaa034ab01a18;
    item39.changedSinceLastSync = (XrBool32) 0xb893fe86af57b6d9;
    item39.lastChangeTime = (XrTime) 0x44f081990598927;
    item39.isActive = (XrBool32) 0x482125245a8bb9d5;
    XrSpaceVelocity item40{};
    item40.type = XR_TYPE_SPACE_VELOCITY;
    item40.next = nullptr;
    item40.velocityFlags = (XrSpaceVelocityFlags) 0xcfeeeceba6e6a112;
    item40.linearVelocity.x = (float) 0xeab7418bb8b57f8a;
    item40.linearVelocity.y = (float) 0xb99b00053ab5b0a2;
    item40.linearVelocity.z = (float) 0xef12d94abcd11eea;
    item40.angularVelocity.x = (float) 0x2d2a7a08dc386cd;
    item40.angularVelocity.y = (float) 0xb9fa4325f207b6a8;
    item40.angularVelocity.z = (float) 0xbd87483045a46755;
    XrOffset2Df item41{};
    item41.x = (float) 0xbe9fed6a893c6abd;
    item41.y = (float) 0xd37866a7ee0f427c;
    XrHapticVibration item42{};
    item42.type = XR_TYPE_HAPTIC_VIBRATION;
    item42.next = nullptr;
    item42.duration = (XrDuration) 0xeb5e5adf6091be20;
    item42.frequency = (float) 0xad05c84fdecb9837;
    item42.amplitude = (float) 0x58ce1205ab7ace5d;
    XrEventDataEventsLost item43{};
    item43.type = XR_TYPE_EVENT_DATA_EVENTS_LOST;
    item43.next = nullptr;
    item43.lostEventCount = (uint32_t) 0x379fb571617831c0;
    XrActionStatePose item44{};
    item44.type = XR_TYPE_ACTION_STATE_POSE;
    item44.next = nullptr;
    item44.isActive = (XrBool32) 0xf2870ca06dbc3b86;
    XrSpacesLocateInfo item45{};
    item45.type = XR_TYPE_SPACES_LOCATE_INFO;
    item45.next = nullptr;
    item45.baseSpace = (XrSpace) 0xfee512d38f89e7ce;
    item45.time = (XrTime) 0xf0a1a9d65f1507b5;
    item45.spaceCount = (uint32_t) 0xb10f6b570ae99901;
    item45.spaces = nullptr;
    XrSpaceVelocityData item46{};
    item46.velocityFlags = (XrSpaceVelocityFlags) 0xae7962e600c4ccb5;
    item46.linearVelocity.x = (float) 0xdd1875e5f1d17361;
    item46.linearVelocity.y = (float) 0x6ed2fdfd8f544bb6;
    item46.linearVelocity.z = (float) 0x3689a144ee14648;
    item46.angularVelocity.x = (float) 0x845aad9384049ce;
    item46.angularVelocity.y = (float) 0xf0ba7d9b62ea0f55;
    item46.angularVelocity.z = (float) 0x5037075cf338e11b;
    XrInteractionProfileState item47{};
    item47.type = XR_TYPE_INTERACTION_PROFILE_STATE;
    XrActionStatePose item47_next[1]{};
    item47_next[0].type = XR_TYPE_ACTION_STATE_POSE;
    XrFrameState item47_next_0_next[1]{};
    item47_next_0_next[0].type = XR_TYPE_FRAME_STATE;
    XrHapticVibration item47_next_0_next_0_next[1]{};
    item47_next_0_next_0_next[0].type = XR_TYPE_HAPTIC_VIBRATION;
    item47_next_0_next_0_next[0].next = nullptr;
    item47_next_0_next_0_next[0].duration = (XrDuration) 0x88307a5104bfa26f;
    item47_next_0_next_0_next[0].frequency = (float) 0xd2f7ed6cba557d64;
    item47_next_0_next_0_next[0].amplitude = (float) 0x8e26c05ca17de752;
    item47_next_0_next[0].next = item47_next_0_next_0_next;
    item47_next_0_next[0].predictedDisplayTime = (XrTime) 0x78c0afbdbb3f9ebb;
    item47_next_0_next[0].predictedDisplayPeriod = (XrDuration) 0x5d960ac64241ca5d;
    item47_next_0_next[0].shouldRender = (XrBool32) 0xd4473090e0a1e763;
    item47_next[0].next = item47_next_0_next;
    item47_next[0].isActive = (XrBool32) 0x1aca71c0af1db95c;
    item47.next = item47_next;
    item47.interactionProfile = (XrPath) 0x1495c6a5741a8658;
    XrFrameWaitInfo item48{};
    item48.type = XR_TYPE_FRAME_WAIT_INFO;
    item48.next = nullptr;
    XrUuid item49{};
    for (int i = 0; i < XR_UUID_SIZE; i++) {
        item49.data[i] = (uint8_t) 0xa24dacfab6e5b6f6;
    }
    XrSwapchainCreateInfo item50{};
    item50.type = XR_TYPE_SWAPCHAIN_CREATE_INFO;
    XrActionSetCreateInfo item50_next[1]{};
    item50_next[0].type = XR_TYPE_ACTION_SET_CREATE_INFO;
    item50_next[0].next = nullptr;
    for (int i = 0; i < XR_MAX_ACTION_SET_NAME_SIZE; i++) {
        item50_next[0].actionSetName[i] = 'W';
    }
    for (int i = 0; i < XR_MAX_LOCALIZED_ACTION_SET_NAME_SIZE; i++) {
        item50_next[0].localizedActionSetName[i] = 'U';
    }
    item50_next[0].priority = (uint32_t) 0xd2b08f297e5b00ab;
    item50.next = item50_next;
    item50.createFlags = (XrSwapchainCreateFlags) 0xbef94d7346782d95;
    item50.usageFlags = (XrSwapchainUsageFlags) 0x712f523330576f66;
    item50.format = (int64_t) 0x8bb1c689564d353c;
    item50.sampleCount = (uint32_t) 0xc87215b713059af3;
    item50.width = (uint32_t) 0x1dc9ae74453e2c39;
    item50.height = (uint32_t) 0xf2a208d6b8ea5970;
    item50.faceCount = (uint32_t) 0xb30c3e928585505f;
    item50.arraySize = (uint32_t) 0x1d3481fb2793ac51;
    item50.mipCount = (uint32_t) 0x72b09604223d2520;
    XrColor3f item51{};
    item51.r = (float) 0xdb34037d1277c861;
    item51.g = (float) 0x116872d75e2d6850;
    item51.b = (float) 0xb39fef090be07a30;
    XrInputSourceLocalizedNameGetInfo item52{};
    item52.type = XR_TYPE_INPUT_SOURCE_LOCALIZED_NAME_GET_INFO;
    XrSessionCreateInfo item52_next[1]{};
    item52_next[0].type = XR_TYPE_SESSION_CREATE_INFO;
    item52_next[0].next = nullptr;
    item52_next[0].createFlags = (XrSessionCreateFlags) 0x3db0e41a0b4b2527;
    item52_next[0].systemId = (XrSystemId) 0x23eea6f2ea322607;
    item52.next = item52_next;
    item52.sourcePath = (XrPath) 0xb1931f8444783166;
    item52.whichComponents = (XrInputSourceLocalizedNameFlags) 0xccf856f40660cbb;
    XrSystemGraphicsProperties item53{};
    item53.maxSwapchainImageHeight = (uint32_t) 0xb772ea9e17274e4c;
    item53.maxSwapchainImageWidth = (uint32_t) 0xa7fc99f0b881eae2;
    item53.maxLayerCount = (uint32_t) 0xff546a0085041459;
    XrCompositionLayerProjectionView item54{};
    item54.type = XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW;
    XrEventDataBuffer item54_next[1]{};
    item54_next[0].type = XR_TYPE_EVENT_DATA_BUFFER;
    item54_next[0].next = nullptr;
    for (int i = 0; i < 4000; i++) {
        item54_next[0].varying[i] = (uint8_t) 0xfd30029a25b600a3;
    }
    item54.next = item54_next;
    item54.pose.orientation.x = (float) 0x392ef165edb152c5;
    item54.pose.orientation.y = (float) 0xf8454ad0f0250c16;
    item54.pose.orientation.z = (float) 0x2c120a01ce6e5635;
    item54.pose.orientation.w = (float) 0xc2163647788661f8;
    item54.pose.position.x = (float) 0x9f74435088d26c6b;
    item54.pose.position.y = (float) 0x5d414a5ca79ea187;
    item54.pose.position.z = (float) 0x7a787391acc02757;
    item54.fov.angleLeft = (float) 0xd865554aedcf3e4;
    item54.fov.angleRight = (float) 0x598f27f05a561a0c;
    item54.fov.angleUp = (float) 0x888117505c3481ea;
    item54.fov.angleDown = (float) 0x855472bd43a7eb1b;
    item54.subImage.swapchain = (XrSwapchain) 0x1b5e6eafe4d9319c;
    item54.subImage.imageRect.offset.x = (int32_t) 0x7ba6dcc71952c758;
    item54.subImage.imageRect.offset.y = (int32_t) 0xc409de0e72c1029e;
    item54.subImage.imageRect.extent.width = (int32_t) 0xecddc38fe4bd9fa7;
    item54.subImage.imageRect.extent.height = (int32_t) 0xf0fb3dea0e963a3a;
    item54.subImage.imageArrayIndex = (uint32_t) 0xc74f56910e787eb0;
    XrExtensionProperties item55{};
    item55.type = XR_TYPE_EXTENSION_PROPERTIES;
    XrSpaceVelocity item55_next[1]{};
    item55_next[0].type = XR_TYPE_SPACE_VELOCITY;
    XrSystemProperties item55_next_0_next[1]{};
    item55_next_0_next[0].type = XR_TYPE_SYSTEM_PROPERTIES;
    XrEventDataInteractionProfileChanged item55_next_0_next_0_next[1]{};
    item55_next_0_next_0_next[0].type = XR_TYPE_EVENT_DATA_INTERACTION_PROFILE_CHANGED;
    item55_next_0_next_0_next[0].next = nullptr;
    item55_next_0_next_0_next[0].session = (XrSession) 0xd43e742cfb98af56;
    item55_next_0_next[0].next = item55_next_0_next_0_next;
    item55_next_0_next[0].systemId = (XrSystemId) 0xea9cf24ef8fc5d20;
    item55_next_0_next[0].vendorId = (uint32_t) 0xf35d7d993b6f52db;
    for (int i = 0; i < XR_MAX_SYSTEM_NAME_SIZE; i++) {
        item55_next_0_next[0].systemName[i] = 'b';
    }
    item55_next_0_next[0].graphicsProperties.maxSwapchainImageHeight = (uint32_t) 0x837153a2846359e5;
    item55_next_0_next[0].graphicsProperties.maxSwapchainImageWidth = (uint32_t) 0x6dad4d8f023547fc;
    item55_next_0_next[0].graphicsProperties.maxLayerCount = (uint32_t) 0x14efdfcfeb712ce0;
    item55_next_0_next[0].trackingProperties.orientationTracking = (XrBool32) 0xefb65627244088a;
    item55_next_0_next[0].trackingProperties.positionTracking = (XrBool32) 0x554fca602792e879;
    item55_next[0].next = item55_next_0_next;
    item55_next[0].velocityFlags = (XrSpaceVelocityFlags) 0x3ce1d08de4a58d9d;
    item55_next[0].linearVelocity.x = (float) 0x8aa4307749d5f929;
    item55_next[0].linearVelocity.y = (float) 0x6faedde15063e850;
    item55_next[0].linearVelocity.z = (float) 0x942ba691895622d7;
    item55_next[0].angularVelocity.x = (float) 0xde565243994a3d;
    item55_next[0].angularVelocity.y = (float) 0xfc1c8ee95508c152;
    item55_next[0].angularVelocity.z = (float) 0xac070ee29a9e9637;
    item55.next = item55_next;
    for (int i = 0; i < XR_MAX_EXTENSION_NAME_SIZE; i++) {
        item55.extensionName[i] = 'U';
    }
    item55.extensionVersion = (uint32_t) 0x999808380012791;
    XrVector2f item56{};
    item56.x = (float) 0x8c40190ad369b0fd;
    item56.y = (float) 0x21f39069aeba7d07;
    XrBodySkeletonJointHTC item57{};
    item57.pose.orientation.x = (float) 0xd708536681fcc8e6;
    item57.pose.orientation.y = (float) 0xd29396803c52a610;
    item57.pose.orientation.z = (float) 0xee12c1752feb923e;
    item57.pose.orientation.w = (float) 0x26a6c98f7400c33;
    item57.pose.position.x = (float) 0x43d1f4664ab7a528;
    item57.pose.position.y = (float) 0x982eea06481553d3;
    item57.pose.position.z = (float) 0xf6f7e307a5ee0b59;
    XrEventDataReferenceSpaceChangePending item58{};
    item58.type = XR_TYPE_EVENT_DATA_REFERENCE_SPACE_CHANGE_PENDING;
    item58.next = nullptr;
    item58.session = (XrSession) 0xca1f99716dab57;
    item58.referenceSpaceType = (XrReferenceSpaceType) 0x4ff30654247a4028;
    item58.changeTime = (XrTime) 0x7b3df91e0096b450;
    item58.poseValid = (XrBool32) 0x70f448510c4bccbf;
    item58.poseInPreviousSpace.orientation.x = (float) 0x15906a0abe016784;
    item58.poseInPreviousSpace.orientation.y = (float) 0xe25488f6e918998e;
    item58.poseInPreviousSpace.orientation.z = (float) 0xa8213ea5849babd7;
    item58.poseInPreviousSpace.orientation.w = (float) 0xb449f0002844daf5;
    item58.poseInPreviousSpace.position.x = (float) 0x3826d2197fc7518;
    item58.poseInPreviousSpace.position.y = (float) 0x1a18a786c884030b;
    item58.poseInPreviousSpace.position.z = (float) 0x6e0f69eea552c789;
    XrActionStateFloat item59{};
    item59.type = XR_TYPE_ACTION_STATE_FLOAT;
    item59.next = nullptr;
    item59.currentState = (float) 0xe6366ad447fa5095;
    item59.changedSinceLastSync = (XrBool32) 0x95c7741eef852311;
    item59.lastChangeTime = (XrTime) 0x120b952e9f6aa2d6;
    item59.isActive = (XrBool32) 0x824c893fb591f251;
    XrSystemTrackingProperties item60{};
    item60.orientationTracking = (XrBool32) 0x21d1a57930e3614e;
    item60.positionTracking = (XrBool32) 0xefa295bdc2b73b78;
    XrQuaternionf item61{};
    item61.x = (float) 0x1009304267449d36;
    item61.y = (float) 0x454bf8714c0c92b0;
    item61.z = (float) 0x52f76cd402888d6a;
    item61.w = (float) 0x223e81b011e135df;
    XrSwapchainSubImage item62{};
    item62.swapchain = (XrSwapchain) 0x4b8544929d6d42ed;
    item62.imageRect.offset.x = (int32_t) 0x12ad6db10e189fa8;
    item62.imageRect.offset.y = (int32_t) 0xc7bd8eb4b0db6a39;
    item62.imageRect.extent.width = (int32_t) 0xb05f3cf30f34f2a6;
    item62.imageRect.extent.height = (int32_t) 0x8c1ad90de8c84cc2;
    item62.imageArrayIndex = (uint32_t) 0x3d5d1213879ca2be;
    XrSpaceLocation item63{};
    item63.type = XR_TYPE_SPACE_LOCATION;
    item63.next = nullptr;
    item63.locationFlags = (XrSpaceLocationFlags) 0x983eccc42bfc5cfe;
    item63.pose.orientation.x = (float) 0x51ac0f2d6d2d92bd;
    item63.pose.orientation.y = (float) 0x844480ed482f2d88;
    item63.pose.orientation.z = (float) 0x3213c250d95e2415;
    item63.pose.orientation.w = (float) 0x2e5e3198a6b4c017;
    item63.pose.position.x = (float) 0x615548ece7312fb;
    item63.pose.position.y = (float) 0xea011e5d1e1378d0;
    item63.pose.position.z = (float) 0xbdfd3c510d59257;
    XrOffset2Df item64{};
    item64.x = (float) 0x921907b86c8dcb27;
    item64.y = (float) 0xa05847e0ff2f66dc;
    XrCompositionLayerProjection item65{};
    item65.type = XR_TYPE_COMPOSITION_LAYER_PROJECTION;
    XrSwapchainImageAcquireInfo item65_next[1]{};
    item65_next[0].type = XR_TYPE_SWAPCHAIN_IMAGE_ACQUIRE_INFO;
    item65_next[0].next = nullptr;
    item65.next = item65_next;
    item65.layerFlags = (XrCompositionLayerFlags) 0xf1a1b581f018a53;
    item65.space = (XrSpace) 0xb47cf4dda407db34;
    item65.viewCount = (uint32_t) 0x8707cda12ef7ad1a;
    item65.views = nullptr;
    XrFrustumf item66{};
    item66.pose.orientation.x = (float) 0x560177c335b90aa7;
    item66.pose.orientation.y = (float) 0xd466044b86919c00;
    item66.pose.orientation.z = (float) 0x94d6d21a1a9b5360;
    item66.pose.orientation.w = (float) 0xb83cb7ef149a99db;
    item66.pose.position.x = (float) 0xc3dd714e8a42ac41;
    item66.pose.position.y = (float) 0x1226dcfd37d1666f;
    item66.pose.position.z = (float) 0x70a83b2e156759b0;
    item66.fov.angleLeft = (float) 0x8365b37b7e6354e8;
    item66.fov.angleRight = (float) 0xf1fa3503af110c2b;
    item66.fov.angleUp = (float) 0x1154693004216e37;
    item66.fov.angleDown = (float) 0x1c548ebcc331e718;
    item66.nearZ = (float) 0x5d6c360e8788d133;
    item66.farZ = (float) 0x7e6de39d7e3a2110;
    XrFovf item67{};
    item67.angleLeft = (float) 0x538428f71ef83f7;
    item67.angleRight = (float) 0xfbff40331cedbe90;
    item67.angleUp = (float) 0xe1c0ded2468a5cd6;
    item67.angleDown = (float) 0x9672cd694b056557;
    XrSpaceLocations item68{};
    item68.type = XR_TYPE_SPACE_LOCATIONS;
    item68.next = nullptr;
    item68.locationCount = (uint32_t) 0xb5e697741ec9f7f;
    item68.locations = nullptr;
    XrExtent2Di item69{};
    item69.width = (int32_t) 0x43f3316d8edf775d;
    item69.height = (int32_t) 0x3cb320009e79d8c6;
    XrActionStateBoolean item70{};
    item70.type = XR_TYPE_ACTION_STATE_BOOLEAN;
    item70.next = nullptr;
    item70.currentState = (XrBool32) 0x7bf8285d8eb89465;
    item70.changedSinceLastSync = (XrBool32) 0xb955e75035e7fcfc;
    item70.lastChangeTime = (XrTime) 0x4d3abe3aa16215ba;
    item70.isActive = (XrBool32) 0xf04a3a5a5d719fda;
    XrView item71{};
    item71.type = XR_TYPE_VIEW;
    XrSessionBeginInfo item71_next[1]{};
    item71_next[0].type = XR_TYPE_SESSION_BEGIN_INFO;
    XrSwapchainImageWaitInfo item71_next_0_next[1]{};
    item71_next_0_next[0].type = XR_TYPE_SWAPCHAIN_IMAGE_WAIT_INFO;
    item71_next_0_next[0].next = nullptr;
    item71_next_0_next[0].timeout = (XrDuration) 0x8eb6a02c0587e87d;
    item71_next[0].next = item71_next_0_next;
    item71_next[0].primaryViewConfigurationType = (XrViewConfigurationType) 0xc06f950e913ead4d;
    item71.next = item71_next;
    item71.pose.orientation.x = (float) 0xe5b13994a6b82a41;
    item71.pose.orientation.y = (float) 0xa544eb82529ba4a8;
    item71.pose.orientation.z = (float) 0xd07b3a6674b96867;
    item71.pose.orientation.w = (float) 0xb7ab8dc5da20e2af;
    item71.pose.position.x = (float) 0x6159552a9eca68c9;
    item71.pose.position.y = (float) 0xd16ea7b3deb06e32;
    item71.pose.position.z = (float) 0x3f282ac397f2f34a;
    item71.fov.angleLeft = (float) 0x172dc4297080c98;
    item71.fov.angleRight = (float) 0x21b602dfc333189f;
    item71.fov.angleUp = (float) 0x39ad826343c780de;
    item71.fov.angleDown = (float) 0x2728a3a54aa9efff;
    XrActionStateBoolean item72{};
    item72.type = XR_TYPE_ACTION_STATE_BOOLEAN;
    item72.next = nullptr;
    item72.currentState = (XrBool32) 0xf907e529a236960f;
    item72.changedSinceLastSync = (XrBool32) 0x69b4864b32b726b5;
    item72.lastChangeTime = (XrTime) 0xfb475f5567485469;
    item72.isActive = (XrBool32) 0xbafec212b292a9bd;
    XrSwapchainCreateInfo item73{};
    item73.type = XR_TYPE_SWAPCHAIN_CREATE_INFO;
    item73.next = nullptr;
    item73.createFlags = (XrSwapchainCreateFlags) 0x5bcb3425d150cfa7;
    item73.usageFlags = (XrSwapchainUsageFlags) 0xa209e47b000ad3fb;
    item73.format = (int64_t) 0x19ced7170499e94;
    item73.sampleCount = (uint32_t) 0xe435bc7fab9f16e7;
    item73.width = (uint32_t) 0x1098f0ddd90a87df;
    item73.height = (uint32_t) 0xdf13872fe069c162;
    item73.faceCount = (uint32_t) 0xa974c09df16cd92f;
    item73.arraySize = (uint32_t) 0xe3dd32dd4d187e50;
    item73.mipCount = (uint32_t) 0xa0d4f3dc6d5f31a5;
    XrCompositionLayerProjectionView item74{};
    item74.type = XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW;
    item74.next = nullptr;
    item74.pose.orientation.x = (float) 0x5d035206f5d1347d;
    item74.pose.orientation.y = (float) 0x5ecb516880284193;
    item74.pose.orientation.z = (float) 0xbd90c1414a73e1fc;
    item74.pose.orientation.w = (float) 0x5c774f7aa890fe22;
    item74.pose.position.x = (float) 0x7e7d7b1d216ca887;
    item74.pose.position.y = (float) 0x12be1f03b49ae75b;
    item74.pose.position.z = (float) 0xddabda16a8fb8daa;
    item74.fov.angleLeft = (float) 0x1507366a5310e7f1;
    item74.fov.angleRight = (float) 0x70ffd90fe649e7a1;
    item74.fov.angleUp = (float) 0x4a152261464f2386;
    item74.fov.angleDown = (float) 0xcb2786735423c8ad;
    item74.subImage.swapchain = (XrSwapchain) 0x5ec58bb018ab88d9;
    item74.subImage.imageRect.offset.x = (int32_t) 0x7b53015f7cc5494c;
    item74.subImage.imageRect.offset.y = (int32_t) 0xac1952a1b1675a17;
    item74.subImage.imageRect.extent.width = (int32_t) 0x26ab44efb54d1686;
    item74.subImage.imageRect.extent.height = (int32_t) 0x5839f9a01215291a;
    item74.subImage.imageArrayIndex = (uint32_t) 0x8e0745b13c373315;
    XrFrameState item75{};
    item75.type = XR_TYPE_FRAME_STATE;
    item75.next = nullptr;
    item75.predictedDisplayTime = (XrTime) 0xecdb8197ab877cda;
    item75.predictedDisplayPeriod = (XrDuration) 0xcf1844ded0fc1107;
    item75.shouldRender = (XrBool32) 0x6f06879877e05edd;
    XrViewConfigurationProperties item76{};
    item76.type = XR_TYPE_VIEW_CONFIGURATION_PROPERTIES;
    item76.next = nullptr;
    item76.viewConfigurationType = (XrViewConfigurationType) 0x8582e262a7eb2f51;
    item76.fovMutable = (XrBool32) 0x9f86d63e36362291;
    XrColor3f item77{};
    item77.r = (float) 0xa47df49733a108e7;
    item77.g = (float) 0x77053b9017cd4929;
    item77.b = (float) 0xe23a13f06e94d10e;
    XrSpacesLocateInfo item78{};
    item78.type = XR_TYPE_SPACES_LOCATE_INFO;
    XrFrameBeginInfo item78_next[1]{};
    item78_next[0].type = XR_TYPE_FRAME_BEGIN_INFO;
    item78_next[0].next = nullptr;
    item78.next = item78_next;
    item78.baseSpace = (XrSpace) 0xbf26750e7dd133ae;
    item78.time = (XrTime) 0x49122316d0dcb101;
    item78.spaceCount = (uint32_t) 0x10201e6806ba9ec8;
    item78.spaces = nullptr;
    XrViewState item79{};
    item79.type = XR_TYPE_VIEW_STATE;
    XrSessionActionSetsAttachInfo item79_next[1]{};
    item79_next[0].type = XR_TYPE_SESSION_ACTION_SETS_ATTACH_INFO;
    item79_next[0].next = nullptr;
    item79_next[0].countActionSets = (uint32_t) 0xf0e637daad4b1588;
    item79_next[0].actionSets = nullptr;
    item79.next = item79_next;
    item79.viewStateFlags = (XrViewStateFlags) 0xf67eb026df6fbba4;
    XrVector3f item80{};
    item80.x = (float) 0x694ece383d472ee;
    item80.y = (float) 0x61157d42241e5b3d;
    item80.z = (float) 0xc5825f913cb4483c;
    XrViewConfigurationView item81{};
    item81.type = XR_TYPE_VIEW_CONFIGURATION_VIEW;
    item81.next = nullptr;
    item81.recommendedImageRectWidth = (uint32_t) 0xa8bdeeeaa8072bb2;
    item81.maxImageRectWidth = (uint32_t) 0x5f3dc8d9b5f2e4e3;
    item81.recommendedImageRectHeight = (uint32_t) 0xeded9651ff70ddff;
    item81.maxImageRectHeight = (uint32_t) 0x292de2c0bc6ef05d;
    item81.recommendedSwapchainSampleCount = (uint32_t) 0x407ffdf7a9ad33cc;
    item81.maxSwapchainSampleCount = (uint32_t) 0xa8309dc6c64e3c65;
    XrExtent2Di item82{};
    item82.width = (int32_t) 0xb42f7bf190d05835;
    item82.height = (int32_t) 0xc214800eac48589c;
    XrCompositionLayerProjectionView item83{};
    item83.type = XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW;
    item83.next = nullptr;
    item83.pose.orientation.x = (float) 0x1f52517fd3eccd23;
    item83.pose.orientation.y = (float) 0x16e3e0249244a1ca;
    item83.pose.orientation.z = (float) 0x11fed6d19d9b8f0d;
    item83.pose.orientation.w = (float) 0xb764ca193353896b;
    item83.pose.position.x = (float) 0x5586199f4ee374b0;
    item83.pose.position.y = (float) 0x541c7af9753fe1fe;
    item83.pose.position.z = (float) 0xfe2696d60f5a2c91;
    item83.fov.angleLeft = (float) 0x18370d70a5a97423;
    item83.fov.angleRight = (float) 0xdb311790dd551dcf;
    item83.fov.angleUp = (float) 0x235e11f95345ca4d;
    item83.fov.angleDown = (float) 0xa2824a65af07616d;
    item83.subImage.swapchain = (XrSwapchain) 0xe9588b54751530e8;
    item83.subImage.imageRect.offset.x = (int32_t) 0x3a79ae5fcdec455e;
    item83.subImage.imageRect.offset.y = (int32_t) 0x378fb2f08d8cad6d;
    item83.subImage.imageRect.extent.width = (int32_t) 0x8ab1c45a84e890bc;
    item83.subImage.imageRect.extent.height = (int32_t) 0x18111061d555a058;
    item83.subImage.imageArrayIndex = (uint32_t) 0x991fcbbdd85c02ae;
    XrActiveActionSet item84{};
    item84.actionSet = (XrActionSet) 0xb0a639e0510a2465;
    item84.subactionPath = (XrPath) 0xf6f360e67e5889f0;
    XrSpaceVelocityData item85{};
    item85.velocityFlags = (XrSpaceVelocityFlags) 0x6eab223724a6c590;
    item85.linearVelocity.x = (float) 0x4f0e83ea4c410300;
    item85.linearVelocity.y = (float) 0x7f66a69eb1d80974;
    item85.linearVelocity.z = (float) 0xa0bbb46582a3ffb3;
    item85.angularVelocity.x = (float) 0x5ed25d983366e2b7;
    item85.angularVelocity.y = (float) 0x9128eee0687a438;
    item85.angularVelocity.z = (float) 0x9f0d10c1daf17d77;
    XrRect2Df item86{};
    item86.offset.x = (float) 0xbb37f24dffb27ec6;
    item86.offset.y = (float) 0x2c27049c2e924c5e;
    item86.extent.width = (float) 0x83ef6fc03ca691af;
    item86.extent.height = (float) 0x12ffa86cebaab300;
    XrBoundSourcesForActionEnumerateInfo item87{};
    item87.type = XR_TYPE_BOUND_SOURCES_FOR_ACTION_ENUMERATE_INFO;
    XrHapticVibration item87_next[1]{};
    item87_next[0].type = XR_TYPE_HAPTIC_VIBRATION;
    item87_next[0].next = nullptr;
    item87_next[0].duration = (XrDuration) 0x69aa132e2a49b299;
    item87_next[0].frequency = (float) 0x99bffd8837f06f11;
    item87_next[0].amplitude = (float) 0xb1896ea7409a8aa8;
    item87.next = item87_next;
    item87.action = (XrAction) 0x83a466fdb65baeb6;
    XrExtent3Df item88{};
    item88.width = (float) 0x3074a99b82a736a8;
    item88.height = (float) 0x38aff6c6fa483af9;
    item88.depth = (float) 0x4ae4ee9f98f76e45;
    XrEventDataReferenceSpaceChangePending item89{};
    item89.type = XR_TYPE_EVENT_DATA_REFERENCE_SPACE_CHANGE_PENDING;
    item89.next = nullptr;
    item89.session = (XrSession) 0x2b3d9291d1c65ac3;
    item89.referenceSpaceType = (XrReferenceSpaceType) 0x5769fc550f452ac1;
    item89.changeTime = (XrTime) 0xcd5fb5b0185e7b43;
    item89.poseValid = (XrBool32) 0x352d121ede07fff2;
    item89.poseInPreviousSpace.orientation.x = (float) 0x8a0ef9d8a7975d16;
    item89.poseInPreviousSpace.orientation.y = (float) 0x6d453c06f1b56a9a;
    item89.poseInPreviousSpace.orientation.z = (float) 0x34b8c1e3c03cc5e4;
    item89.poseInPreviousSpace.orientation.w = (float) 0x8474335f96fef440;
    item89.poseInPreviousSpace.position.x = (float) 0xb708f3ceb05f1e0c;
    item89.poseInPreviousSpace.position.y = (float) 0x7603b0fc59aa2ed7;
    item89.poseInPreviousSpace.position.z = (float) 0x189e421cf030024b;
    XrApplicationInfo item90{};
    for (int i = 0; i < XR_MAX_APPLICATION_NAME_SIZE; i++) {
        item90.applicationName[i] = 'R';
    }
    item90.applicationVersion = (uint32_t) 0x17a16f5a89560159;
    for (int i = 0; i < XR_MAX_ENGINE_NAME_SIZE; i++) {
        item90.engineName[i] = 'W';
    }
    item90.engineVersion = (uint32_t) 0x257e01bd066ae050;
    item90.apiVersion = (XrVersion) 0xa29a61d3e06a6e05;
    XrPosef item91{};
    item91.orientation.x = (float) 0xdd4fffacc9222726;
    item91.orientation.y = (float) 0xc18c0fe0e3d3deca;
    item91.orientation.z = (float) 0x8a0945f9454de24a;
    item91.orientation.w = (float) 0xd3c57f12cd8bebfe;
    item91.position.x = (float) 0x3b55a1af24654c34;
    item91.position.y = (float) 0x356ec0b1f45562be;
    item91.position.z = (float) 0x1fad098bf410d9d4;
    XrFrameBeginInfo item92{};
    item92.type = XR_TYPE_FRAME_BEGIN_INFO;
    XrSpaceVelocities item92_next[1]{};
    item92_next[0].type = XR_TYPE_SPACE_VELOCITIES;
    item92_next[0].next = nullptr;
    item92_next[0].velocityCount = (uint32_t) 0xea1d0b3d89d1ba1b;
    item92_next[0].velocities = nullptr;
    item92.next = item92_next;
    XrEventDataInteractionProfileChanged item93{};
    item93.type = XR_TYPE_EVENT_DATA_INTERACTION_PROFILE_CHANGED;
    XrInstanceProperties item93_next[1]{};
    item93_next[0].type = XR_TYPE_INSTANCE_PROPERTIES;
    item93_next[0].next = nullptr;
    item93_next[0].runtimeVersion = (XrVersion) 0xb368f7e7f4d238a3;
    for (int i = 0; i < XR_MAX_RUNTIME_NAME_SIZE; i++) {
        item93_next[0].runtimeName[i] = 'x';
    }
    item93.next = item93_next;
    item93.session = (XrSession) 0x2e1010f8f95e72cc;
    XrSwapchainCreateInfo item94{};
    item94.type = XR_TYPE_SWAPCHAIN_CREATE_INFO;
    item94.next = nullptr;
    item94.createFlags = (XrSwapchainCreateFlags) 0xbff22a0988e93a62;
    item94.usageFlags = (XrSwapchainUsageFlags) 0x9deb978739564ccb;
    item94.format = (int64_t) 0x3d0ac758a3325008;
    item94.sampleCount = (uint32_t) 0xaf62bf68a692f39f;
    item94.width = (uint32_t) 0xc1403877108b9687;
    item94.height = (uint32_t) 0xd546d2f66dc8ec49;
    item94.faceCount = (uint32_t) 0xc644b53df279b219;
    item94.arraySize = (uint32_t) 0x6521bca8e7c88d92;
    item94.mipCount = (uint32_t) 0x2843b4f8f3bed721;
    XrActionSuggestedBinding item95{};
    item95.action = (XrAction) 0x184c441014a1de7;
    item95.binding = (XrPath) 0x57bafe92a27b68f5;
    XrQuaternionf item96{};
    item96.x = (float) 0x4a978f211ef14a9a;
    item96.y = (float) 0x87a4b2170a1dce63;
    item96.z = (float) 0x9c6aaa70193b0953;
    item96.w = (float) 0xca3e942032da25f4;
    XrSpaceVelocities item97{};
    item97.type = XR_TYPE_SPACE_VELOCITIES;
    item97.next = nullptr;
    item97.velocityCount = 1;
    XrSpaceVelocityData item97_velocities[1]{};
    item97_velocities[0].velocityFlags = (XrSpaceVelocityFlags) 0x49ea46287410d595;
    item97_velocities[0].linearVelocity.x = (float) 0xfdd8e85409bc772e;
    item97_velocities[0].linearVelocity.y = (float) 0x34f95d3cecd9c7e;
    item97_velocities[0].linearVelocity.z = (float) 0x3cfb0d3dca65231d;
    item97_velocities[0].angularVelocity.x = (float) 0x999af5e0d9767259;
    item97_velocities[0].angularVelocity.y = (float) 0xe4d03c1b9b1988f5;
    item97_velocities[0].angularVelocity.z = (float) 0x8af0d1f2f6320869;
    item97.velocities = item97_velocities;
    XrHapticActionInfo item98{};
    item98.type = XR_TYPE_HAPTIC_ACTION_INFO;
    XrSpaceLocation item98_next[1]{};
    item98_next[0].type = XR_TYPE_SPACE_LOCATION;
    item98_next[0].next = nullptr;
    item98_next[0].locationFlags = (XrSpaceLocationFlags) 0xd19362cbed2fd7a4;
    item98_next[0].pose.orientation.x = (float) 0x7e3307c3a85f1abc;
    item98_next[0].pose.orientation.y = (float) 0x4f9a98558b0e99d1;
    item98_next[0].pose.orientation.z = (float) 0x1b6fc0e475115b08;
    item98_next[0].pose.orientation.w = (float) 0xcf9bdf01f2f43e6d;
    item98_next[0].pose.position.x = (float) 0xc2ec0c71ed70cdfa;
    item98_next[0].pose.position.y = (float) 0x63da0f80ec6791fd;
    item98_next[0].pose.position.z = (float) 0x8b618bd9108d7344;
    item98.next = item98_next;
    item98.action = (XrAction) 0x5defd5ae717f9b51;
    item98.subactionPath = (XrPath) 0x3297427a279aef6c;
    XrRect2Df item99{};
    item99.offset.x = (float) 0x6a60b28e9329b796;
    item99.offset.y = (float) 0x108a9d062e5073b4;
    item99.extent.width = (float) 0x53788c18f9aa2bf0;
    item99.extent.height = (float) 0x4ed6fe15d939a770;

    //
    // Serialize all structs
    //
    ByteStreamBuffer buffer;
    std::ostream out(&buffer);

    serialize(&item0, out);
    serialize(&item1, out);
    serialize(&item2, out);
    serialize(&item3, out);
    serialize(&item4, out);
    serialize(&item5, out);
    serialize(&item6, out);
    serialize(&item7, out);
    serialize(&item8, out);
    serialize(&item9, out);
    serialize(&item10, out);
    serialize(&item11, out);
    serialize(&item12, out);
    serialize(&item13, out);
    serialize(&item14, out);
    serialize(&item15, out);
    serialize(&item16, out);
    serialize(&item17, out);
    serialize(&item18, out);
    serialize(&item19, out);
    serialize(&item20, out);
    serialize(&item21, out);
    serialize(&item22, out);
    serialize(&item23, out);
    serialize(&item24, out);
    serialize(&item25, out);
    serialize(&item26, out);
    serialize(&item27, out);
    serialize(&item28, out);
    serialize(&item29, out);
    serialize(&item30, out);
    serialize(&item31, out);
    serialize(&item32, out);
    serialize(&item33, out);
    serialize(&item34, out);
    serialize(&item35, out);
    serialize(&item36, out);
    serialize(&item37, out);
    serialize(&item38, out);
    serialize(&item39, out);
    serialize(&item40, out);
    serialize(&item41, out);
    serialize(&item42, out);
    serialize(&item43, out);
    serialize(&item44, out);
    serialize(&item45, out);
    serialize(&item46, out);
    serialize(&item47, out);
    serialize(&item48, out);
    serialize(&item49, out);
    serialize(&item50, out);
    serialize(&item51, out);
    serialize(&item52, out);
    serialize(&item53, out);
    serialize(&item54, out);
    serialize(&item55, out);
    serialize(&item56, out);
    serialize(&item57, out);
    serialize(&item58, out);
    serialize(&item59, out);
    serialize(&item60, out);
    serialize(&item61, out);
    serialize(&item62, out);
    serialize(&item63, out);
    serialize(&item64, out);
    serialize(&item65, out);
    serialize(&item66, out);
    serialize(&item67, out);
    serialize(&item68, out);
    serialize(&item69, out);
    serialize(&item70, out);
    serialize(&item71, out);
    serialize(&item72, out);
    serialize(&item73, out);
    serialize(&item74, out);
    serialize(&item75, out);
    serialize(&item76, out);
    serialize(&item77, out);
    serialize(&item78, out);
    serialize(&item79, out);
    serialize(&item80, out);
    serialize(&item81, out);
    serialize(&item82, out);
    serialize(&item83, out);
    serialize(&item84, out);
    serialize(&item85, out);
    serialize(&item86, out);
    serialize(&item87, out);
    serialize(&item88, out);
    serialize(&item89, out);
    serialize(&item90, out);
    serialize(&item91, out);
    serialize(&item92, out);
    serialize(&item93, out);
    serialize(&item94, out);
    serialize(&item95, out);
    serialize(&item96, out);
    serialize(&item97, out);
    serialize(&item98, out);
    serialize(&item99, out);

    //
    // Deserialize all structs
    //
    buffer.reset_read();
    std::istream in(&buffer);

    XrSwapchainImageReleaseInfo new_item0{};
    deserialize(&new_item0, in);
    XrSpaceLocationData new_item1{};
    deserialize(&new_item1, in);
    XrSpaceVelocities new_item2{};
    deserialize(&new_item2, in);
    XrExtensionProperties new_item3{};
    deserialize(&new_item3, in);
    XrSpaceLocation new_item4{};
    deserialize(&new_item4, in);
    XrQuaternionf new_item5{};
    deserialize(&new_item5, in);
    XrInteractionProfileSuggestedBinding new_item6{};
    deserialize(&new_item6, in);
    XrExtent3Df new_item7{};
    deserialize(&new_item7, in);
    XrSwapchainImageAcquireInfo new_item8{};
    deserialize(&new_item8, in);
    XrEventDataReferenceSpaceChangePending new_item9{};
    deserialize(&new_item9, in);
    XrEventDataEventsLost new_item10{};
    deserialize(&new_item10, in);
    XrSessionCreateInfo new_item11{};
    deserialize(&new_item11, in);
    XrSystemGetInfo new_item12{};
    deserialize(&new_item12, in);
    XrSpaceVelocity new_item13{};
    deserialize(&new_item13, in);
    XrInteractionProfileState new_item14{};
    deserialize(&new_item14, in);
    XrSystemGraphicsProperties new_item15{};
    deserialize(&new_item15, in);
    XrCompositionLayerProjectionView new_item16{};
    deserialize(&new_item16, in);
    XrHapticVibration new_item17{};
    deserialize(&new_item17, in);
    XrSpaceLocation new_item18{};
    deserialize(&new_item18, in);
    XrCompositionLayerProjectionView new_item19{};
    deserialize(&new_item19, in);
    XrUuid new_item20{};
    deserialize(&new_item20, in);
    XrSystemTrackingProperties new_item21{};
    deserialize(&new_item21, in);
    XrSpheref new_item22{};
    deserialize(&new_item22, in);
    XrEventDataSessionStateChanged new_item23{};
    deserialize(&new_item23, in);
    XrActionSetCreateInfo new_item24{};
    deserialize(&new_item24, in);
    XrActionSpaceCreateInfo new_item25{};
    deserialize(&new_item25, in);
    XrActionSuggestedBinding new_item26{};
    deserialize(&new_item26, in);
    XrBoundSourcesForActionEnumerateInfo new_item27{};
    deserialize(&new_item27, in);
    XrVector3f new_item28{};
    deserialize(&new_item28, in);
    XrSystemGetInfo new_item29{};
    deserialize(&new_item29, in);
    XrInteractionProfileState new_item30{};
    deserialize(&new_item30, in);
    XrSwapchainSubImage new_item31{};
    deserialize(&new_item31, in);
    XrHapticVibration new_item32{};
    deserialize(&new_item32, in);
    XrSystemGraphicsProperties new_item33{};
    deserialize(&new_item33, in);
    XrCompositionLayerProjectionView new_item34{};
    deserialize(&new_item34, in);
    XrColor4f new_item35{};
    deserialize(&new_item35, in);
    XrUuid new_item36{};
    deserialize(&new_item36, in);
    XrInputSourceLocalizedNameGetInfo new_item37{};
    deserialize(&new_item37, in);
    XrApplicationInfo new_item38{};
    deserialize(&new_item38, in);
    XrActionStateBoolean new_item39{};
    deserialize(&new_item39, in);
    XrSpaceVelocity new_item40{};
    deserialize(&new_item40, in);
    XrOffset2Df new_item41{};
    deserialize(&new_item41, in);
    XrHapticVibration new_item42{};
    deserialize(&new_item42, in);
    XrEventDataEventsLost new_item43{};
    deserialize(&new_item43, in);
    XrActionStatePose new_item44{};
    deserialize(&new_item44, in);
    XrSpacesLocateInfo new_item45{};
    deserialize(&new_item45, in);
    XrSpaceVelocityData new_item46{};
    deserialize(&new_item46, in);
    XrInteractionProfileState new_item47{};
    deserialize(&new_item47, in);
    XrFrameWaitInfo new_item48{};
    deserialize(&new_item48, in);
    XrUuid new_item49{};
    deserialize(&new_item49, in);
    XrSwapchainCreateInfo new_item50{};
    deserialize(&new_item50, in);
    XrColor3f new_item51{};
    deserialize(&new_item51, in);
    XrInputSourceLocalizedNameGetInfo new_item52{};
    deserialize(&new_item52, in);
    XrSystemGraphicsProperties new_item53{};
    deserialize(&new_item53, in);
    XrCompositionLayerProjectionView new_item54{};
    deserialize(&new_item54, in);
    XrExtensionProperties new_item55{};
    deserialize(&new_item55, in);
    XrVector2f new_item56{};
    deserialize(&new_item56, in);
    XrBodySkeletonJointHTC new_item57{};
    deserialize(&new_item57, in);
    XrEventDataReferenceSpaceChangePending new_item58{};
    deserialize(&new_item58, in);
    XrActionStateFloat new_item59{};
    deserialize(&new_item59, in);
    XrSystemTrackingProperties new_item60{};
    deserialize(&new_item60, in);
    XrQuaternionf new_item61{};
    deserialize(&new_item61, in);
    XrSwapchainSubImage new_item62{};
    deserialize(&new_item62, in);
    XrSpaceLocation new_item63{};
    deserialize(&new_item63, in);
    XrOffset2Df new_item64{};
    deserialize(&new_item64, in);
    XrCompositionLayerProjection new_item65{};
    deserialize(&new_item65, in);
    XrFrustumf new_item66{};
    deserialize(&new_item66, in);
    XrFovf new_item67{};
    deserialize(&new_item67, in);
    XrSpaceLocations new_item68{};
    deserialize(&new_item68, in);
    XrExtent2Di new_item69{};
    deserialize(&new_item69, in);
    XrActionStateBoolean new_item70{};
    deserialize(&new_item70, in);
    XrView new_item71{};
    deserialize(&new_item71, in);
    XrActionStateBoolean new_item72{};
    deserialize(&new_item72, in);
    XrSwapchainCreateInfo new_item73{};
    deserialize(&new_item73, in);
    XrCompositionLayerProjectionView new_item74{};
    deserialize(&new_item74, in);
    XrFrameState new_item75{};
    deserialize(&new_item75, in);
    XrViewConfigurationProperties new_item76{};
    deserialize(&new_item76, in);
    XrColor3f new_item77{};
    deserialize(&new_item77, in);
    XrSpacesLocateInfo new_item78{};
    deserialize(&new_item78, in);
    XrViewState new_item79{};
    deserialize(&new_item79, in);
    XrVector3f new_item80{};
    deserialize(&new_item80, in);
    XrViewConfigurationView new_item81{};
    deserialize(&new_item81, in);
    XrExtent2Di new_item82{};
    deserialize(&new_item82, in);
    XrCompositionLayerProjectionView new_item83{};
    deserialize(&new_item83, in);
    XrActiveActionSet new_item84{};
    deserialize(&new_item84, in);
    XrSpaceVelocityData new_item85{};
    deserialize(&new_item85, in);
    XrRect2Df new_item86{};
    deserialize(&new_item86, in);
    XrBoundSourcesForActionEnumerateInfo new_item87{};
    deserialize(&new_item87, in);
    XrExtent3Df new_item88{};
    deserialize(&new_item88, in);
    XrEventDataReferenceSpaceChangePending new_item89{};
    deserialize(&new_item89, in);
    XrApplicationInfo new_item90{};
    deserialize(&new_item90, in);
    XrPosef new_item91{};
    deserialize(&new_item91, in);
    XrFrameBeginInfo new_item92{};
    deserialize(&new_item92, in);
    XrEventDataInteractionProfileChanged new_item93{};
    deserialize(&new_item93, in);
    XrSwapchainCreateInfo new_item94{};
    deserialize(&new_item94, in);
    XrActionSuggestedBinding new_item95{};
    deserialize(&new_item95, in);
    XrQuaternionf new_item96{};
    deserialize(&new_item96, in);
    XrSpaceVelocities new_item97{};
    deserialize(&new_item97, in);
    XrHapticActionInfo new_item98{};
    deserialize(&new_item98, in);
    XrRect2Df new_item99{};
    deserialize(&new_item99, in);

    //
    // Struct comparison
    //
    assert(new_item0.type == XR_TYPE_SWAPCHAIN_IMAGE_RELEASE_INFO);
    assert(((XrEventDataInteractionProfileChanged*)new_item0.next)[0].type == XR_TYPE_EVENT_DATA_INTERACTION_PROFILE_CHANGED);
    assert(((XrEventDataInteractionProfileChanged*)new_item0.next)[0].next == nullptr);
    assert(((XrEventDataInteractionProfileChanged*)new_item0.next)[0].session == (XrSession) 0x4ec10fc6fee29f53);
    assert(new_item1.locationFlags == (XrSpaceLocationFlags) 0x5d685155e98cd7d9);
    assert(new_item1.pose.orientation.x == (float) 0xe66eb1186613c33d);
    assert(new_item1.pose.orientation.y == (float) 0xe369ab3d591d3569);
    assert(new_item1.pose.orientation.z == (float) 0xd51f25e60490392a);
    assert(new_item1.pose.orientation.w == (float) 0x1e5876bf982e524e);
    assert(new_item1.pose.position.x == (float) 0xf522dfdc3f12cc0c);
    assert(new_item1.pose.position.y == (float) 0xda1298c4cbb452ae);
    assert(new_item1.pose.position.z == (float) 0x9ac68d26ea43fe43);
    assert(new_item2.type == XR_TYPE_SPACE_VELOCITIES);
    assert(new_item2.next == nullptr);
    assert(new_item2.velocityCount == 20);
    assert(new_item2.velocities[0].velocityFlags == (XrSpaceVelocityFlags) 0x127e2cc80b3bbf03);
    assert(new_item2.velocities[0].linearVelocity.x == (float) 0xa28f38bd0463522c);
    assert(new_item2.velocities[0].linearVelocity.y == (float) 0x1ac66dea32700980);
    assert(new_item2.velocities[0].linearVelocity.z == (float) 0x5074d85b9194e696);
    assert(new_item2.velocities[0].angularVelocity.x == (float) 0x41dd9a9fa508c8e8);
    assert(new_item2.velocities[0].angularVelocity.y == (float) 0xb5710cdb11190839);
    assert(new_item2.velocities[0].angularVelocity.z == (float) 0x311e18c91413b58c);
    assert(new_item2.velocities[1].velocityFlags == (XrSpaceVelocityFlags) 0xe0a9467740c7c159);
    assert(new_item2.velocities[1].linearVelocity.x == (float) 0x2663ba178df6073d);
    assert(new_item2.velocities[1].linearVelocity.y == (float) 0x6e10d8ac0af84fd9);
    assert(new_item2.velocities[1].linearVelocity.z == (float) 0xf8a82a8dbdb78c3f);
    assert(new_item2.velocities[1].angularVelocity.x == (float) 0xa24898ef0e531c17);
    assert(new_item2.velocities[1].angularVelocity.y == (float) 0x6164b99c58e8abfc);
    assert(new_item2.velocities[1].angularVelocity.z == (float) 0xb7a60ec1437f7e5c);
    assert(new_item2.velocities[2].velocityFlags == (XrSpaceVelocityFlags) 0x22d99277310791bb);
    assert(new_item2.velocities[2].linearVelocity.x == (float) 0x9cf8d97f6451fadd);
    assert(new_item2.velocities[2].linearVelocity.y == (float) 0x40bc08848d85b315);
    assert(new_item2.velocities[2].linearVelocity.z == (float) 0x5570b28ed7b9ba35);
    assert(new_item2.velocities[2].angularVelocity.x == (float) 0xb7c8cf3528ba4db2);
    assert(new_item2.velocities[2].angularVelocity.y == (float) 0xa14680d52591d5f);
    assert(new_item2.velocities[2].angularVelocity.z == (float) 0x999613938a3b319f);
    assert(new_item2.velocities[3].velocityFlags == (XrSpaceVelocityFlags) 0x6ffedc96a42ca3e6);
    assert(new_item2.velocities[3].linearVelocity.x == (float) 0xdfbe3b62670370e8);
    assert(new_item2.velocities[3].linearVelocity.y == (float) 0xead13c41399fcfd6);
    assert(new_item2.velocities[3].linearVelocity.z == (float) 0x3c9921edbf0d1338);
    assert(new_item2.velocities[3].angularVelocity.x == (float) 0xb556ec05d02819d9);
    assert(new_item2.velocities[3].angularVelocity.y == (float) 0xb1ac56a275f53e2a);
    assert(new_item2.velocities[3].angularVelocity.z == (float) 0x4674252dee87e8a2);
    assert(new_item2.velocities[4].velocityFlags == (XrSpaceVelocityFlags) 0x4d21b0cb3e36eee3);
    assert(new_item2.velocities[4].linearVelocity.x == (float) 0xedce70dc54117a0e);
    assert(new_item2.velocities[4].linearVelocity.y == (float) 0xf82272a99478e208);
    assert(new_item2.velocities[4].linearVelocity.z == (float) 0x7f0b4c558f78a664);
    assert(new_item2.velocities[4].angularVelocity.x == (float) 0x26101d6e040e5825);
    assert(new_item2.velocities[4].angularVelocity.y == (float) 0xfa5035167745f6e1);
    assert(new_item2.velocities[4].angularVelocity.z == (float) 0x9d823b35bba0cbd5);
    assert(new_item2.velocities[5].velocityFlags == (XrSpaceVelocityFlags) 0x556d1ddb8c273f1);
    assert(new_item2.velocities[5].linearVelocity.x == (float) 0x315baf27ca6cff02);
    assert(new_item2.velocities[5].linearVelocity.y == (float) 0xc0776b023caf3403);
    assert(new_item2.velocities[5].linearVelocity.z == (float) 0xcc99eb12a1f3ab06);
    assert(new_item2.velocities[5].angularVelocity.x == (float) 0xac58bc7d67f25bfa);
    assert(new_item2.velocities[5].angularVelocity.y == (float) 0x50151c6dc099797c);
    assert(new_item2.velocities[5].angularVelocity.z == (float) 0x6d20bd39b0f2badc);
    assert(new_item2.velocities[6].velocityFlags == (XrSpaceVelocityFlags) 0xa1570f48caceb3dd);
    assert(new_item2.velocities[6].linearVelocity.x == (float) 0x2b7e9608c8f4cee6);
    assert(new_item2.velocities[6].linearVelocity.y == (float) 0x31990fffdbdfdb26);
    assert(new_item2.velocities[6].linearVelocity.z == (float) 0x32648cd6af2b4fdb);
    assert(new_item2.velocities[6].angularVelocity.x == (float) 0xe97ad106a47bfe3f);
    assert(new_item2.velocities[6].angularVelocity.y == (float) 0x987c63cf93d56de2);
    assert(new_item2.velocities[6].angularVelocity.z == (float) 0x6e3dacc90f12121b);
    assert(new_item2.velocities[7].velocityFlags == (XrSpaceVelocityFlags) 0xc9c0c490ae39d9aa);
    assert(new_item2.velocities[7].linearVelocity.x == (float) 0x12e9831d31b56da5);
    assert(new_item2.velocities[7].linearVelocity.y == (float) 0x22db2ca5a94de172);
    assert(new_item2.velocities[7].linearVelocity.z == (float) 0x948e6c1545e4c644);
    assert(new_item2.velocities[7].angularVelocity.x == (float) 0x3e9a5775f3bf77ec);
    assert(new_item2.velocities[7].angularVelocity.y == (float) 0x497cff13eaa5bf76);
    assert(new_item2.velocities[7].angularVelocity.z == (float) 0xeb28e3b1b084410f);
    assert(new_item2.velocities[8].velocityFlags == (XrSpaceVelocityFlags) 0xd9f6bca7d86e01e0);
    assert(new_item2.velocities[8].linearVelocity.x == (float) 0x7c78397d4ca4cd0e);
    assert(new_item2.velocities[8].linearVelocity.y == (float) 0xe7b8cdb9a53727e);
    assert(new_item2.velocities[8].linearVelocity.z == (float) 0xcaae117ec26c7625);
    assert(new_item2.velocities[8].angularVelocity.x == (float) 0xc307a9d7d1f78baf);
    assert(new_item2.velocities[8].angularVelocity.y == (float) 0x65ae497d6bf5f8f7);
    assert(new_item2.velocities[8].angularVelocity.z == (float) 0x31392cb2c797a45);
    assert(new_item2.velocities[9].velocityFlags == (XrSpaceVelocityFlags) 0x308442bd2f0ab265);
    assert(new_item2.velocities[9].linearVelocity.x == (float) 0x306743716cd08c92);
    assert(new_item2.velocities[9].linearVelocity.y == (float) 0x6afaf64c28707959);
    assert(new_item2.velocities[9].linearVelocity.z == (float) 0xf4e88aad1497184f);
    assert(new_item2.velocities[9].angularVelocity.x == (float) 0x2fa10751805f567c);
    assert(new_item2.velocities[9].angularVelocity.y == (float) 0x4e327d5dc1a11dff);
    assert(new_item2.velocities[9].angularVelocity.z == (float) 0x481191a75247636b);
    assert(new_item2.velocities[10].velocityFlags == (XrSpaceVelocityFlags) 0x53646b1cfee7d9fd);
    assert(new_item2.velocities[10].linearVelocity.x == (float) 0x37514178b2d9e691);
    assert(new_item2.velocities[10].linearVelocity.y == (float) 0x89dcdc0ae550eabc);
    assert(new_item2.velocities[10].linearVelocity.z == (float) 0xf327d42fb261a84d);
    assert(new_item2.velocities[10].angularVelocity.x == (float) 0xfaa4876465f73e39);
    assert(new_item2.velocities[10].angularVelocity.y == (float) 0x66244131cd05f916);
    assert(new_item2.velocities[10].angularVelocity.z == (float) 0xa4de0fa4faf4bf35);
    assert(new_item2.velocities[11].velocityFlags == (XrSpaceVelocityFlags) 0xb89250666f1c7a5e);
    assert(new_item2.velocities[11].linearVelocity.x == (float) 0xfdf64cc21517c64a);
    assert(new_item2.velocities[11].linearVelocity.y == (float) 0x369320c5f4d932fd);
    assert(new_item2.velocities[11].linearVelocity.z == (float) 0xbed86e625cf909db);
    assert(new_item2.velocities[11].angularVelocity.x == (float) 0x250b68ac0845024e);
    assert(new_item2.velocities[11].angularVelocity.y == (float) 0x68a2ad5c9eed7637);
    assert(new_item2.velocities[11].angularVelocity.z == (float) 0x43ea6daed2a87911);
    assert(new_item2.velocities[12].velocityFlags == (XrSpaceVelocityFlags) 0x56bd43df7bfb015f);
    assert(new_item2.velocities[12].linearVelocity.x == (float) 0x9e4c13ee5f956c93);
    assert(new_item2.velocities[12].linearVelocity.y == (float) 0x78e97e8ae0bd6d10);
    assert(new_item2.velocities[12].linearVelocity.z == (float) 0x7bff8ae147ef37c6);
    assert(new_item2.velocities[12].angularVelocity.x == (float) 0xbb3f956726b9b05e);
    assert(new_item2.velocities[12].angularVelocity.y == (float) 0x29c1fcf3b2fefd09);
    assert(new_item2.velocities[12].angularVelocity.z == (float) 0xa922933b0b315a10);
    assert(new_item2.velocities[13].velocityFlags == (XrSpaceVelocityFlags) 0x1fa7ef6f5a0a0add);
    assert(new_item2.velocities[13].linearVelocity.x == (float) 0xa81d04c333010b25);
    assert(new_item2.velocities[13].linearVelocity.y == (float) 0x83e412adbb100261);
    assert(new_item2.velocities[13].linearVelocity.z == (float) 0x675711b4f3fe1593);
    assert(new_item2.velocities[13].angularVelocity.x == (float) 0xcfe06e563318e2bc);
    assert(new_item2.velocities[13].angularVelocity.y == (float) 0xd51ceddab7795459);
    assert(new_item2.velocities[13].angularVelocity.z == (float) 0xe8ebd27ca97386d0);
    assert(new_item2.velocities[14].velocityFlags == (XrSpaceVelocityFlags) 0xeb7cc914b95b32df);
    assert(new_item2.velocities[14].linearVelocity.x == (float) 0x494ee3565122540c);
    assert(new_item2.velocities[14].linearVelocity.y == (float) 0x412ce7bf0b153a85);
    assert(new_item2.velocities[14].linearVelocity.z == (float) 0x8934d2f644d07f24);
    assert(new_item2.velocities[14].angularVelocity.x == (float) 0xe019cf5f08d74c5a);
    assert(new_item2.velocities[14].angularVelocity.y == (float) 0xd535be69e2b40d48);
    assert(new_item2.velocities[14].angularVelocity.z == (float) 0x23cbab5def58301d);
    assert(new_item2.velocities[15].velocityFlags == (XrSpaceVelocityFlags) 0xe2f4fc517f35f951);
    assert(new_item2.velocities[15].linearVelocity.x == (float) 0x561ef6ea89b3dbf);
    assert(new_item2.velocities[15].linearVelocity.y == (float) 0x959f4db312dbb5e1);
    assert(new_item2.velocities[15].linearVelocity.z == (float) 0xbca2014c6234db04);
    assert(new_item2.velocities[15].angularVelocity.x == (float) 0x20b1eed5978e4900);
    assert(new_item2.velocities[15].angularVelocity.y == (float) 0xbf037ba260e9c111);
    assert(new_item2.velocities[15].angularVelocity.z == (float) 0x1384c3552db44714);
    assert(new_item2.velocities[16].velocityFlags == (XrSpaceVelocityFlags) 0x2117120a54ab329a);
    assert(new_item2.velocities[16].linearVelocity.x == (float) 0x91594a52a4aac9c5);
    assert(new_item2.velocities[16].linearVelocity.y == (float) 0x8610a613b654b8e1);
    assert(new_item2.velocities[16].linearVelocity.z == (float) 0x217909c82f899893);
    assert(new_item2.velocities[16].angularVelocity.x == (float) 0x69b37f5eadafa5f5);
    assert(new_item2.velocities[16].angularVelocity.y == (float) 0x81181f0b2718bcb6);
    assert(new_item2.velocities[16].angularVelocity.z == (float) 0xab3d472158d034f1);
    assert(new_item2.velocities[17].velocityFlags == (XrSpaceVelocityFlags) 0x4d8df934efb6fab4);
    assert(new_item2.velocities[17].linearVelocity.x == (float) 0xb9ecff4f6295b1c5);
    assert(new_item2.velocities[17].linearVelocity.y == (float) 0x8373759c9fadde3a);
    assert(new_item2.velocities[17].linearVelocity.z == (float) 0x7d1b965c468048e);
    assert(new_item2.velocities[17].angularVelocity.x == (float) 0xc61fdb7e3c0218b9);
    assert(new_item2.velocities[17].angularVelocity.y == (float) 0xb3484b073b479909);
    assert(new_item2.velocities[17].angularVelocity.z == (float) 0x3f4674f357e7f058);
    assert(new_item2.velocities[18].velocityFlags == (XrSpaceVelocityFlags) 0xb5f50c8d981a4378);
    assert(new_item2.velocities[18].linearVelocity.x == (float) 0xb6e0dfc356a7b732);
    assert(new_item2.velocities[18].linearVelocity.y == (float) 0xddeaf197fbd81d07);
    assert(new_item2.velocities[18].linearVelocity.z == (float) 0x19a73279e90be331);
    assert(new_item2.velocities[18].angularVelocity.x == (float) 0x6638b2c96c605fa9);
    assert(new_item2.velocities[18].angularVelocity.y == (float) 0x3bcc47de126dfd0c);
    assert(new_item2.velocities[18].angularVelocity.z == (float) 0x671dfb202efef734);
    assert(new_item2.velocities[19].velocityFlags == (XrSpaceVelocityFlags) 0x41866137572f48ed);
    assert(new_item2.velocities[19].linearVelocity.x == (float) 0x11d6a9892d43d0f9);
    assert(new_item2.velocities[19].linearVelocity.y == (float) 0xa3570ab2891296ef);
    assert(new_item2.velocities[19].linearVelocity.z == (float) 0x7038ad525045d6ce);
    assert(new_item2.velocities[19].angularVelocity.x == (float) 0x866778f238f878c3);
    assert(new_item2.velocities[19].angularVelocity.y == (float) 0x1c42c81764b11177);
    assert(new_item2.velocities[19].angularVelocity.z == (float) 0xc40ae2d30ca49e93);
    assert(new_item3.type == XR_TYPE_EXTENSION_PROPERTIES);
    assert(new_item3.next == nullptr);
    for (int i = 0; i < XR_MAX_EXTENSION_NAME_SIZE; i++) {
        assert(new_item3.extensionName[i] == 'q');
    }
    assert(new_item3.extensionVersion == (uint32_t) 0x74a8331394946f9f);
    assert(new_item4.type == XR_TYPE_SPACE_LOCATION);
    assert(new_item4.next == nullptr);
    assert(new_item4.locationFlags == (XrSpaceLocationFlags) 0xbaaa128eab882ec7);
    assert(new_item4.pose.orientation.x == (float) 0x76131ee0ac1b4e27);
    assert(new_item4.pose.orientation.y == (float) 0xd60cb6c709261387);
    assert(new_item4.pose.orientation.z == (float) 0xed45d58ed229d3b9);
    assert(new_item4.pose.orientation.w == (float) 0xf373a091bb9c1ef6);
    assert(new_item4.pose.position.x == (float) 0x936ac7b24c2824b9);
    assert(new_item4.pose.position.y == (float) 0x8a47d84265709634);
    assert(new_item4.pose.position.z == (float) 0x6aad3ec186f7c778);
    assert(new_item5.x == (float) 0x63d9fbde9dd12c9b);
    assert(new_item5.y == (float) 0x3a360a803ee4f5b5);
    assert(new_item5.z == (float) 0xe9152f607181dffe);
    assert(new_item5.w == (float) 0x54d1a524d8a701c9);
    assert(new_item6.type == XR_TYPE_INTERACTION_PROFILE_SUGGESTED_BINDING);
    assert(new_item6.next == nullptr);
    assert(new_item6.interactionProfile == (XrPath) 0x1c83e313ebc6e106);
    assert(new_item6.countSuggestedBindings == 5);
    assert(new_item6.suggestedBindings[0].action == (XrAction) 0x2d0044eba95ce96);
    assert(new_item6.suggestedBindings[0].binding == (XrPath) 0x333ded680ce9eb4e);
    assert(new_item6.suggestedBindings[1].action == (XrAction) 0x84454043f9fd97a7);
    assert(new_item6.suggestedBindings[1].binding == (XrPath) 0x803ccd93d51033d9);
    assert(new_item6.suggestedBindings[2].action == (XrAction) 0x4578d88bcabd557f);
    assert(new_item6.suggestedBindings[2].binding == (XrPath) 0x7171e4311ada11c5);
    assert(new_item6.suggestedBindings[3].action == (XrAction) 0xf32bb2351d4d0553);
    assert(new_item6.suggestedBindings[3].binding == (XrPath) 0xf2f69e47083ee461);
    assert(new_item6.suggestedBindings[4].action == (XrAction) 0xbc91412547d80743);
    assert(new_item6.suggestedBindings[4].binding == (XrPath) 0x3a2c461a204f7631);
    assert(new_item7.width == (float) 0x8793b3dd18c43d4d);
    assert(new_item7.height == (float) 0xc1269c11448669bd);
    assert(new_item7.depth == (float) 0xa0d7af822afbbb59);
    assert(new_item8.type == XR_TYPE_SWAPCHAIN_IMAGE_ACQUIRE_INFO);
    assert(new_item8.next == nullptr);
    assert(new_item9.type == XR_TYPE_EVENT_DATA_REFERENCE_SPACE_CHANGE_PENDING);
    assert(new_item9.next == nullptr);
    assert(new_item9.session == (XrSession) 0xe4ce39d6b14e9919);
    assert(new_item9.referenceSpaceType == (XrReferenceSpaceType) 0xe91b9a59defb2f68);
    assert(new_item9.changeTime == (XrTime) 0xd0fee9ecdf23a130);
    assert(new_item9.poseValid == (XrBool32) 0x2eac1338d1b2aaaa);
    assert(new_item9.poseInPreviousSpace.orientation.x == (float) 0x861eaedc819d6601);
    assert(new_item9.poseInPreviousSpace.orientation.y == (float) 0xfe13c54ceb12fea8);
    assert(new_item9.poseInPreviousSpace.orientation.z == (float) 0x7505166ad517bab6);
    assert(new_item9.poseInPreviousSpace.orientation.w == (float) 0xbef6db9a6ebbc580);
    assert(new_item9.poseInPreviousSpace.position.x == (float) 0x91163aa9f0ec5819);
    assert(new_item9.poseInPreviousSpace.position.y == (float) 0x4971f241839c3b9f);
    assert(new_item9.poseInPreviousSpace.position.z == (float) 0x9c72a7c695a44157);
    assert(new_item10.type == XR_TYPE_EVENT_DATA_EVENTS_LOST);
    assert(((XrActionStatePose*)new_item10.next)[0].type == XR_TYPE_ACTION_STATE_POSE);
    assert(((XrActionStatePose*)new_item10.next)[0].next == nullptr);
    assert(((XrActionStatePose*)new_item10.next)[0].isActive == (XrBool32) 0xc1e6a522245030ee);
    assert(new_item10.lostEventCount == (uint32_t) 0xc97bbb99f0af1884);
    assert(new_item11.type == XR_TYPE_SESSION_CREATE_INFO);
    assert(new_item11.next == nullptr);
    assert(new_item11.createFlags == (XrSessionCreateFlags) 0xb81a81aa8f38efa5);
    assert(new_item11.systemId == (XrSystemId) 0xa1db68a7d485eeb0);
    assert(new_item12.type == XR_TYPE_SYSTEM_GET_INFO);
    assert(new_item12.next == nullptr);
    assert(new_item12.formFactor == (XrFormFactor) 0xc0a04cf503f10413);
    assert(new_item13.type == XR_TYPE_SPACE_VELOCITY);
    assert(((XrSpaceVelocities*)new_item13.next)[0].type == XR_TYPE_SPACE_VELOCITIES);
    assert(((XrFrameWaitInfo*)((XrSpaceVelocities*)new_item13.next)[0].next)[0].type == XR_TYPE_FRAME_WAIT_INFO);
    assert(((XrFrameState*)((XrFrameWaitInfo*)((XrSpaceVelocities*)new_item13.next)[0].next)[0].next)[0].type == XR_TYPE_FRAME_STATE);
    assert(((XrFrameState*)((XrFrameWaitInfo*)((XrSpaceVelocities*)new_item13.next)[0].next)[0].next)[0].next == nullptr);
    assert(((XrFrameState*)((XrFrameWaitInfo*)((XrSpaceVelocities*)new_item13.next)[0].next)[0].next)[0].predictedDisplayTime == (XrTime) 0xf87ae1be3ad01ceb);
    assert(((XrFrameState*)((XrFrameWaitInfo*)((XrSpaceVelocities*)new_item13.next)[0].next)[0].next)[0].predictedDisplayPeriod == (XrDuration) 0xe011047e41cba22a);
    assert(((XrFrameState*)((XrFrameWaitInfo*)((XrSpaceVelocities*)new_item13.next)[0].next)[0].next)[0].shouldRender == (XrBool32) 0xadfb8d8d24d00e18);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocityCount == 2);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[0].velocityFlags == (XrSpaceVelocityFlags) 0xa1d6ceb641cb5988);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[0].linearVelocity.x == (float) 0x53c51c04ad1f6be8);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[0].linearVelocity.y == (float) 0x8483749c2bf725e5);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[0].linearVelocity.z == (float) 0xb77063b953d3601f);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[0].angularVelocity.x == (float) 0x269d1188a0ec5d9e);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[0].angularVelocity.y == (float) 0x7fe73411ccb213eb);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[0].angularVelocity.z == (float) 0x8e609516da98d04e);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[1].velocityFlags == (XrSpaceVelocityFlags) 0x2bd73aa06925b744);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[1].linearVelocity.x == (float) 0x3ee573a23683e392);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[1].linearVelocity.y == (float) 0x9361af6d2fd47e9d);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[1].linearVelocity.z == (float) 0xe08aace8ca6f51ea);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[1].angularVelocity.x == (float) 0x49dcb94392cf4d40);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[1].angularVelocity.y == (float) 0x947db96d6e1bd92);
    assert(((XrSpaceVelocities*)new_item13.next)[0].velocities[1].angularVelocity.z == (float) 0x7bb55851466fe56d);
    assert(new_item13.velocityFlags == (XrSpaceVelocityFlags) 0xcd38a4305140748b);
    assert(new_item13.linearVelocity.x == (float) 0x7940801e20adb8eb);
    assert(new_item13.linearVelocity.y == (float) 0xe7c0d13f56cdc867);
    assert(new_item13.linearVelocity.z == (float) 0x5882fa3961f1cd27);
    assert(new_item13.angularVelocity.x == (float) 0x11a2ed1ca23da1c5);
    assert(new_item13.angularVelocity.y == (float) 0xb8290749e9411c37);
    assert(new_item13.angularVelocity.z == (float) 0x79ed5d84199dd9cb);
    assert(new_item14.type == XR_TYPE_INTERACTION_PROFILE_STATE);
    assert(new_item14.next == nullptr);
    assert(new_item14.interactionProfile == (XrPath) 0x73e41cc039005b80);
    assert(new_item15.maxSwapchainImageHeight == (uint32_t) 0x9f9b47f81e7fedfd);
    assert(new_item15.maxSwapchainImageWidth == (uint32_t) 0x3ef1331453066531);
    assert(new_item15.maxLayerCount == (uint32_t) 0x16117f638c68eecb);
    assert(new_item16.type == XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW);
    assert(new_item16.next == nullptr);
    assert(new_item16.pose.orientation.x == (float) 0xd69755f0cb543d0a);
    assert(new_item16.pose.orientation.y == (float) 0x2110cbaa0063e431);
    assert(new_item16.pose.orientation.z == (float) 0xa07ff10d5a0992d3);
    assert(new_item16.pose.orientation.w == (float) 0xe52207f082e26291);
    assert(new_item16.pose.position.x == (float) 0x8b672fb9d2cf696c);
    assert(new_item16.pose.position.y == (float) 0x350e48a42ee672f);
    assert(new_item16.pose.position.z == (float) 0x4fd10421fad3b1cb);
    assert(new_item16.fov.angleLeft == (float) 0xf3756596bcf635ad);
    assert(new_item16.fov.angleRight == (float) 0x7fcd1cefec377a4a);
    assert(new_item16.fov.angleUp == (float) 0x8f48c049a273fa00);
    assert(new_item16.fov.angleDown == (float) 0x55d35498b25eabec);
    assert(new_item16.subImage.swapchain == (XrSwapchain) 0x52473f978cf7ae38);
    assert(new_item16.subImage.imageRect.offset.x == (int32_t) 0x3bb2b6182e96a4b4);
    assert(new_item16.subImage.imageRect.offset.y == (int32_t) 0xf72e069218c65537);
    assert(new_item16.subImage.imageRect.extent.width == (int32_t) 0x3224d140090638ce);
    assert(new_item16.subImage.imageRect.extent.height == (int32_t) 0x1cc065d862fabbfd);
    assert(new_item16.subImage.imageArrayIndex == (uint32_t) 0xbe0fd1b650b9b63e);
    assert(new_item17.type == XR_TYPE_HAPTIC_VIBRATION);
    assert(new_item17.next == nullptr);
    assert(new_item17.duration == (XrDuration) 0xd396aaa1a38d6420);
    assert(new_item17.frequency == (float) 0xcf2f01bd530ad960);
    assert(new_item17.amplitude == (float) 0xf4cd30d210c38fd5);
    assert(new_item18.type == XR_TYPE_SPACE_LOCATION);
    assert(new_item18.next == nullptr);
    assert(new_item18.locationFlags == (XrSpaceLocationFlags) 0xa3116e3dfb3ed68b);
    assert(new_item18.pose.orientation.x == (float) 0xc460a3e382fd1922);
    assert(new_item18.pose.orientation.y == (float) 0xc54d8b62dfb8f1ed);
    assert(new_item18.pose.orientation.z == (float) 0x8ee64b5972f0c348);
    assert(new_item18.pose.orientation.w == (float) 0xb55d0404688df26c);
    assert(new_item18.pose.position.x == (float) 0xab675690026aa3aa);
    assert(new_item18.pose.position.y == (float) 0xd3bdc641379bdb23);
    assert(new_item18.pose.position.z == (float) 0xc2fc56f9e08f6d14);
    assert(new_item19.type == XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW);
    assert(new_item19.next == nullptr);
    assert(new_item19.pose.orientation.x == (float) 0x400b1743c1e4e283);
    assert(new_item19.pose.orientation.y == (float) 0x25f194e6d9ecbbe2);
    assert(new_item19.pose.orientation.z == (float) 0x6ff4bc0d24ae0fa4);
    assert(new_item19.pose.orientation.w == (float) 0x7ee2f4b068b2bf3d);
    assert(new_item19.pose.position.x == (float) 0xcb72e68021dcd919);
    assert(new_item19.pose.position.y == (float) 0x3f934ce403d89f48);
    assert(new_item19.pose.position.z == (float) 0xb5c6d1fc29bbe67b);
    assert(new_item19.fov.angleLeft == (float) 0x5019cb39451dc61e);
    assert(new_item19.fov.angleRight == (float) 0x78f8f1eeedf9493f);
    assert(new_item19.fov.angleUp == (float) 0x99c192529caa0de6);
    assert(new_item19.fov.angleDown == (float) 0xc1aa30de701667a2);
    assert(new_item19.subImage.swapchain == (XrSwapchain) 0x18bfe80bb560451f);
    assert(new_item19.subImage.imageRect.offset.x == (int32_t) 0xea690edacd6bab2b);
    assert(new_item19.subImage.imageRect.offset.y == (int32_t) 0x13462d8ca73388c2);
    assert(new_item19.subImage.imageRect.extent.width == (int32_t) 0xf5058f8ba12f2699);
    assert(new_item19.subImage.imageRect.extent.height == (int32_t) 0xa3949e6a1833e0b);
    assert(new_item19.subImage.imageArrayIndex == (uint32_t) 0xfd4bdd6786c17cee);
    for (int i = 0; i < XR_UUID_SIZE; i++) {
        assert(new_item20.data[i] == (uint8_t) 0xd6934af6aadc56b3);
    }
    assert(new_item21.orientationTracking == (XrBool32) 0x4307968de9e0c6bf);
    assert(new_item21.positionTracking == (XrBool32) 0x41fbe86fef393b6b);
    assert(new_item22.center.orientation.x == (float) 0x339bf075fd31484e);
    assert(new_item22.center.orientation.y == (float) 0xeaa747c18dfbb8e9);
    assert(new_item22.center.orientation.z == (float) 0xdfadf0d1d053f09a);
    assert(new_item22.center.orientation.w == (float) 0x243dcb1f14939571);
    assert(new_item22.center.position.x == (float) 0x6f39aa5e19e328db);
    assert(new_item22.center.position.y == (float) 0x8037216f5e0c82aa);
    assert(new_item22.center.position.z == (float) 0xe522cf9fe892a800);
    assert(new_item22.radius == (float) 0xa7978a2439cc7e1a);
    assert(new_item23.type == XR_TYPE_EVENT_DATA_SESSION_STATE_CHANGED);
    assert(((XrActionStateVector2f*)new_item23.next)[0].type == XR_TYPE_ACTION_STATE_VECTOR2F);
    assert(((XrActionStateVector2f*)((XrActionStateVector2f*)new_item23.next)[0].next)[0].type == XR_TYPE_ACTION_STATE_VECTOR2F);
    assert(((XrActionStateVector2f*)((XrActionStateVector2f*)new_item23.next)[0].next)[0].next == nullptr);
    assert(((XrActionStateVector2f*)((XrActionStateVector2f*)new_item23.next)[0].next)[0].currentState.x == (float) 0xa0aef0976959513);
    assert(((XrActionStateVector2f*)((XrActionStateVector2f*)new_item23.next)[0].next)[0].currentState.y == (float) 0x97eac62cc13d97b4);
    assert(((XrActionStateVector2f*)((XrActionStateVector2f*)new_item23.next)[0].next)[0].changedSinceLastSync == (XrBool32) 0x9652c1831e3e9039);
    assert(((XrActionStateVector2f*)((XrActionStateVector2f*)new_item23.next)[0].next)[0].lastChangeTime == (XrTime) 0xcd4bf5d3601a371d);
    assert(((XrActionStateVector2f*)((XrActionStateVector2f*)new_item23.next)[0].next)[0].isActive == (XrBool32) 0xac064e3b3a4a4099);
    assert(((XrActionStateVector2f*)new_item23.next)[0].currentState.x == (float) 0xc01552dff3a12f67);
    assert(((XrActionStateVector2f*)new_item23.next)[0].currentState.y == (float) 0xd9dc75fa9ae93ed3);
    assert(((XrActionStateVector2f*)new_item23.next)[0].changedSinceLastSync == (XrBool32) 0xfc489d9e613af4a2);
    assert(((XrActionStateVector2f*)new_item23.next)[0].lastChangeTime == (XrTime) 0x367e99e4fe4b30a8);
    assert(((XrActionStateVector2f*)new_item23.next)[0].isActive == (XrBool32) 0x5711dcbf3315b231);
    assert(new_item23.session == (XrSession) 0xbdeecf80a45cc033);
    assert(new_item23.state == (XrSessionState) 0x4674005d8e4927b2);
    assert(new_item23.time == (XrTime) 0x476921526759091b);
    assert(new_item24.type == XR_TYPE_ACTION_SET_CREATE_INFO);
    assert(new_item24.next == nullptr);
    for (int i = 0; i < XR_MAX_ACTION_SET_NAME_SIZE; i++) {
        assert(new_item24.actionSetName[i] == '9');
    }
    for (int i = 0; i < XR_MAX_LOCALIZED_ACTION_SET_NAME_SIZE; i++) {
        assert(new_item24.localizedActionSetName[i] == 'i');
    }
    assert(new_item24.priority == (uint32_t) 0x68954848fecc5d18);
    assert(new_item25.type == XR_TYPE_ACTION_SPACE_CREATE_INFO);
    assert(((XrViewLocateInfo*)new_item25.next)[0].type == XR_TYPE_VIEW_LOCATE_INFO);
    assert(((XrViewLocateInfo*)new_item25.next)[0].next == nullptr);
    assert(((XrViewLocateInfo*)new_item25.next)[0].viewConfigurationType == (XrViewConfigurationType) 0xd39a5284b5c33239);
    assert(((XrViewLocateInfo*)new_item25.next)[0].displayTime == (XrTime) 0x298351a9a25de48b);
    assert(((XrViewLocateInfo*)new_item25.next)[0].space == (XrSpace) 0xdb0cb7280fef8231);
    assert(new_item25.action == (XrAction) 0xa6452b7745d99eb0);
    assert(new_item25.subactionPath == (XrPath) 0xfc73d493e9cfc0af);
    assert(new_item25.poseInActionSpace.orientation.x == (float) 0x3cccf21245231f77);
    assert(new_item25.poseInActionSpace.orientation.y == (float) 0x9424dca8b9d4e32e);
    assert(new_item25.poseInActionSpace.orientation.z == (float) 0xb8d550a79b355a7c);
    assert(new_item25.poseInActionSpace.orientation.w == (float) 0xcb65130dc127364a);
    assert(new_item25.poseInActionSpace.position.x == (float) 0xffff5c695a440295);
    assert(new_item25.poseInActionSpace.position.y == (float) 0xe97a6f9e9c5fffed);
    assert(new_item25.poseInActionSpace.position.z == (float) 0x636a354a379922e0);
    assert(new_item26.action == (XrAction) 0x3d7bf0d9a6e3ec95);
    assert(new_item26.binding == (XrPath) 0x3d32a8a4daac2d7b);
    assert(new_item27.type == XR_TYPE_BOUND_SOURCES_FOR_ACTION_ENUMERATE_INFO);
    assert(new_item27.next == nullptr);
    assert(new_item27.action == (XrAction) 0xc648cc2ec2ef33e7);
    assert(new_item28.x == (float) 0xb4597e754cff25e7);
    assert(new_item28.y == (float) 0xd8817dda43824d2c);
    assert(new_item28.z == (float) 0x496aa4c6406f5f56);
    assert(new_item29.type == XR_TYPE_SYSTEM_GET_INFO);
    assert(((XrActionSetCreateInfo*)new_item29.next)[0].type == XR_TYPE_ACTION_SET_CREATE_INFO);
    assert(((XrActionSetCreateInfo*)new_item29.next)[0].next == nullptr);
    for (int i = 0; i < XR_MAX_ACTION_SET_NAME_SIZE; i++) {
        assert(((XrActionSetCreateInfo*)new_item29.next)[0].actionSetName[i] == 'R');
    }
    for (int i = 0; i < XR_MAX_LOCALIZED_ACTION_SET_NAME_SIZE; i++) {
        assert(((XrActionSetCreateInfo*)new_item29.next)[0].localizedActionSetName[i] == 'f');
    }
    assert(((XrActionSetCreateInfo*)new_item29.next)[0].priority == (uint32_t) 0x4e8fb4da142c57f4);
    assert(new_item29.formFactor == (XrFormFactor) 0x64f1774b9e0c5b2a);
    assert(new_item30.type == XR_TYPE_INTERACTION_PROFILE_STATE);
    assert(((XrSpaceLocations*)new_item30.next)[0].type == XR_TYPE_SPACE_LOCATIONS);
    assert(((XrSpaceLocations*)new_item30.next)[0].next == nullptr);
    assert(((XrSpaceLocations*)new_item30.next)[0].locationCount == (uint32_t) 0xb3fdba7b7c370b5);
    assert(((XrSpaceLocations*)new_item30.next)[0].locations == nullptr);
    assert(new_item30.interactionProfile == (XrPath) 0x72dcd619e0cc200a);
    assert(new_item31.swapchain == (XrSwapchain) 0x7a08f3151c1fce7f);
    assert(new_item31.imageRect.offset.x == (int32_t) 0x812e4d40788fde12);
    assert(new_item31.imageRect.offset.y == (int32_t) 0xa95a3552f7b33c8c);
    assert(new_item31.imageRect.extent.width == (int32_t) 0x58b45fa89521d4d4);
    assert(new_item31.imageRect.extent.height == (int32_t) 0x59d92885c4dd775);
    assert(new_item31.imageArrayIndex == (uint32_t) 0xf5a0a5e9f8f60dd1);
    assert(new_item32.type == XR_TYPE_HAPTIC_VIBRATION);
    assert(new_item32.next == nullptr);
    assert(new_item32.duration == (XrDuration) 0xf4d7ee4c199bb2d4);
    assert(new_item32.frequency == (float) 0x6d53e0cf159a5da8);
    assert(new_item32.amplitude == (float) 0xce71205a355916cd);
    assert(new_item33.maxSwapchainImageHeight == (uint32_t) 0x82a97d657068c8c4);
    assert(new_item33.maxSwapchainImageWidth == (uint32_t) 0x2cc32dfa54994316);
    assert(new_item33.maxLayerCount == (uint32_t) 0x11839c51e76b556a);
    assert(new_item34.type == XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW);
    assert(new_item34.next == nullptr);
    assert(new_item34.pose.orientation.x == (float) 0x2c3b0cf6fcf989af);
    assert(new_item34.pose.orientation.y == (float) 0xc21a9d5730d89929);
    assert(new_item34.pose.orientation.z == (float) 0xfdde53690164a34e);
    assert(new_item34.pose.orientation.w == (float) 0x48ad9a7a90928361);
    assert(new_item34.pose.position.x == (float) 0x2513e52431d1b8fa);
    assert(new_item34.pose.position.y == (float) 0x407a7a2237b3916);
    assert(new_item34.pose.position.z == (float) 0x3d828026d2d3e328);
    assert(new_item34.fov.angleLeft == (float) 0xf362cd9e16e8270c);
    assert(new_item34.fov.angleRight == (float) 0x3e17dec2e75fedad);
    assert(new_item34.fov.angleUp == (float) 0xb6564872a8a6cf72);
    assert(new_item34.fov.angleDown == (float) 0x3282a1f063a52f91);
    assert(new_item34.subImage.swapchain == (XrSwapchain) 0x24a83a6cc8f82d07);
    assert(new_item34.subImage.imageRect.offset.x == (int32_t) 0xbbda650eed781ccb);
    assert(new_item34.subImage.imageRect.offset.y == (int32_t) 0xb70a623fc3ab935f);
    assert(new_item34.subImage.imageRect.extent.width == (int32_t) 0xd7c15fd931f5de77);
    assert(new_item34.subImage.imageRect.extent.height == (int32_t) 0x8591fbe66b2c1c2a);
    assert(new_item34.subImage.imageArrayIndex == (uint32_t) 0x66816b94d0a99a7a);
    assert(new_item35.r == (float) 0x46122f6fe22c6092);
    assert(new_item35.g == (float) 0xb3f5dc168d9e4ba5);
    assert(new_item35.b == (float) 0xd49a655e20442db8);
    assert(new_item35.a == (float) 0x12c8b52407c541b9);
    for (int i = 0; i < XR_UUID_SIZE; i++) {
        assert(new_item36.data[i] == (uint8_t) 0x1607817dfa73bae1);
    }
    assert(new_item37.type == XR_TYPE_INPUT_SOURCE_LOCALIZED_NAME_GET_INFO);
    assert(new_item37.next == nullptr);
    assert(new_item37.sourcePath == (XrPath) 0x7fced0d1874123ab);
    assert(new_item37.whichComponents == (XrInputSourceLocalizedNameFlags) 0xe995d5b9cd291c84);
    for (int i = 0; i < XR_MAX_APPLICATION_NAME_SIZE; i++) {
        assert(new_item38.applicationName[i] == 'b');
    }
    assert(new_item38.applicationVersion == (uint32_t) 0x20e331723ee6ec99);
    for (int i = 0; i < XR_MAX_ENGINE_NAME_SIZE; i++) {
        assert(new_item38.engineName[i] == 'e');
    }
    assert(new_item38.engineVersion == (uint32_t) 0x706828af183dd88b);
    assert(new_item38.apiVersion == (XrVersion) 0x5844c8cd02eaa179);
    assert(new_item39.type == XR_TYPE_ACTION_STATE_BOOLEAN);
    assert(((XrInteractionProfileState*)new_item39.next)[0].type == XR_TYPE_INTERACTION_PROFILE_STATE);
    assert(((XrActionStateVector2f*)((XrInteractionProfileState*)new_item39.next)[0].next)[0].type == XR_TYPE_ACTION_STATE_VECTOR2F);
    assert(((XrActionStateVector2f*)((XrInteractionProfileState*)new_item39.next)[0].next)[0].next == nullptr);
    assert(((XrActionStateVector2f*)((XrInteractionProfileState*)new_item39.next)[0].next)[0].currentState.x == (float) 0xa4b5103604793a7);
    assert(((XrActionStateVector2f*)((XrInteractionProfileState*)new_item39.next)[0].next)[0].currentState.y == (float) 0x28064b9470eff3d9);
    assert(((XrActionStateVector2f*)((XrInteractionProfileState*)new_item39.next)[0].next)[0].changedSinceLastSync == (XrBool32) 0xa05a9bcd283be368);
    assert(((XrActionStateVector2f*)((XrInteractionProfileState*)new_item39.next)[0].next)[0].lastChangeTime == (XrTime) 0x4e07b0b416e42571);
    assert(((XrActionStateVector2f*)((XrInteractionProfileState*)new_item39.next)[0].next)[0].isActive == (XrBool32) 0x88511a5788ba4f47);
    assert(((XrInteractionProfileState*)new_item39.next)[0].interactionProfile == (XrPath) 0xb596cfe903737c78);
    assert(new_item39.currentState == (XrBool32) 0x943eaa034ab01a18);
    assert(new_item39.changedSinceLastSync == (XrBool32) 0xb893fe86af57b6d9);
    assert(new_item39.lastChangeTime == (XrTime) 0x44f081990598927);
    assert(new_item39.isActive == (XrBool32) 0x482125245a8bb9d5);
    assert(new_item40.type == XR_TYPE_SPACE_VELOCITY);
    assert(new_item40.next == nullptr);
    assert(new_item40.velocityFlags == (XrSpaceVelocityFlags) 0xcfeeeceba6e6a112);
    assert(new_item40.linearVelocity.x == (float) 0xeab7418bb8b57f8a);
    assert(new_item40.linearVelocity.y == (float) 0xb99b00053ab5b0a2);
    assert(new_item40.linearVelocity.z == (float) 0xef12d94abcd11eea);
    assert(new_item40.angularVelocity.x == (float) 0x2d2a7a08dc386cd);
    assert(new_item40.angularVelocity.y == (float) 0xb9fa4325f207b6a8);
    assert(new_item40.angularVelocity.z == (float) 0xbd87483045a46755);
    assert(new_item41.x == (float) 0xbe9fed6a893c6abd);
    assert(new_item41.y == (float) 0xd37866a7ee0f427c);
    assert(new_item42.type == XR_TYPE_HAPTIC_VIBRATION);
    assert(new_item42.next == nullptr);
    assert(new_item42.duration == (XrDuration) 0xeb5e5adf6091be20);
    assert(new_item42.frequency == (float) 0xad05c84fdecb9837);
    assert(new_item42.amplitude == (float) 0x58ce1205ab7ace5d);
    assert(new_item43.type == XR_TYPE_EVENT_DATA_EVENTS_LOST);
    assert(new_item43.next == nullptr);
    assert(new_item43.lostEventCount == (uint32_t) 0x379fb571617831c0);
    assert(new_item44.type == XR_TYPE_ACTION_STATE_POSE);
    assert(new_item44.next == nullptr);
    assert(new_item44.isActive == (XrBool32) 0xf2870ca06dbc3b86);
    assert(new_item45.type == XR_TYPE_SPACES_LOCATE_INFO);
    assert(new_item45.next == nullptr);
    assert(new_item45.baseSpace == (XrSpace) 0xfee512d38f89e7ce);
    assert(new_item45.time == (XrTime) 0xf0a1a9d65f1507b5);
    assert(new_item45.spaceCount == (uint32_t) 0xb10f6b570ae99901);
    assert(new_item45.spaces == nullptr);
    assert(new_item46.velocityFlags == (XrSpaceVelocityFlags) 0xae7962e600c4ccb5);
    assert(new_item46.linearVelocity.x == (float) 0xdd1875e5f1d17361);
    assert(new_item46.linearVelocity.y == (float) 0x6ed2fdfd8f544bb6);
    assert(new_item46.linearVelocity.z == (float) 0x3689a144ee14648);
    assert(new_item46.angularVelocity.x == (float) 0x845aad9384049ce);
    assert(new_item46.angularVelocity.y == (float) 0xf0ba7d9b62ea0f55);
    assert(new_item46.angularVelocity.z == (float) 0x5037075cf338e11b);
    assert(new_item47.type == XR_TYPE_INTERACTION_PROFILE_STATE);
    assert(((XrActionStatePose*)new_item47.next)[0].type == XR_TYPE_ACTION_STATE_POSE);
    assert(((XrFrameState*)((XrActionStatePose*)new_item47.next)[0].next)[0].type == XR_TYPE_FRAME_STATE);
    assert(((XrHapticVibration*)((XrFrameState*)((XrActionStatePose*)new_item47.next)[0].next)[0].next)[0].type == XR_TYPE_HAPTIC_VIBRATION);
    assert(((XrHapticVibration*)((XrFrameState*)((XrActionStatePose*)new_item47.next)[0].next)[0].next)[0].next == nullptr);
    assert(((XrHapticVibration*)((XrFrameState*)((XrActionStatePose*)new_item47.next)[0].next)[0].next)[0].duration == (XrDuration) 0x88307a5104bfa26f);
    assert(((XrHapticVibration*)((XrFrameState*)((XrActionStatePose*)new_item47.next)[0].next)[0].next)[0].frequency == (float) 0xd2f7ed6cba557d64);
    assert(((XrHapticVibration*)((XrFrameState*)((XrActionStatePose*)new_item47.next)[0].next)[0].next)[0].amplitude == (float) 0x8e26c05ca17de752);
    assert(((XrFrameState*)((XrActionStatePose*)new_item47.next)[0].next)[0].predictedDisplayTime == (XrTime) 0x78c0afbdbb3f9ebb);
    assert(((XrFrameState*)((XrActionStatePose*)new_item47.next)[0].next)[0].predictedDisplayPeriod == (XrDuration) 0x5d960ac64241ca5d);
    assert(((XrFrameState*)((XrActionStatePose*)new_item47.next)[0].next)[0].shouldRender == (XrBool32) 0xd4473090e0a1e763);
    assert(((XrActionStatePose*)new_item47.next)[0].isActive == (XrBool32) 0x1aca71c0af1db95c);
    assert(new_item47.interactionProfile == (XrPath) 0x1495c6a5741a8658);
    assert(new_item48.type == XR_TYPE_FRAME_WAIT_INFO);
    assert(new_item48.next == nullptr);
    for (int i = 0; i < XR_UUID_SIZE; i++) {
        assert(new_item49.data[i] == (uint8_t) 0xa24dacfab6e5b6f6);
    }
    assert(new_item50.type == XR_TYPE_SWAPCHAIN_CREATE_INFO);
    assert(((XrActionSetCreateInfo*)new_item50.next)[0].type == XR_TYPE_ACTION_SET_CREATE_INFO);
    assert(((XrActionSetCreateInfo*)new_item50.next)[0].next == nullptr);
    for (int i = 0; i < XR_MAX_ACTION_SET_NAME_SIZE; i++) {
        assert(((XrActionSetCreateInfo*)new_item50.next)[0].actionSetName[i] == 'W');
    }
    for (int i = 0; i < XR_MAX_LOCALIZED_ACTION_SET_NAME_SIZE; i++) {
        assert(((XrActionSetCreateInfo*)new_item50.next)[0].localizedActionSetName[i] == 'U');
    }
    assert(((XrActionSetCreateInfo*)new_item50.next)[0].priority == (uint32_t) 0xd2b08f297e5b00ab);
    assert(new_item50.createFlags == (XrSwapchainCreateFlags) 0xbef94d7346782d95);
    assert(new_item50.usageFlags == (XrSwapchainUsageFlags) 0x712f523330576f66);
    assert(new_item50.format == (int64_t) 0x8bb1c689564d353c);
    assert(new_item50.sampleCount == (uint32_t) 0xc87215b713059af3);
    assert(new_item50.width == (uint32_t) 0x1dc9ae74453e2c39);
    assert(new_item50.height == (uint32_t) 0xf2a208d6b8ea5970);
    assert(new_item50.faceCount == (uint32_t) 0xb30c3e928585505f);
    assert(new_item50.arraySize == (uint32_t) 0x1d3481fb2793ac51);
    assert(new_item50.mipCount == (uint32_t) 0x72b09604223d2520);
    assert(new_item51.r == (float) 0xdb34037d1277c861);
    assert(new_item51.g == (float) 0x116872d75e2d6850);
    assert(new_item51.b == (float) 0xb39fef090be07a30);
    assert(new_item52.type == XR_TYPE_INPUT_SOURCE_LOCALIZED_NAME_GET_INFO);
    assert(((XrSessionCreateInfo*)new_item52.next)[0].type == XR_TYPE_SESSION_CREATE_INFO);
    assert(((XrSessionCreateInfo*)new_item52.next)[0].next == nullptr);
    assert(((XrSessionCreateInfo*)new_item52.next)[0].createFlags == (XrSessionCreateFlags) 0x3db0e41a0b4b2527);
    assert(((XrSessionCreateInfo*)new_item52.next)[0].systemId == (XrSystemId) 0x23eea6f2ea322607);
    assert(new_item52.sourcePath == (XrPath) 0xb1931f8444783166);
    assert(new_item52.whichComponents == (XrInputSourceLocalizedNameFlags) 0xccf856f40660cbb);
    assert(new_item53.maxSwapchainImageHeight == (uint32_t) 0xb772ea9e17274e4c);
    assert(new_item53.maxSwapchainImageWidth == (uint32_t) 0xa7fc99f0b881eae2);
    assert(new_item53.maxLayerCount == (uint32_t) 0xff546a0085041459);
    assert(new_item54.type == XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW);
    assert(((XrEventDataBuffer*)new_item54.next)[0].type == XR_TYPE_EVENT_DATA_BUFFER);
    assert(((XrEventDataBuffer*)new_item54.next)[0].next == nullptr);
    for (int i = 0; i < 4000; i++) {
        assert(((XrEventDataBuffer*)new_item54.next)[0].varying[i] == (uint8_t) 0xfd30029a25b600a3);
    }
    assert(new_item54.pose.orientation.x == (float) 0x392ef165edb152c5);
    assert(new_item54.pose.orientation.y == (float) 0xf8454ad0f0250c16);
    assert(new_item54.pose.orientation.z == (float) 0x2c120a01ce6e5635);
    assert(new_item54.pose.orientation.w == (float) 0xc2163647788661f8);
    assert(new_item54.pose.position.x == (float) 0x9f74435088d26c6b);
    assert(new_item54.pose.position.y == (float) 0x5d414a5ca79ea187);
    assert(new_item54.pose.position.z == (float) 0x7a787391acc02757);
    assert(new_item54.fov.angleLeft == (float) 0xd865554aedcf3e4);
    assert(new_item54.fov.angleRight == (float) 0x598f27f05a561a0c);
    assert(new_item54.fov.angleUp == (float) 0x888117505c3481ea);
    assert(new_item54.fov.angleDown == (float) 0x855472bd43a7eb1b);
    assert(new_item54.subImage.swapchain == (XrSwapchain) 0x1b5e6eafe4d9319c);
    assert(new_item54.subImage.imageRect.offset.x == (int32_t) 0x7ba6dcc71952c758);
    assert(new_item54.subImage.imageRect.offset.y == (int32_t) 0xc409de0e72c1029e);
    assert(new_item54.subImage.imageRect.extent.width == (int32_t) 0xecddc38fe4bd9fa7);
    assert(new_item54.subImage.imageRect.extent.height == (int32_t) 0xf0fb3dea0e963a3a);
    assert(new_item54.subImage.imageArrayIndex == (uint32_t) 0xc74f56910e787eb0);
    assert(new_item55.type == XR_TYPE_EXTENSION_PROPERTIES);
    assert(((XrSpaceVelocity*)new_item55.next)[0].type == XR_TYPE_SPACE_VELOCITY);
    assert(((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].type == XR_TYPE_SYSTEM_PROPERTIES);
    assert(((XrEventDataInteractionProfileChanged*)((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].next)[0].type == XR_TYPE_EVENT_DATA_INTERACTION_PROFILE_CHANGED);
    assert(((XrEventDataInteractionProfileChanged*)((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].next)[0].next == nullptr);
    assert(((XrEventDataInteractionProfileChanged*)((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].next)[0].session == (XrSession) 0xd43e742cfb98af56);
    assert(((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].systemId == (XrSystemId) 0xea9cf24ef8fc5d20);
    assert(((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].vendorId == (uint32_t) 0xf35d7d993b6f52db);
    for (int i = 0; i < XR_MAX_SYSTEM_NAME_SIZE; i++) {
        assert(((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].systemName[i] == 'b');
    }
    assert(((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].graphicsProperties.maxSwapchainImageHeight == (uint32_t) 0x837153a2846359e5);
    assert(((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].graphicsProperties.maxSwapchainImageWidth == (uint32_t) 0x6dad4d8f023547fc);
    assert(((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].graphicsProperties.maxLayerCount == (uint32_t) 0x14efdfcfeb712ce0);
    assert(((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].trackingProperties.orientationTracking == (XrBool32) 0xefb65627244088a);
    assert(((XrSystemProperties*)((XrSpaceVelocity*)new_item55.next)[0].next)[0].trackingProperties.positionTracking == (XrBool32) 0x554fca602792e879);
    assert(((XrSpaceVelocity*)new_item55.next)[0].velocityFlags == (XrSpaceVelocityFlags) 0x3ce1d08de4a58d9d);
    assert(((XrSpaceVelocity*)new_item55.next)[0].linearVelocity.x == (float) 0x8aa4307749d5f929);
    assert(((XrSpaceVelocity*)new_item55.next)[0].linearVelocity.y == (float) 0x6faedde15063e850);
    assert(((XrSpaceVelocity*)new_item55.next)[0].linearVelocity.z == (float) 0x942ba691895622d7);
    assert(((XrSpaceVelocity*)new_item55.next)[0].angularVelocity.x == (float) 0xde565243994a3d);
    assert(((XrSpaceVelocity*)new_item55.next)[0].angularVelocity.y == (float) 0xfc1c8ee95508c152);
    assert(((XrSpaceVelocity*)new_item55.next)[0].angularVelocity.z == (float) 0xac070ee29a9e9637);
    for (int i = 0; i < XR_MAX_EXTENSION_NAME_SIZE; i++) {
        assert(new_item55.extensionName[i] == 'U');
    }
    assert(new_item55.extensionVersion == (uint32_t) 0x999808380012791);
    assert(new_item56.x == (float) 0x8c40190ad369b0fd);
    assert(new_item56.y == (float) 0x21f39069aeba7d07);
    assert(new_item57.pose.orientation.x == (float) 0xd708536681fcc8e6);
    assert(new_item57.pose.orientation.y == (float) 0xd29396803c52a610);
    assert(new_item57.pose.orientation.z == (float) 0xee12c1752feb923e);
    assert(new_item57.pose.orientation.w == (float) 0x26a6c98f7400c33);
    assert(new_item57.pose.position.x == (float) 0x43d1f4664ab7a528);
    assert(new_item57.pose.position.y == (float) 0x982eea06481553d3);
    assert(new_item57.pose.position.z == (float) 0xf6f7e307a5ee0b59);
    assert(new_item58.type == XR_TYPE_EVENT_DATA_REFERENCE_SPACE_CHANGE_PENDING);
    assert(new_item58.next == nullptr);
    assert(new_item58.session == (XrSession) 0xca1f99716dab57);
    assert(new_item58.referenceSpaceType == (XrReferenceSpaceType) 0x4ff30654247a4028);
    assert(new_item58.changeTime == (XrTime) 0x7b3df91e0096b450);
    assert(new_item58.poseValid == (XrBool32) 0x70f448510c4bccbf);
    assert(new_item58.poseInPreviousSpace.orientation.x == (float) 0x15906a0abe016784);
    assert(new_item58.poseInPreviousSpace.orientation.y == (float) 0xe25488f6e918998e);
    assert(new_item58.poseInPreviousSpace.orientation.z == (float) 0xa8213ea5849babd7);
    assert(new_item58.poseInPreviousSpace.orientation.w == (float) 0xb449f0002844daf5);
    assert(new_item58.poseInPreviousSpace.position.x == (float) 0x3826d2197fc7518);
    assert(new_item58.poseInPreviousSpace.position.y == (float) 0x1a18a786c884030b);
    assert(new_item58.poseInPreviousSpace.position.z == (float) 0x6e0f69eea552c789);
    assert(new_item59.type == XR_TYPE_ACTION_STATE_FLOAT);
    assert(new_item59.next == nullptr);
    assert(new_item59.currentState == (float) 0xe6366ad447fa5095);
    assert(new_item59.changedSinceLastSync == (XrBool32) 0x95c7741eef852311);
    assert(new_item59.lastChangeTime == (XrTime) 0x120b952e9f6aa2d6);
    assert(new_item59.isActive == (XrBool32) 0x824c893fb591f251);
    assert(new_item60.orientationTracking == (XrBool32) 0x21d1a57930e3614e);
    assert(new_item60.positionTracking == (XrBool32) 0xefa295bdc2b73b78);
    assert(new_item61.x == (float) 0x1009304267449d36);
    assert(new_item61.y == (float) 0x454bf8714c0c92b0);
    assert(new_item61.z == (float) 0x52f76cd402888d6a);
    assert(new_item61.w == (float) 0x223e81b011e135df);
    assert(new_item62.swapchain == (XrSwapchain) 0x4b8544929d6d42ed);
    assert(new_item62.imageRect.offset.x == (int32_t) 0x12ad6db10e189fa8);
    assert(new_item62.imageRect.offset.y == (int32_t) 0xc7bd8eb4b0db6a39);
    assert(new_item62.imageRect.extent.width == (int32_t) 0xb05f3cf30f34f2a6);
    assert(new_item62.imageRect.extent.height == (int32_t) 0x8c1ad90de8c84cc2);
    assert(new_item62.imageArrayIndex == (uint32_t) 0x3d5d1213879ca2be);
    assert(new_item63.type == XR_TYPE_SPACE_LOCATION);
    assert(new_item63.next == nullptr);
    assert(new_item63.locationFlags == (XrSpaceLocationFlags) 0x983eccc42bfc5cfe);
    assert(new_item63.pose.orientation.x == (float) 0x51ac0f2d6d2d92bd);
    assert(new_item63.pose.orientation.y == (float) 0x844480ed482f2d88);
    assert(new_item63.pose.orientation.z == (float) 0x3213c250d95e2415);
    assert(new_item63.pose.orientation.w == (float) 0x2e5e3198a6b4c017);
    assert(new_item63.pose.position.x == (float) 0x615548ece7312fb);
    assert(new_item63.pose.position.y == (float) 0xea011e5d1e1378d0);
    assert(new_item63.pose.position.z == (float) 0xbdfd3c510d59257);
    assert(new_item64.x == (float) 0x921907b86c8dcb27);
    assert(new_item64.y == (float) 0xa05847e0ff2f66dc);
    assert(new_item65.type == XR_TYPE_COMPOSITION_LAYER_PROJECTION);
    assert(((XrSwapchainImageAcquireInfo*)new_item65.next)[0].type == XR_TYPE_SWAPCHAIN_IMAGE_ACQUIRE_INFO);
    assert(((XrSwapchainImageAcquireInfo*)new_item65.next)[0].next == nullptr);
    assert(new_item65.layerFlags == (XrCompositionLayerFlags) 0xf1a1b581f018a53);
    assert(new_item65.space == (XrSpace) 0xb47cf4dda407db34);
    assert(new_item65.viewCount == (uint32_t) 0x8707cda12ef7ad1a);
    assert(new_item65.views == nullptr);
    assert(new_item66.pose.orientation.x == (float) 0x560177c335b90aa7);
    assert(new_item66.pose.orientation.y == (float) 0xd466044b86919c00);
    assert(new_item66.pose.orientation.z == (float) 0x94d6d21a1a9b5360);
    assert(new_item66.pose.orientation.w == (float) 0xb83cb7ef149a99db);
    assert(new_item66.pose.position.x == (float) 0xc3dd714e8a42ac41);
    assert(new_item66.pose.position.y == (float) 0x1226dcfd37d1666f);
    assert(new_item66.pose.position.z == (float) 0x70a83b2e156759b0);
    assert(new_item66.fov.angleLeft == (float) 0x8365b37b7e6354e8);
    assert(new_item66.fov.angleRight == (float) 0xf1fa3503af110c2b);
    assert(new_item66.fov.angleUp == (float) 0x1154693004216e37);
    assert(new_item66.fov.angleDown == (float) 0x1c548ebcc331e718);
    assert(new_item66.nearZ == (float) 0x5d6c360e8788d133);
    assert(new_item66.farZ == (float) 0x7e6de39d7e3a2110);
    assert(new_item67.angleLeft == (float) 0x538428f71ef83f7);
    assert(new_item67.angleRight == (float) 0xfbff40331cedbe90);
    assert(new_item67.angleUp == (float) 0xe1c0ded2468a5cd6);
    assert(new_item67.angleDown == (float) 0x9672cd694b056557);
    assert(new_item68.type == XR_TYPE_SPACE_LOCATIONS);
    assert(new_item68.next == nullptr);
    assert(new_item68.locationCount == (uint32_t) 0xb5e697741ec9f7f);
    assert(new_item68.locations == nullptr);
    assert(new_item69.width == (int32_t) 0x43f3316d8edf775d);
    assert(new_item69.height == (int32_t) 0x3cb320009e79d8c6);
    assert(new_item70.type == XR_TYPE_ACTION_STATE_BOOLEAN);
    assert(new_item70.next == nullptr);
    assert(new_item70.currentState == (XrBool32) 0x7bf8285d8eb89465);
    assert(new_item70.changedSinceLastSync == (XrBool32) 0xb955e75035e7fcfc);
    assert(new_item70.lastChangeTime == (XrTime) 0x4d3abe3aa16215ba);
    assert(new_item70.isActive == (XrBool32) 0xf04a3a5a5d719fda);
    assert(new_item71.type == XR_TYPE_VIEW);
    assert(((XrSessionBeginInfo*)new_item71.next)[0].type == XR_TYPE_SESSION_BEGIN_INFO);
    assert(((XrSwapchainImageWaitInfo*)((XrSessionBeginInfo*)new_item71.next)[0].next)[0].type == XR_TYPE_SWAPCHAIN_IMAGE_WAIT_INFO);
    assert(((XrSwapchainImageWaitInfo*)((XrSessionBeginInfo*)new_item71.next)[0].next)[0].next == nullptr);
    assert(((XrSwapchainImageWaitInfo*)((XrSessionBeginInfo*)new_item71.next)[0].next)[0].timeout == (XrDuration) 0x8eb6a02c0587e87d);
    assert(((XrSessionBeginInfo*)new_item71.next)[0].primaryViewConfigurationType == (XrViewConfigurationType) 0xc06f950e913ead4d);
    assert(new_item71.pose.orientation.x == (float) 0xe5b13994a6b82a41);
    assert(new_item71.pose.orientation.y == (float) 0xa544eb82529ba4a8);
    assert(new_item71.pose.orientation.z == (float) 0xd07b3a6674b96867);
    assert(new_item71.pose.orientation.w == (float) 0xb7ab8dc5da20e2af);
    assert(new_item71.pose.position.x == (float) 0x6159552a9eca68c9);
    assert(new_item71.pose.position.y == (float) 0xd16ea7b3deb06e32);
    assert(new_item71.pose.position.z == (float) 0x3f282ac397f2f34a);
    assert(new_item71.fov.angleLeft == (float) 0x172dc4297080c98);
    assert(new_item71.fov.angleRight == (float) 0x21b602dfc333189f);
    assert(new_item71.fov.angleUp == (float) 0x39ad826343c780de);
    assert(new_item71.fov.angleDown == (float) 0x2728a3a54aa9efff);
    assert(new_item72.type == XR_TYPE_ACTION_STATE_BOOLEAN);
    assert(new_item72.next == nullptr);
    assert(new_item72.currentState == (XrBool32) 0xf907e529a236960f);
    assert(new_item72.changedSinceLastSync == (XrBool32) 0x69b4864b32b726b5);
    assert(new_item72.lastChangeTime == (XrTime) 0xfb475f5567485469);
    assert(new_item72.isActive == (XrBool32) 0xbafec212b292a9bd);
    assert(new_item73.type == XR_TYPE_SWAPCHAIN_CREATE_INFO);
    assert(new_item73.next == nullptr);
    assert(new_item73.createFlags == (XrSwapchainCreateFlags) 0x5bcb3425d150cfa7);
    assert(new_item73.usageFlags == (XrSwapchainUsageFlags) 0xa209e47b000ad3fb);
    assert(new_item73.format == (int64_t) 0x19ced7170499e94);
    assert(new_item73.sampleCount == (uint32_t) 0xe435bc7fab9f16e7);
    assert(new_item73.width == (uint32_t) 0x1098f0ddd90a87df);
    assert(new_item73.height == (uint32_t) 0xdf13872fe069c162);
    assert(new_item73.faceCount == (uint32_t) 0xa974c09df16cd92f);
    assert(new_item73.arraySize == (uint32_t) 0xe3dd32dd4d187e50);
    assert(new_item73.mipCount == (uint32_t) 0xa0d4f3dc6d5f31a5);
    assert(new_item74.type == XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW);
    assert(new_item74.next == nullptr);
    assert(new_item74.pose.orientation.x == (float) 0x5d035206f5d1347d);
    assert(new_item74.pose.orientation.y == (float) 0x5ecb516880284193);
    assert(new_item74.pose.orientation.z == (float) 0xbd90c1414a73e1fc);
    assert(new_item74.pose.orientation.w == (float) 0x5c774f7aa890fe22);
    assert(new_item74.pose.position.x == (float) 0x7e7d7b1d216ca887);
    assert(new_item74.pose.position.y == (float) 0x12be1f03b49ae75b);
    assert(new_item74.pose.position.z == (float) 0xddabda16a8fb8daa);
    assert(new_item74.fov.angleLeft == (float) 0x1507366a5310e7f1);
    assert(new_item74.fov.angleRight == (float) 0x70ffd90fe649e7a1);
    assert(new_item74.fov.angleUp == (float) 0x4a152261464f2386);
    assert(new_item74.fov.angleDown == (float) 0xcb2786735423c8ad);
    assert(new_item74.subImage.swapchain == (XrSwapchain) 0x5ec58bb018ab88d9);
    assert(new_item74.subImage.imageRect.offset.x == (int32_t) 0x7b53015f7cc5494c);
    assert(new_item74.subImage.imageRect.offset.y == (int32_t) 0xac1952a1b1675a17);
    assert(new_item74.subImage.imageRect.extent.width == (int32_t) 0x26ab44efb54d1686);
    assert(new_item74.subImage.imageRect.extent.height == (int32_t) 0x5839f9a01215291a);
    assert(new_item74.subImage.imageArrayIndex == (uint32_t) 0x8e0745b13c373315);
    assert(new_item75.type == XR_TYPE_FRAME_STATE);
    assert(new_item75.next == nullptr);
    assert(new_item75.predictedDisplayTime == (XrTime) 0xecdb8197ab877cda);
    assert(new_item75.predictedDisplayPeriod == (XrDuration) 0xcf1844ded0fc1107);
    assert(new_item75.shouldRender == (XrBool32) 0x6f06879877e05edd);
    assert(new_item76.type == XR_TYPE_VIEW_CONFIGURATION_PROPERTIES);
    assert(new_item76.next == nullptr);
    assert(new_item76.viewConfigurationType == (XrViewConfigurationType) 0x8582e262a7eb2f51);
    assert(new_item76.fovMutable == (XrBool32) 0x9f86d63e36362291);
    assert(new_item77.r == (float) 0xa47df49733a108e7);
    assert(new_item77.g == (float) 0x77053b9017cd4929);
    assert(new_item77.b == (float) 0xe23a13f06e94d10e);
    assert(new_item78.type == XR_TYPE_SPACES_LOCATE_INFO);
    assert(((XrFrameBeginInfo*)new_item78.next)[0].type == XR_TYPE_FRAME_BEGIN_INFO);
    assert(((XrFrameBeginInfo*)new_item78.next)[0].next == nullptr);
    assert(new_item78.baseSpace == (XrSpace) 0xbf26750e7dd133ae);
    assert(new_item78.time == (XrTime) 0x49122316d0dcb101);
    assert(new_item78.spaceCount == (uint32_t) 0x10201e6806ba9ec8);
    assert(new_item78.spaces == nullptr);
    assert(new_item79.type == XR_TYPE_VIEW_STATE);
    assert(((XrSessionActionSetsAttachInfo*)new_item79.next)[0].type == XR_TYPE_SESSION_ACTION_SETS_ATTACH_INFO);
    assert(((XrSessionActionSetsAttachInfo*)new_item79.next)[0].next == nullptr);
    assert(((XrSessionActionSetsAttachInfo*)new_item79.next)[0].countActionSets == (uint32_t) 0xf0e637daad4b1588);
    assert(((XrSessionActionSetsAttachInfo*)new_item79.next)[0].actionSets == nullptr);
    assert(new_item79.viewStateFlags == (XrViewStateFlags) 0xf67eb026df6fbba4);
    assert(new_item80.x == (float) 0x694ece383d472ee);
    assert(new_item80.y == (float) 0x61157d42241e5b3d);
    assert(new_item80.z == (float) 0xc5825f913cb4483c);
    assert(new_item81.type == XR_TYPE_VIEW_CONFIGURATION_VIEW);
    assert(new_item81.next == nullptr);
    assert(new_item81.recommendedImageRectWidth == (uint32_t) 0xa8bdeeeaa8072bb2);
    assert(new_item81.maxImageRectWidth == (uint32_t) 0x5f3dc8d9b5f2e4e3);
    assert(new_item81.recommendedImageRectHeight == (uint32_t) 0xeded9651ff70ddff);
    assert(new_item81.maxImageRectHeight == (uint32_t) 0x292de2c0bc6ef05d);
    assert(new_item81.recommendedSwapchainSampleCount == (uint32_t) 0x407ffdf7a9ad33cc);
    assert(new_item81.maxSwapchainSampleCount == (uint32_t) 0xa8309dc6c64e3c65);
    assert(new_item82.width == (int32_t) 0xb42f7bf190d05835);
    assert(new_item82.height == (int32_t) 0xc214800eac48589c);
    assert(new_item83.type == XR_TYPE_COMPOSITION_LAYER_PROJECTION_VIEW);
    assert(new_item83.next == nullptr);
    assert(new_item83.pose.orientation.x == (float) 0x1f52517fd3eccd23);
    assert(new_item83.pose.orientation.y == (float) 0x16e3e0249244a1ca);
    assert(new_item83.pose.orientation.z == (float) 0x11fed6d19d9b8f0d);
    assert(new_item83.pose.orientation.w == (float) 0xb764ca193353896b);
    assert(new_item83.pose.position.x == (float) 0x5586199f4ee374b0);
    assert(new_item83.pose.position.y == (float) 0x541c7af9753fe1fe);
    assert(new_item83.pose.position.z == (float) 0xfe2696d60f5a2c91);
    assert(new_item83.fov.angleLeft == (float) 0x18370d70a5a97423);
    assert(new_item83.fov.angleRight == (float) 0xdb311790dd551dcf);
    assert(new_item83.fov.angleUp == (float) 0x235e11f95345ca4d);
    assert(new_item83.fov.angleDown == (float) 0xa2824a65af07616d);
    assert(new_item83.subImage.swapchain == (XrSwapchain) 0xe9588b54751530e8);
    assert(new_item83.subImage.imageRect.offset.x == (int32_t) 0x3a79ae5fcdec455e);
    assert(new_item83.subImage.imageRect.offset.y == (int32_t) 0x378fb2f08d8cad6d);
    assert(new_item83.subImage.imageRect.extent.width == (int32_t) 0x8ab1c45a84e890bc);
    assert(new_item83.subImage.imageRect.extent.height == (int32_t) 0x18111061d555a058);
    assert(new_item83.subImage.imageArrayIndex == (uint32_t) 0x991fcbbdd85c02ae);
    assert(new_item84.actionSet == (XrActionSet) 0xb0a639e0510a2465);
    assert(new_item84.subactionPath == (XrPath) 0xf6f360e67e5889f0);
    assert(new_item85.velocityFlags == (XrSpaceVelocityFlags) 0x6eab223724a6c590);
    assert(new_item85.linearVelocity.x == (float) 0x4f0e83ea4c410300);
    assert(new_item85.linearVelocity.y == (float) 0x7f66a69eb1d80974);
    assert(new_item85.linearVelocity.z == (float) 0xa0bbb46582a3ffb3);
    assert(new_item85.angularVelocity.x == (float) 0x5ed25d983366e2b7);
    assert(new_item85.angularVelocity.y == (float) 0x9128eee0687a438);
    assert(new_item85.angularVelocity.z == (float) 0x9f0d10c1daf17d77);
    assert(new_item86.offset.x == (float) 0xbb37f24dffb27ec6);
    assert(new_item86.offset.y == (float) 0x2c27049c2e924c5e);
    assert(new_item86.extent.width == (float) 0x83ef6fc03ca691af);
    assert(new_item86.extent.height == (float) 0x12ffa86cebaab300);
    assert(new_item87.type == XR_TYPE_BOUND_SOURCES_FOR_ACTION_ENUMERATE_INFO);
    assert(((XrHapticVibration*)new_item87.next)[0].type == XR_TYPE_HAPTIC_VIBRATION);
    assert(((XrHapticVibration*)new_item87.next)[0].next == nullptr);
    assert(((XrHapticVibration*)new_item87.next)[0].duration == (XrDuration) 0x69aa132e2a49b299);
    assert(((XrHapticVibration*)new_item87.next)[0].frequency == (float) 0x99bffd8837f06f11);
    assert(((XrHapticVibration*)new_item87.next)[0].amplitude == (float) 0xb1896ea7409a8aa8);
    assert(new_item87.action == (XrAction) 0x83a466fdb65baeb6);
    assert(new_item88.width == (float) 0x3074a99b82a736a8);
    assert(new_item88.height == (float) 0x38aff6c6fa483af9);
    assert(new_item88.depth == (float) 0x4ae4ee9f98f76e45);
    assert(new_item89.type == XR_TYPE_EVENT_DATA_REFERENCE_SPACE_CHANGE_PENDING);
    assert(new_item89.next == nullptr);
    assert(new_item89.session == (XrSession) 0x2b3d9291d1c65ac3);
    assert(new_item89.referenceSpaceType == (XrReferenceSpaceType) 0x5769fc550f452ac1);
    assert(new_item89.changeTime == (XrTime) 0xcd5fb5b0185e7b43);
    assert(new_item89.poseValid == (XrBool32) 0x352d121ede07fff2);
    assert(new_item89.poseInPreviousSpace.orientation.x == (float) 0x8a0ef9d8a7975d16);
    assert(new_item89.poseInPreviousSpace.orientation.y == (float) 0x6d453c06f1b56a9a);
    assert(new_item89.poseInPreviousSpace.orientation.z == (float) 0x34b8c1e3c03cc5e4);
    assert(new_item89.poseInPreviousSpace.orientation.w == (float) 0x8474335f96fef440);
    assert(new_item89.poseInPreviousSpace.position.x == (float) 0xb708f3ceb05f1e0c);
    assert(new_item89.poseInPreviousSpace.position.y == (float) 0x7603b0fc59aa2ed7);
    assert(new_item89.poseInPreviousSpace.position.z == (float) 0x189e421cf030024b);
    for (int i = 0; i < XR_MAX_APPLICATION_NAME_SIZE; i++) {
        assert(new_item90.applicationName[i] == 'R');
    }
    assert(new_item90.applicationVersion == (uint32_t) 0x17a16f5a89560159);
    for (int i = 0; i < XR_MAX_ENGINE_NAME_SIZE; i++) {
        assert(new_item90.engineName[i] == 'W');
    }
    assert(new_item90.engineVersion == (uint32_t) 0x257e01bd066ae050);
    assert(new_item90.apiVersion == (XrVersion) 0xa29a61d3e06a6e05);
    assert(new_item91.orientation.x == (float) 0xdd4fffacc9222726);
    assert(new_item91.orientation.y == (float) 0xc18c0fe0e3d3deca);
    assert(new_item91.orientation.z == (float) 0x8a0945f9454de24a);
    assert(new_item91.orientation.w == (float) 0xd3c57f12cd8bebfe);
    assert(new_item91.position.x == (float) 0x3b55a1af24654c34);
    assert(new_item91.position.y == (float) 0x356ec0b1f45562be);
    assert(new_item91.position.z == (float) 0x1fad098bf410d9d4);
    assert(new_item92.type == XR_TYPE_FRAME_BEGIN_INFO);
    assert(((XrSpaceVelocities*)new_item92.next)[0].type == XR_TYPE_SPACE_VELOCITIES);
    assert(((XrSpaceVelocities*)new_item92.next)[0].next == nullptr);
    assert(((XrSpaceVelocities*)new_item92.next)[0].velocityCount == (uint32_t) 0xea1d0b3d89d1ba1b);
    assert(((XrSpaceVelocities*)new_item92.next)[0].velocities == nullptr);
    assert(new_item93.type == XR_TYPE_EVENT_DATA_INTERACTION_PROFILE_CHANGED);
    assert(((XrInstanceProperties*)new_item93.next)[0].type == XR_TYPE_INSTANCE_PROPERTIES);
    assert(((XrInstanceProperties*)new_item93.next)[0].next == nullptr);
    assert(((XrInstanceProperties*)new_item93.next)[0].runtimeVersion == (XrVersion) 0xb368f7e7f4d238a3);
    for (int i = 0; i < XR_MAX_RUNTIME_NAME_SIZE; i++) {
        assert(((XrInstanceProperties*)new_item93.next)[0].runtimeName[i] == 'x');
    }
    assert(new_item93.session == (XrSession) 0x2e1010f8f95e72cc);
    assert(new_item94.type == XR_TYPE_SWAPCHAIN_CREATE_INFO);
    assert(new_item94.next == nullptr);
    assert(new_item94.createFlags == (XrSwapchainCreateFlags) 0xbff22a0988e93a62);
    assert(new_item94.usageFlags == (XrSwapchainUsageFlags) 0x9deb978739564ccb);
    assert(new_item94.format == (int64_t) 0x3d0ac758a3325008);
    assert(new_item94.sampleCount == (uint32_t) 0xaf62bf68a692f39f);
    assert(new_item94.width == (uint32_t) 0xc1403877108b9687);
    assert(new_item94.height == (uint32_t) 0xd546d2f66dc8ec49);
    assert(new_item94.faceCount == (uint32_t) 0xc644b53df279b219);
    assert(new_item94.arraySize == (uint32_t) 0x6521bca8e7c88d92);
    assert(new_item94.mipCount == (uint32_t) 0x2843b4f8f3bed721);
    assert(new_item95.action == (XrAction) 0x184c441014a1de7);
    assert(new_item95.binding == (XrPath) 0x57bafe92a27b68f5);
    assert(new_item96.x == (float) 0x4a978f211ef14a9a);
    assert(new_item96.y == (float) 0x87a4b2170a1dce63);
    assert(new_item96.z == (float) 0x9c6aaa70193b0953);
    assert(new_item96.w == (float) 0xca3e942032da25f4);
    assert(new_item97.type == XR_TYPE_SPACE_VELOCITIES);
    assert(new_item97.next == nullptr);
    assert(new_item97.velocityCount == 1);
    assert(new_item97.velocities[0].velocityFlags == (XrSpaceVelocityFlags) 0x49ea46287410d595);
    assert(new_item97.velocities[0].linearVelocity.x == (float) 0xfdd8e85409bc772e);
    assert(new_item97.velocities[0].linearVelocity.y == (float) 0x34f95d3cecd9c7e);
    assert(new_item97.velocities[0].linearVelocity.z == (float) 0x3cfb0d3dca65231d);
    assert(new_item97.velocities[0].angularVelocity.x == (float) 0x999af5e0d9767259);
    assert(new_item97.velocities[0].angularVelocity.y == (float) 0xe4d03c1b9b1988f5);
    assert(new_item97.velocities[0].angularVelocity.z == (float) 0x8af0d1f2f6320869);
    assert(new_item98.type == XR_TYPE_HAPTIC_ACTION_INFO);
    assert(((XrSpaceLocation*)new_item98.next)[0].type == XR_TYPE_SPACE_LOCATION);
    assert(((XrSpaceLocation*)new_item98.next)[0].next == nullptr);
    assert(((XrSpaceLocation*)new_item98.next)[0].locationFlags == (XrSpaceLocationFlags) 0xd19362cbed2fd7a4);
    assert(((XrSpaceLocation*)new_item98.next)[0].pose.orientation.x == (float) 0x7e3307c3a85f1abc);
    assert(((XrSpaceLocation*)new_item98.next)[0].pose.orientation.y == (float) 0x4f9a98558b0e99d1);
    assert(((XrSpaceLocation*)new_item98.next)[0].pose.orientation.z == (float) 0x1b6fc0e475115b08);
    assert(((XrSpaceLocation*)new_item98.next)[0].pose.orientation.w == (float) 0xcf9bdf01f2f43e6d);
    assert(((XrSpaceLocation*)new_item98.next)[0].pose.position.x == (float) 0xc2ec0c71ed70cdfa);
    assert(((XrSpaceLocation*)new_item98.next)[0].pose.position.y == (float) 0x63da0f80ec6791fd);
    assert(((XrSpaceLocation*)new_item98.next)[0].pose.position.z == (float) 0x8b618bd9108d7344);
    assert(new_item98.action == (XrAction) 0x5defd5ae717f9b51);
    assert(new_item98.subactionPath == (XrPath) 0x3297427a279aef6c);
    assert(new_item99.offset.x == (float) 0x6a60b28e9329b796);
    assert(new_item99.offset.y == (float) 0x108a9d062e5073b4);
    assert(new_item99.extent.width == (float) 0x53788c18f9aa2bf0);
    assert(new_item99.extent.height == (float) 0x4ed6fe15d939a770);

    std::cout << "Fuzzer passed" << std::endl;

    return 0;
}